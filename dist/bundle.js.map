{"version":3,"sources":["webpack://IRISTimelineViewer/webpack/universalModuleDefinition","webpack://IRISTimelineViewer/webpack/bootstrap","webpack://IRISTimelineViewer/./node_modules/dc/dc.js","webpack://IRISTimelineViewer/./node_modules/d3/d3.js","webpack://IRISTimelineViewer/./src/components/charts/chart.js","webpack://IRISTimelineViewer/./src/components/event-emitter.js","webpack://IRISTimelineViewer/./node_modules/crossfilter/index.js","webpack://IRISTimelineViewer/./src/_app.js","webpack://IRISTimelineViewer/./src/components/timelineviewer.component.js","webpack://IRISTimelineViewer/./node_modules/crossfilter/crossfilter.js","webpack://IRISTimelineViewer/./src/components/charts/linechart.js","webpack://IRISTimelineViewer/./src/components/charts/areachart.js","webpack://IRISTimelineViewer/./src/components/charts/barchart.js","webpack://IRISTimelineViewer/./src/components/charts/datatable.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","d3","crossfilter","dc","version","constants","CHART_CLASS","DEBUG_GROUP_CLASS","STACK_CLASS","DESELECTED_CLASS","SELECTED_CLASS","NODE_INDEX_NAME","GROUP_INDEX_NAME","DEFAULT_CHART_GROUP","EVENT_DELAY","NEGLIGIBLE_NUMBER","_renderlet","chartRegistry","_chartMap","initializeChartGroup","group","has","chart","e","indexOf","register","push","clear","list","registerChart","hasChart","deregisterAllCharts","filterAll","charts","length","renderAll","render","redrawAll","redraw","transition","selections","duration","callback","Function","units","integers","Math","abs","ordinal","domain","fp","precision","_f","resolution","utils","isNegligible","floor","ceil","round","override","obj","functionName","newFunction","existingFunction","renderlet","_","arguments","instanceOfChart","__dc_flag__","errors","Exception","msg","_msg","this","message","toString","InvalidStateException","apply","dateFormat","time","format","printers","filters","filter","Array","printSingleValue","Date","isFloat","fformat","isInteger","add","replace","setTime","getTime","setDate","getDate","percentage","subtract","GroupStack","_defaultAccessor","_dataLayers","_groups","initializeDataLayer","setDataPoint","layerIndex","pointIndex","data","getDataPoint","x","y","dataPoint","addGroup","accessor","getGroupByIndex","index","getAccessorByIndex","size","setDefaultAccessor","retriever","getDataLayers","toLayers","layers","layer","points","dataPoints","j","isNumber","max","groupMax","all","groupMin","min","nameToId","toLowerCase","appendOrSelect","parent","element","select","empty","append","createLegendable","legendable","_getGroupName","colors","color","safeNumber","events","current","trigger","closure","delay","setTimeout","cumulative","Base","_keyIndex","_map","sanitizeKey","getValueByKey","setValueByKey","indexOfKey","addToIndex","getKeyByIndex","Sum","minus","cumulativeSum","keyIndex","cumulativeValue","k","CountUnique","count","hash","hashSize","cumulativeCount","baseChart","_chart","_dimension","_group","_anchor","_root","_svg","_legend","_width","_height","_keyAccessor","_valueAccessor","_ordering","_label","_renderLabel","_title","_renderTitle","_transitionDuration","_filterPrinter","_renderlets","_chartGroup","NULL_LISTENER","_listeners","preRender","postRender","preRedraw","postRedraw","filtered","zoomed","_filters","_filterHandler","dimension","filterFunction","groupName","g","anchor","valueAccessor","a","applyFilters","dataSet","fs","runAllRenderlets","width","w","height","h","expireCache","_setGroupName","ordering","computeOrderedGroups","arr","slice","quicksort","by","sort","selectAll","chartGroup","classed","anchorName","id","svg","resetSvg","remove","attr","filterPrinter","turnOnControls","style","text","turnOffControls","transitionDuration","result","doRender","activateRenderlets","event","each","doRedraw","_invokeFilteredListener","f","_invokeZoomedListener","hasFilter","splice","removeFilter","addFilter","highlightSelected","fadeDeselected","resetHighlight","onClick","keyAccessor","filterHandler","legendables","legendHighlight","legendReset","label","renderLabel","title","renderTitle","legend","on","listener","marginable","_margin","top","right","bottom","left","margins","effectiveWidth","effectiveHeight","coordinateGridChart","_parent","_g","_chartBodyG","_x","_xOriginalDomain","GRID_LINE_CLASS","HORIZONTAL_CLASS","VERTICAL_CLASS","colorChart","scale","category10","_xAxisLabel","_y","_yAxisLabel","_round","_unitCount","_rangeChart","_focusChart","_xAxis","axis","_xUnits","_xAxisPadding","_xElasticity","_xAxisLabelPadding","_yAxis","_yAxisPadding","_yElasticity","_yAxisLabelPadding","_brush","brush","_brushOn","_renderHorizontalGridLine","_renderVerticalGridLine","_refocused","_zoomScale","_zoomOutRestrict","_mouseZoomable","_clipPadding","prepareXAxis","elasticX","isOrdinal","xAxisMin","xAxisMax","map","kv","prepareOrdinalXAxis","range","xAxisLength","orient","gridLineG","insert","yAxisX","ticks","tickValues","lines","linesGEnter","enter","xAxisY","exit","renderVerticalGridLines","prepareYAxis","elasticY","linear","yAxisMin","yAxisMax","rangeRound","yAxisHeight","renderHorizontalGridLines","brushHeight","brushing","extent","extendBrush","redrawBrush","brushIsEmpty","getClipPathId","hasRangeSelected","rescale","xUnitCount","rangeChart","focusChart","zoomScale","zoomOutRestrict","_generateG","mouseZoomable","z","chartBodyG","xOriginalDomain","xUnits","xAxis","xAxisPadding","increment","currentPosition","renderXAxis","axisXG","axisXLab","xAxisLabel","axisYLab","pad","renderYAxis","axisYG","yAxisLabel","yAxis","yAxisPadding","_filter","renderBrush","gBrush","resizeHandlePath","fadeDeselectedArea","clipPadding","defs","chartBodyClip","padding","plotData","behavior","zoom","scaleExtent","focus","refDom","origDom","newDom","updateRangeSelChart","subRender","brushOn","refocused","_colors","category20c","_colorDomain","_colorCalculator","minValue","maxValue","isNaN","colorsLength","denominator","colorValue","_colorAccessor","colorCalculator","getColor","colorAccessor","colorDomain","stackableChart","_allGroups","_allValueAccessors","_allKeyAccessors","_stackLayers","_groupStack","_stackLayout","layout","stack","offset","order","values","flattenStack","test","xDomain","domainSet","set","stackLayers","forEach","concat","getKeyFromData","groupIndex","getKeyAccessorByIndex","getValueFromData","getValueAccessorByIndex","calculateDataPointMatrix","dataIndex","p2","allGroups","allValueAccessors","y0","allKeyAccessors","calculateDataPointMatrixForAll","groups","getChartStack","stackLayout","items","abstractBubbleChart","_maxBubbleRelativeSize","_minRadiusWithLabel","BUBBLE_NODE_CLASS","BUBBLE_CLASS","MIN_RADIUS","_r","_rValueAccessor","radiusValueAccessor","rMin","rMax","bubbleR","labelFunction","labelOpacity","doRenderLabel","bubbleGEnter","doUpdateLabels","labels","titleFunction","doRenderTitles","doUpdateTitles","minRadiusWithLabel","maxBubbleRelativeSize","initBubbleColor","updateBubbleColor","isSelectedNode","pieChart","_radius","_sliceCssClass","_innerRadius","_minAngleForLabel","capped","drawChart","pie","arc","buildArcs","pieData","assembleCappedData","slices","slicesEnter","createSliceNodes","safeArc","attrTween","tweenPie","createSlicePath","createTitles","labelsEnter","innerRadius","outerRadius","centroid","sliceHasNoData","sliceTooSmall","createLabels","createElements","slicePaths","updateSlicePaths","updateLabels","updateTitles","updateElements","removeElements","isSelectedSlice","angle","endAngle","startAngle","b","_current","isOffCanvas","interpolate","path","slicesCap","cap","cx","cy","radius","minAngleForLabel","barChart","_numberOfBars","_barWidth","MIN_BAR_WIDTH","_gap","_centerBar","barHeight","getNumberOfBars","_rescale","numberOfBars","Infinity","calculateBarWidth","bars","renderBars","start","end","xValue","centerBar","gap","lineChart","_defined","TOOLTIP_G_CLASS","DOT_CIRCLE_CLASS","Y_AXIS_REF_LINE_CLASS","X_AXIS_REF_LINE_CLASS","_renderArea","_dotRadius","_interpolate","_tension","safeD","layersEnter","line","tension","defined","drawLine","area","drawArea","createRefLines","dots","datum","dot","showDot","showRefLines","hideDot","hideRefLines","drawDots","renderArea","dotRadius","dataCount","_formatNumber","dataTable","_sort","LABEL_CSS_CLASS","ROW_CSS_CLASS","COLUMN_CSS_CLASS","GROUP_CSS_CLASS","_size","_columns","_sortBy","_order","ascending","rowGroup","rows","rowEnter","html","renderRows","entries","nest","sortKeys","sortValues","nestEntries","columns","sortBy","bubbleChart","_elasticRadius","bubbleLocator","elasticRadius","bubbleG","renderNodes","updateNodes","removeNodes","compositeChart","SUB_CHART_CLASS","_children","generateChildG","child","__generateG","compose","children","allMins","getAllYAxisMinFromChildCharts","allMaxes","getAllYAxisMaxFromChildCharts","getAllXAxisMinFromChildCharts","getAllXAxisMaxFromChildCharts","childChart","childLegendables","geoChoroplethChart","_projectionFlag","_geoPath","geo","_geoJsons","groupAll","generateLayeredData","geoJson","isDataLayer","regionG","layerSelector","isSelected","isDeselected","layerNameClass","regionClass","baseClasses","renderRegionG","paths","currentFill","renderPaths","getKey","selectedRegion","overlayGeoJson","json","projection","geoJsons","removeGeoJson","bubbleOverlay","BUBBLE_OVERLAY_CLASS","_points","mapData","getNodeG","point","bubbleNodeClass","nodeG","circle","debug","flag","debugG","debugText","position","mouse","node","rowChart","_elasticX","_rowData","_labelOffsetX","_labelOffsetY","_rowCssClass","drawAxis","axisG","calculateAxisScale","rect","isSelectedRow","translateX","lab","x0","rowsCap","labelOffsetX","labelOffsetY","_itemHeight","itemEnter","clientHeight","itemHeight","_cap","_othersLabel","_othersGrouper","topRows","topRowsSum","sum","allRows","allRowsSum","topKeys","allKeys","topSet","others","othersLabel","othersGrouper","_onClick","numberDisplay","valObj","newValue","span","ease","tween","interp","interpolateNumber","lastValue","textContent","formatNumber","d3_arraySlice","d3_array","d3_document","document","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","now","createElement","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","descending","mean","quantile","H","v","median","numbers","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","merge","arrays","merged","d3_class","ctor","properties","d3_Map","stop","step","Error","d3_range_integerScale","isArray","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","rollup","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","requote","d3_requote_re","d3_subclass","__proto__","d3_selection","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","subgroups","parentNode","__data__","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","prefix","getAttributeNS","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","before","insertBefore","groupData","nodeData","n0","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","scrollX","scrollY","ctm","margin","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_sinh","translate0","center0","center","mousewheelTimer","touchtime","x1","y1","view","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","invert","zoomstarted","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","join","parseRows","JSON","stringify","eol","EOL","EOF","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTimezoneOffset","valueOf","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","d3_time_interval","number","date","d0","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","M","L","Z","d3_time_parse","localZ","W","U","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","compareRanges","withinRange","best","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","projectStream","contextStream","cacheStream","transform","methods","projectionMutator","equirectangular","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","visit","d3_geom_quadtreeVisit","sx","sy","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","bundle","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","subgroupIndex","di","dj","subindex","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","sticky","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_category10","category20","d3_category20","category20b","d3_category20b","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","styleNull","styleTween","inheritId","id0","id1","tickFormat_","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","responseXML","Chart","containerId","timeline","_classCallCheck","_initializeEvents","_containerId","_timeline","eventName","_eventEmitter","emit","_selectionRange","_dcChart","setSelectionRange","timeGranularity","getOption","_currentStartDate","_currentEndDate","decrement","chartConstructor","_this","brushable","startDate","endDate","_filtering","_this2","EventEmitter","_updateDcChartSelectionRange","_initializeInteractions","earliestDate","latestDate","logger","_events","arg1","arg2","arg3","fn","_timelineviewer","TimelineViewer","TV","div","options","_rootDiv","_options","assign","DEFAULT_OPTIONS","_containerElement","className","CSS_CONTAINER","_attributionElement","CSS_ATTR","_data","_initializeChart","dDate","singular","dataCountHandler","dataDateHandler","dataDateFormat","displayChartType","displayInteractionType","displayHeight","displayWidth","displayMargins","displayStartDate","displayEndDate","displayScale","displayTicks","displayColors","displayNavigationStep","dataTableSize","dataTableColumns","dataTableGroupingRule","dataTableContainerId","_dataTable","DataTable","optionName","optionValue","selectionRange","getSelectionRange","getData","clearSelectionRange","setFilter","earliestDataItem","_dateOrderComparator","latestDataItem","nextPeriod","previousPeriod","_parseDataDates","_setupDcProperties","_initializeDates","dateChangedFn","_handleDataClick","_handleDataBrush","getSelectedData","LineChart","AreaChart","BarChart","_ndx","_crossfilter2","reduceSum","NAME","VERSION","crossfilter_identity","bisect_by","heap_by","heap","sift","heapselect_by","insertionsort_by","quicksort_by","insertionsort","quicksort_sizeThreshold","sixth","i5","i3","i2","i4","e2","e3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","heapselect","crossfilter_array8","crossfilter_arrayUntyped","crossfilter_array16","crossfilter_array32","crossfilter_arrayLengthen","crossfilter_arrayWiden","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","crossfilter_reduceDecrement","crossfilter_reduceAdd","crossfilter_reduceSubtract","newIndex","crossfilter_index","removed","filterListeners","removeDataListeners","newValues","refilterFunction","filterRange","filterExact","hi0","lo0","orderNatural","dispose","one","refilter","indexListeners","dimensionGroups","dataListeners","preAdd","postAdd","removeData","newData","crossfilter_range","lo1","hi1","oldValues","oldIndex","reIndex","filterIndexBounds","filterIndexFunction","added","crossfilter_filterExact","crossfilter_filterRange","reduceCount","reduceAdd","reduceRemove","reduceInitial","groupWidth","groupCapacity","crossfilter_capacity","resetNeeded","g0","oldGroups","initial","k0","groupIncrement","updateMany","resetMany","updateOne","resetOne","oldK","seenGroups","filterOne","reduceValue","Uint8Array","Uint16Array","Uint32Array","constructor","groupingRule","_dcDataTable"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,mBAAAD,IAEAD,EAAA,mBAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,qBClFA,IAAAC,EAAAC,EAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAkBA,WAwwKQD,EAAO,CAACnC,EAAA,GAAMA,EAAA,SAAmBqC,KAAAD,EAAA,mBAALF,EAxwKvB,SAAAI,EAAAC,GACb,aAuCA,IAAAC,EAAA,CACAC,QAAA,QACAC,UAAA,CACAC,YAAA,WACAC,kBAAA,QACAC,YAAA,QACAC,iBAAA,aACAC,eAAA,WACAC,gBAAA,YACAC,iBAAA,kBACAC,oBAAA,0BACAC,YAAA,GACAC,kBAAA,OAEAC,WAAA,MAgtKA,OA7sKAb,EAAAc,cAAA,WAEA,IAAAC,EAAA,GAEA,SAAAC,EAAAC,GAOA,OANAA,IACAA,EAAAjB,EAAAE,UAAAQ,qBAEAK,EAAAE,KACAF,EAAAE,GAAA,IAEAA,EAGA,OACAC,IAAA,SAAAC,GACA,QAAAC,KAAAL,EACA,GAAAA,EAAAK,GAAAC,QAAAF,IAAA,EACA,SAEA,UAGAG,SAAA,SAAAH,EAAAF,GACAA,EAAAD,EAAAC,GACAF,EAAAE,GAAAM,KAAAJ,IAGAK,MAAA,WACAT,EAAA,IAGAU,KAAA,SAAAR,GAEA,OADAA,EAAAD,EAAAC,GACAF,EAAAE,KAlCA,GAuCAjB,EAAA0B,cAAA,SAAAP,EAAAF,GACAjB,EAAAc,cAAAQ,SAAAH,EAAAF,IAGAjB,EAAA2B,SAAA,SAAAR,GACA,OAAAnB,EAAAc,cAAAI,IAAAC,IAGAnB,EAAA4B,oBAAA,WACA5B,EAAAc,cAAAU,SAYAxB,EAAA6B,UAAA,SAAAZ,GAEA,IADA,IAAAa,EAAA9B,EAAAc,cAAAW,KAAAR,GACAvD,EAAA,EAAmBA,EAAAoE,EAAAC,SAAmBrE,EACtCoE,EAAApE,GAAAmE,aASA7B,EAAAgC,UAAA,SAAAf,GAEA,IADA,IAAAa,EAAA9B,EAAAc,cAAAW,KAAAR,GACAvD,EAAA,EAAmBA,EAAAoE,EAAAC,SAAmBrE,EACtCoE,EAAApE,GAAAuE,SAGA,OAAAjC,EAAAa,YACAb,EAAAa,WAAAI,IASAjB,EAAAkC,UAAA,SAAAjB,GAEA,IADA,IAAAa,EAAA9B,EAAAc,cAAAW,KAAAR,GACAvD,EAAA,EAAmBA,EAAAoE,EAAAC,SAAmBrE,EACtCoE,EAAApE,GAAAyE,SAGA,OAAAnC,EAAAa,YACAb,EAAAa,WAAAI,IAGAjB,EAAAoC,WAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAD,GAAA,QAAAzC,IAAAyC,EACA,OAAAD,EAEA,IAAA5C,EAAA4C,EACAD,aACAE,YAMA,OAJAC,aAAAC,UACAD,EAAA9C,GAGAA,GAGAO,EAAAyC,MAAA,GASAzC,EAAAyC,MAAAC,SAAA,SAAAjD,EAAA2B,GACA,OAAAuB,KAAAC,IAAAxB,EAAA3B,IAQAO,EAAAyC,MAAAI,QAAA,SAAApD,EAAA2B,EAAA0B,GACA,OAAAA,GASA9C,EAAAyC,MAAAM,GAAA,GACA/C,EAAAyC,MAAAM,GAAAC,UAAA,SAAAA,GACA,IAAAC,EAAA,SAAAxD,EAAA2B,GACA,IAAApD,EAAA2E,KAAAC,KAAAxB,EAAA3B,GAAAwD,EAAAC,YACA,OAAAlD,EAAAmD,MAAAC,aAAApF,EAAA2E,KAAAU,MAAArF,IACA2E,KAAAU,MAAArF,GAEA2E,KAAAW,KAAAtF,IAGA,OADAiF,EAAAC,WAAAF,EACAC,GAGAjD,EAAAuD,MAAA,GACAvD,EAAAuD,MAAAF,MAAA,SAAAlE,GACA,OAAAwD,KAAAU,MAAAlE,IAEAa,EAAAuD,MAAAD,KAAA,SAAAnE,GACA,OAAAwD,KAAAW,KAAAnE,IAEAa,EAAAuD,YAAA,SAAApE,GACA,OAAAwD,KAAAY,MAAApE,IAGAa,EAAAwD,SAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAC,GACAD,EAAA,IAAAC,GAAAE,EACAH,EAAAC,GAAAC,GAGA3D,EAAA6D,UAAA,SAAAC,GACA,OAAAC,UAAAhC,QACA/B,EAAAa,WAAAiD,EACA9D,GAFAA,EAAAa,YAKAb,EAAAgE,gBAAA,SAAA7F,GACA,OAAAA,aAAAC,QAAAD,EAAA8F,aAGAjE,EAAAkE,OAAA,GAEAlE,EAAAkE,OAAAC,UAAA,SAAAC,GACA,IAAAC,OAAAxE,IAAAuE,IAAA,4BAEAE,KAAAC,QAAAF,EAEAC,KAAAE,SAAA,WACA,OAAAH,IAIArE,EAAAkE,OAAAO,sBAAA,WACAzE,EAAAkE,OAAAC,UAAAO,MAAAJ,KAAAP,YAGA/D,EAAA2E,WAAA7E,EAAA8E,KAAAC,OAAA,YAEA7E,EAAA8E,SAAA,GAEA9E,EAAA8E,SAAAC,QAAA,SAAAA,GAGA,IAFA,IAAAtF,EAAA,GAEA/B,EAAA,EAAmBA,EAAAqH,EAAAhD,SAAoBrE,EACvCA,EAAA,IAAA+B,GAAA,MACAA,GAAAO,EAAA8E,SAAAE,OAAAD,EAAArH,IAGA,OAAA+B,GAGAO,EAAA8E,SAAAE,OAAA,SAAAA,GACA,IAAAvF,EAAA,GAaA,OAXAuF,IACAA,aAAAC,MACAD,EAAAjD,QAAA,EACAtC,EAAA,IAAAO,EAAAmD,MAAA+B,iBAAAF,EAAA,WAAAhF,EAAAmD,MAAA+B,iBAAAF,EAAA,QACAA,EAAAjD,QAAA,IACAtC,EAAAO,EAAAmD,MAAA+B,iBAAAF,EAAA,KAEAvF,EAAAO,EAAAmD,MAAA+B,iBAAAF,IAIAvF,GAGAO,EAAAmD,MAAA,GAEAnD,EAAAmD,MAAA+B,iBAAA,SAAAF,GACA,IAAAvF,EAAA,GAAAuF,EAWA,OATAA,aAAAG,KACA1F,EAAAO,EAAA2E,WAAAK,GACA,mBACAvF,EAAAuF,EACAhF,EAAAmD,MAAAiC,QAAAJ,GACAvF,EAAAO,EAAAmD,MAAA+B,iBAAAG,QAAAL,GACAhF,EAAAmD,MAAAmC,UAAAN,KACAvF,EAAAkD,KAAAY,MAAAyB,IAEAvF,GAEAO,EAAAmD,MAAA+B,iBAAAG,QAAAvF,EAAA+E,OAAA,OAEA7E,EAAAmD,MAAAoC,IAAA,SAAA5H,EAAAa,GAIA,GAHA,iBAAAA,IACAA,IAAAgH,QAAA,SAEA7H,aAAAwH,KAAA,CACA,iBAAA3G,UACA,IAAAR,EAAA,IAAAmH,KAGA,OAFAnH,EAAAyH,QAAA9H,EAAA+H,WACA1H,EAAA2H,QAAAhI,EAAAiI,UAAApH,GACAR,EACK,oBAAAQ,EAAA,CACL,IAAAqH,GAAArH,EAAA,IACA,OAAAb,EAAA,EAAAA,GAAA,EAAAkI,GAAAlI,GAAA,EAAAkI,GAEA,OAAAlI,EAAAa,GAIAwB,EAAAmD,MAAA2C,SAAA,SAAAnI,EAAAa,GAIA,GAHA,iBAAAA,IACAA,IAAAgH,QAAA,SAEA7H,aAAAwH,KAAA,CACA,iBAAA3G,UACA,IAAAR,EAAA,IAAAmH,KAGA,OAFAnH,EAAAyH,QAAA9H,EAAA+H,WACA1H,EAAA2H,QAAAhI,EAAAiI,UAAApH,GACAR,EACK,oBAAAQ,EAAA,CACL,IAAAqH,GAAArH,EAAA,IACA,OAAAb,EAAA,EAAAA,GAAA,EAAAkI,GAAAlI,GAAA,EAAAkI,GAEA,OAAAlI,EAAAa,GAIAwB,EAAAmD,MAAA4C,WAAA,WACA,IAEAC,EAFAC,EAAA,KACAC,EAAA,GAGA,SAAAC,EAAAzI,GACAuI,EAAAvI,KACAuI,EAAAvI,GAAA,IAGA4G,KAAA8B,aAAA,SAAAC,EAAAC,EAAAC,GACAJ,EAAAE,GACAJ,EAAAI,GAAAC,GAAAC,GAGAjC,KAAAkC,aAAA,SAAAC,EAAAC,GACAP,EAAAM,GACA,IAAAE,EAAAV,EAAAQ,GAAAC,GAGA,YAFA7G,IAAA8G,IACAA,EAAA,GACAA,GAGArC,KAAAsC,SAAA,SAAA3F,EAAA4F,GAIA,OAHAA,IACAA,EAAAb,GACAE,EAAA3E,KAAA,CAAAN,EAAA4F,IACAX,EAAAnE,OAAA,GAGAuC,KAAAwC,gBAAA,SAAAC,GACA,OAAAb,EAAAa,GAAA,IAGAzC,KAAA0C,mBAAA,SAAAD,GACA,OAAAb,EAAAa,GAAA,IAGAzC,KAAA2C,KAAA,WACA,OAAAf,EAAAnE,QAGAuC,KAAA9C,MAAA,WACAyE,EAAA,GACAC,EAAA,IAGA5B,KAAA4C,mBAAA,SAAAC,GACAnB,EAAAmB,GAGA7C,KAAA8C,cAAA,WACA,OAAAnB,GAGA3B,KAAA+C,SAAA,WAGA,IAFA,IAAAC,EAAA,GAEA5J,EAAA,EAAuBA,EAAAuI,EAAAlE,SAAwBrE,EAAA,CAI/C,IAHA,IAAA6J,EAAA,CAAyBR,MAAArJ,EAAA8J,OAAA,IACzBC,EAAAxB,EAAAvI,GAEAgK,EAAA,EAA2BA,EAAAD,EAAA1F,SAAuB2F,EAClDH,EAAAC,OAAAjG,KAAAkG,EAAAC,IAEAJ,EAAA/F,KAAAgG,GAGA,OAAAD,IAIAtH,EAAAmD,MAAAwE,SAAA,SAAAxI,GACA,OAAAA,QAGAa,EAAAmD,MAAAiC,QAAA,SAAAjG,GACA,OAAAA,aAAA,EAAAA,IAGAa,EAAAmD,MAAAmC,UAAA,SAAAnG,GACA,OAAAA,aAAA,EAAAA,IAGAa,EAAAmD,MAAAC,aAAA,SAAAwE,GACA,YAAA/H,IAAA+H,KAAA5H,EAAAE,UAAAU,mBAAAgH,GAAA5H,EAAAE,UAAAU,mBAGAZ,EAAAmD,MAAA0E,SAAA,SAAA5G,EAAA4F,GACA,IAAAe,EAAA9H,EAAA8H,IAAA3G,EAAA6G,MAAA,SAAA1G,GACA,OAAAyF,EAAAzF,KAGA,OADApB,EAAAmD,MAAAC,aAAAwE,OAAA,GACAA,GAGA5H,EAAAmD,MAAA4E,SAAA,SAAA9G,EAAA4F,GACA,IAAAmB,EAAAlI,EAAAkI,IAAA/G,EAAA6G,MAAA,SAAA1G,GACA,OAAAyF,EAAAzF,KAGA,OADApB,EAAAmD,MAAAC,aAAA4E,OAAA,GACAA,GAGAhI,EAAAmD,MAAA8E,SAAA,SAAAhK,GACA,OAAAA,EAAAiK,cAAA1C,QAAA,aAAAA,QAAA,cAGAxF,EAAAmD,MAAAgF,eAAA,SAAAC,EAAAnK,GACA,IAAAoK,EAAAD,EAAAE,OAAArK,GAEA,OADAoK,EAAAE,UAAAF,EAAAD,EAAAI,OAAAvK,IACAoK,GAGArI,EAAAmD,MAAAsF,iBAAA,SAAAtH,EAAAF,EAAA8F,EAAAF,GACA,IAAA6B,EAAA,CAAsBzK,KAAAkD,EAAAwH,cAAA1H,EAAA4F,GAAAN,KAAAtF,GAEtB,MADA,mBAAAE,EAAAyH,SAAAF,EAAAG,MAAA1H,EAAAyH,QAAAzH,CAAA4F,IACA2B,GAGA1I,EAAAmD,MAAA2F,WAAA,SAAA3J,GAAkC,OAAAa,EAAAmD,MAAAwE,UAAAxI,MAAA,GAElCa,EAAA+I,OAAA,CACAC,QAAA,MAoBAhJ,EAAA+I,OAAAE,QAAA,SAAAC,EAAAC,GACAA,GAKAnJ,EAAA+I,OAAAC,QAAAE,EAEAE,WAAA,WACAF,GAAAlJ,EAAA+I,OAAAC,SACAE,KACKC,IATLD,KAYAlJ,EAAAqJ,WAAA,GAEArJ,EAAAqJ,WAAAC,KAAA,WACAhF,KAAAiF,UAAA,GACAjF,KAAAkF,KAAA,GAEAlF,KAAAmF,YAAA,SAAAxK,GAEA,OADAA,GAAA,IAIAqF,KAAA9C,MAAA,WACA8C,KAAAiF,UAAA,GACAjF,KAAAkF,KAAA,IAGAlF,KAAA2C,KAAA,WACA,OAAA3C,KAAAiF,UAAAxH,QAGAuC,KAAAoF,cAAA,SAAAzK,GAGA,OAFAA,EAAAqF,KAAAmF,YAAAxK,GACAqF,KAAAkF,KAAAvK,IAIAqF,KAAAqF,cAAA,SAAA1K,EAAAN,GAEA,OADAM,EAAAqF,KAAAmF,YAAAxK,GACAqF,KAAAkF,KAAAvK,GAAAN,GAGA2F,KAAAsF,WAAA,SAAA3K,GAEA,OADAA,EAAAqF,KAAAmF,YAAAxK,GACAqF,KAAAiF,UAAAlI,QAAApC,IAGAqF,KAAAuF,WAAA,SAAA5K,GACAA,EAAAqF,KAAAmF,YAAAxK,GACAqF,KAAAiF,UAAAhI,KAAAtC,IAGAqF,KAAAwF,cAAA,SAAA/C,GACA,OAAAzC,KAAAiF,UAAAxC,KAIA/G,EAAAqJ,WAAAU,IAAA,WACA/J,EAAAqJ,WAAAC,KAAA5E,MAAAJ,KAAAP,WAEAO,KAAAiB,IAAA,SAAAtG,EAAAN,GACAA,IACAA,EAAA,QAEAkB,IAAAyE,KAAAoF,cAAAzK,IACAqF,KAAAuF,WAAA5K,GACAqF,KAAAqF,cAAA1K,EAAAN,IAEA2F,KAAAqF,cAAA1K,EAAAqF,KAAAoF,cAAAzK,GAAAN,IAIA2F,KAAA0F,MAAA,SAAA/K,EAAAN,GACA2F,KAAAqF,cAAA1K,EAAAqF,KAAAoF,cAAAzK,GAAAN,IAGA2F,KAAA2F,cAAA,SAAAhL,GACA,IAAAiL,EAAA5F,KAAAsF,WAAA3K,GACA,GAAAiL,EAAA,WAEA,IADA,IAAAC,EAAA,EACAzM,EAAA,EAAuBA,GAAAwM,IAAexM,EAAA,CACtC,IAAA0M,EAAA9F,KAAAwF,cAAApM,GACAyM,GAAA7F,KAAAoF,cAAAU,GAEA,OAAAD,IAGAnK,EAAAqJ,WAAAU,IAAAzK,UAAA,IAAAU,EAAAqJ,WAAAC,KAEAtJ,EAAAqJ,WAAAgB,YAAA,WACArK,EAAAqJ,WAAAC,KAAA5E,MAAAJ,KAAAP,WAUAO,KAAAiB,IAAA,SAAAtG,EAAAmC,QACAvB,IAAAyE,KAAAoF,cAAAzK,KACAqF,KAAAqF,cAAA1K,EAAA,IACAqF,KAAAuF,WAAA5K,SAGAY,IAAAuB,SACAvB,IAAAyE,KAAAoF,cAAAzK,GAAAmC,KACAkD,KAAAoF,cAAAzK,GAAAmC,GAAA,GAEAkD,KAAAoF,cAAAzK,GAAAmC,IAAA,IAIAkD,KAAA0F,MAAA,SAAA/K,EAAAmC,GACAkD,KAAAoF,cAAAzK,GAAAmC,IAAA,EACAkD,KAAAoF,cAAAzK,GAAAmC,IAAA,UACAkD,KAAAoF,cAAAzK,GAAAmC,IAGAkD,KAAAgG,MAAA,SAAArL,GACA,OA7BA,SAAAsL,GACA,IAAAtL,EAAAgI,EAAA,EACA,IAAAhI,KAAAsL,EACAA,EAAAhL,eAAAN,IAAAgI,IAEA,OAAAA,EAwBAuD,CAAAlG,KAAAoF,cAAAzK,KAGAqF,KAAAmG,gBAAA,SAAAxL,GACA,IAAAiL,EAAA5F,KAAAsF,WAAA3K,GACA,GAAAiL,EAAA,WAEA,IADA,IAAAO,EAAA,EACA/M,EAAA,EAAuBA,GAAAwM,IAAexM,EAAA,CACtC,IAAA0M,EAAA9F,KAAAwF,cAAApM,GACA+M,GAAAnG,KAAAgG,MAAAF,GAEA,OAAAK,IAGAzK,EAAAqJ,WAAAgB,YAAA/K,UAAA,IAAAU,EAAAqJ,WAAAC,KAQAtJ,EAAA0K,UAAA,SAAAC,GAGA,IAAAC,EACAC,EAEAC,EACAC,EACAC,EAPAL,EAAA1G,aAAA,EASA,IAyCAgH,EAzCAC,EAAA,IAAAC,EAAA,IAEAC,EAAA,SAAApN,GACA,OAAAA,EAAAiB,KAEAoM,EAAA,SAAArN,GACA,OAAAA,EAAAW,OAEA2M,EAAA,SAAA9L,GACA,OAAAA,EAAAP,KAGAsM,EAAA,SAAAvN,GACA,OAAAA,EAAAiB,KAEAuM,GAAA,EAEAC,EAAA,SAAAzN,GACA,OAAAA,EAAAiB,IAAA,KAAAjB,EAAAW,OAEA+M,GAAA,EAEAC,EAAA,IAEAC,EAAA5L,EAAA8E,SAAAC,QAEA8G,EAAA,GAEAC,EAAA9L,EAAAE,UAAAQ,oBAEAqL,EAAA,aAEAC,EAAA,CACAC,UAAAF,EACAG,WAAAH,EACAI,UAAAJ,EACAK,WAAAL,EACAM,SAAAN,EACAO,OAAAP,GAKAQ,EAAA,GACAC,EAAA,SAAAC,EAAA1H,GAYA,OAXA0H,EAAAzH,OAAA,MAEA,IAAAD,EAAAhD,OACA0K,EAAAzH,OAAA,MACA,IAAAD,EAAAhD,OACA0K,EAAAzH,OAAAD,EAAA,IAEA0H,EAAAC,eAAA,SAAA1O,GACA,OAAA+G,EAAA1D,QAAArD,IAAA,IAGA+G,GAgEA,SAAA4H,EAAAxL,EAAAyL,EAAA/F,GACA,IAAA9I,EAAAoD,EAAA0L,SACAzC,EAAA,YACAvD,MAAA1F,EAAA2L,kBACAjG,EAAA,WACA+F,EAAAxC,KAAAwC,EAAAxC,GAAA,IACAwC,EAAAxC,GAAArM,KAAA6O,EAAAxC,GAAArM,GAAA,CAAiCgP,EAAA,GAAA5N,EAAA,KACjC,IAAAzB,EAAAkP,EAAAxC,GAAArM,GAAAgP,EAAA1L,QAAAwF,GAMA,OALA,GAAAnJ,IACAA,EAAAkP,EAAAxC,GAAArM,GAAAgP,EAAAhL,OACA6K,EAAAxC,GAAArM,GAAAgP,EAAArP,GAAAmJ,EACA+F,EAAAxC,GAAArM,GAAAoB,EAAAzB,GAAA,CAA0BO,KAAA,KAE1B2O,EAAAxC,GAAArM,GAAAoB,EAAAzB,GA8RA,SAAAsP,IACA,GAAArC,EAAAsC,gBAAApN,IAAA8K,EAAA8B,YAAAzH,OAAA,CACA,IAAAkI,EAAAV,EAAA7B,EAAA8B,YAAAF,GACAA,EAAAW,GAAAX,GAyPA,SAAAY,IACA,QAAAzP,EAAA,EAAuBA,EAAAmO,EAAA9J,SAAwBrE,EAC/CmO,EAAAnO,GAAAiN,GAoEA,OAnqBAA,EAAAyC,MAAA,SAAAC,GACA,OAAAtJ,UAAAhC,QACAmJ,EAAAmC,EACA1C,GAFAO,GAYAP,EAAA2C,OAAA,SAAAC,GACA,OAAAxJ,UAAAhC,QACAoJ,EAAAoC,EACA5C,GAFAQ,GAcAR,EAAA8B,UAAA,SAAAzO,GACA,OAAA+F,UAAAhC,QACA6I,EAAA5M,EACA2M,EAAA6C,cACA7C,GAHAC,GAiBAD,EAAA1J,MAAA,SAAA2L,EAAA3O,GACA,OAAA8F,UAAAhC,QACA8I,EAAA+B,EACAjC,EAAA6C,cACA,iBAAAvP,GAAA0M,EAAA8C,cAAA5C,EAAA5M,GACA0M,GAJAE,GAwBAF,EAAAhC,cAAA,SAAAiE,EAAA/F,GACA,OAAA8F,EAAAhC,EAAAiC,EAAA/F,GAAA5I,MAGA0M,EAAA8C,cAAA,SAAAb,EAAA3O,EAAA4I,GACA8F,EAAAhC,EAAAiC,EAAA/F,GAAA5I,QAGA0M,EAAA+C,SAAA,SAAAvP,GACA,OAAA4F,UAAAhC,QACAuJ,EAAAnN,EACAwM,EAAA6C,cACA7C,GAHAW,GAMAX,EAAAgD,qBAAA,SAAAC,GACA,IAAArH,EAAAqH,GAAAjD,EAAA1J,QAAA6G,MAAA+F,MAAA,GACA,OAAAtH,EAAAxE,OAAA,EACAwE,EACAxG,EAAA+N,UAAAC,GAAApD,EAAA+C,WACAM,CAAAzH,EAAA,EAAAA,EAAAxE,SAQA4I,EAAA9I,UAAA,WACA,OAAA8I,EAAA3F,OAAA,OAGA2F,EAAAsC,QAAA,WACA,YAAApN,IAAA+K,QAAA/K,IAAAgL,GAaAF,EAAArC,OAAA,SAAA7I,GACA,OAAAsL,EAAAzC,OAAA7I,IAaAkL,EAAAsD,UAAA,SAAAxO,GACA,OAAAsL,IAAAkD,UAAAxO,GAAA,MAQAkL,EAAAkC,OAAA,SAAAE,EAAAmB,GACA,OAAAnK,UAAAhC,QACA/B,EAAAgE,gBAAA+I,IACAjC,EAAAiC,EAAAF,SACA9B,EAAAgC,EAAA/P,SAEA8N,EAAAiC,GACAhC,EAAAjL,EAAAwI,OAAAwC,IACAqD,QAAAnO,EAAAE,UAAAC,aAAA,GACAH,EAAA0B,cAAAiJ,EAAAuD,IAEApC,EAAAoC,EACAvD,GAXAG,GAmBAH,EAAAyD,WAAA,WACA,IAAArB,EAAApC,EAAAkC,SACA,OAAAE,KAAAsB,GAAAtB,EAAAsB,GACAtB,IAAAvH,QAAA,QACA,IAUAmF,EAAA3N,KAAA,SAAAwB,GACA,OAAAuF,UAAAhC,QACAgJ,EAAAvM,EACAmM,GAFAI,GAYAJ,EAAA2D,IAAA,SAAAxK,GACA,OAAAC,UAAAhC,QACAiJ,EAAAlH,EACA6G,GAFAK,GASAL,EAAA4D,SAAA,WAEA,OADA5D,EAAArC,OAAA,OAAAkG,SAKAxD,EAAAL,EAAA3N,OAAAwL,OAAA,OACAiG,KAAA,QAAA9D,EAAAyC,SACAqB,KAAA,SAAA9D,EAAA2C,WAWA3C,EAAA+D,cAAA,SAAA5K,GACA,OAAAC,UAAAhC,QACA6J,EAAA9H,EACA6G,GAFAiB,GAaAjB,EAAAgE,eAAA,WAKA,OAJA5D,IACAJ,EAAAsD,UAAA,UAAAW,MAAA,gBACAjE,EAAAsD,UAAA,WAAAY,KAAAjD,EAAAjB,EAAA5F,YAAA6J,MAAA,iBAEAjE,GAGAA,EAAAmE,gBAAA,WAKA,OAJA/D,IACAJ,EAAAsD,UAAA,UAAAW,MAAA,kBACAjE,EAAAsD,UAAA,WAAAW,MAAA,kBAAAC,KAAAlE,EAAA3F,WAEA2F,GAQAA,EAAAoE,mBAAA,SAAA/Q,GACA,OAAA+F,UAAAhC,QACA4J,EAAA3N,EACA2M,GAFAgB,GAYAhB,EAAA1I,OAAA,WAGA,GAFA+J,EAAAC,UAAAtB,QAEA9K,IAAA+K,EACA,UAAA5K,EAAAkE,OAAAO,sBAAA,4DACAkG,EAAAyD,aAAA,KAEA,QAAAvO,IAAAgL,EACA,UAAA7K,EAAAkE,OAAAO,sBAAA,wDACAkG,EAAAyD,aAAA,KAEA,IAAAY,EAAArE,EAAAsE,WAMA,OAJAhE,KAAAhJ,SAEA0I,EAAAuE,mBAAA,cAEAF,GAGArE,EAAAuE,mBAAA,SAAAC,GACAxE,EAAAoE,qBAAA,GAAA/D,EACAA,EAAA5I,aAAAE,SAAAqI,EAAAoE,sBACAK,KAAA,iBACAjC,IACAgC,GAAAnD,EAAAmD,GAAAxE,MAGAwC,IACAgC,GAAAnD,EAAAmD,GAAAxE,KAaAA,EAAAxI,OAAA,WACA6J,EAAAG,UAAAxB,GAEA,IAAAqE,EAAArE,EAAA0E,WAIA,OAFA1E,EAAAuE,mBAAA,cAEAF,GAGArE,EAAA2E,wBAAA,SAAAC,QACA1P,IAAA0P,GAAAvD,EAAAK,SAAA1B,EAAA4E,IAGA5E,EAAA6E,sBAAA,WACAxD,EAAAM,OAAA3B,IASAA,EAAA8E,UAAA,SAAAzK,GACA,OAAAjB,UAAAhC,OACAwK,EAAAlL,QAAA2D,IAAA,EADAuH,EAAAxK,OAAA,GAwCA4I,EAAA3F,OAAA,SAAAlB,GACA,OAAAC,UAAAhC,QAEA,OAAA+B,GA1BAyI,EAAA,GACAS,IACArC,EAAA2E,wBAAA,OA2BA3E,EAAA8E,UAAA3L,GA1CA,SAAAA,GACAyI,EAAAmD,OAAAnD,EAAAlL,QAAAyC,GAAA,GACAkJ,IACArC,EAAA2E,wBAAAxL,GAwCA6L,CAAA7L,GArCA,SAAAA,GACAyI,EAAAhL,KAAAuC,GACAkJ,IACArC,EAAA2E,wBAAAxL,GAoCA8L,CAAA9L,GAGA,OAAAiH,GAAAJ,EAAA8E,YACA9E,EAAAgE,iBAEAhE,EAAAmE,kBAGAnE,GAjBA4B,EAAAxK,OAAA,EAAAwK,EAAA,SA0BA5B,EAAA5F,QAAA,WACA,OAAAwH,GAGA5B,EAAAkF,kBAAA,SAAAzO,GACAtB,EAAAwI,OAAAlH,GAAA+M,QAAAnO,EAAAE,UAAAK,gBAAA,GACAT,EAAAwI,OAAAlH,GAAA+M,QAAAnO,EAAAE,UAAAI,kBAAA,IAGAqK,EAAAmF,eAAA,SAAA1O,GACAtB,EAAAwI,OAAAlH,GAAA+M,QAAAnO,EAAAE,UAAAK,gBAAA,GACAT,EAAAwI,OAAAlH,GAAA+M,QAAAnO,EAAAE,UAAAI,kBAAA,IAGAqK,EAAAoF,eAAA,SAAA3O,GACAtB,EAAAwI,OAAAlH,GAAA+M,QAAAnO,EAAAE,UAAAK,gBAAA,GACAT,EAAAwI,OAAAlH,GAAA+M,QAAAnO,EAAAE,UAAAI,kBAAA,IAGAqK,EAAAqF,QAAA,SAAAhS,GACA,IAAAgH,EAAA2F,EAAAsF,aAAAtF,CAAA3M,GACAgC,EAAA+I,OAAAE,QAAA,WACA0B,EAAA3F,UACAhF,EAAAkC,UAAAyI,EAAAuD,iBAyBAvD,EAAAuF,cAAA,SAAApM,GACA,OAAAC,UAAAhC,QACAyK,EAAA1I,EACA6G,GAFA6B,GAMA7B,EAAAsE,SAAA,WAEA,OAAAtE,GAGAA,EAAA0E,SAAA,WAEA,OAAA1E,GAGAA,EAAAwF,YAAA,WAEA,UAGAxF,EAAAyF,gBAAA,SAAApS,KAIA2M,EAAA0F,YAAA,SAAArS,KAiBA2M,EAAAsF,YAAA,SAAAnM,GACA,OAAAC,UAAAhC,QACAqJ,EAAAtH,EACA6G,GAFAS,GAkBAT,EAAAmC,cAAA,SAAAhJ,GACA,OAAAC,UAAAhC,QACAsJ,EAAAvH,EACA6G,GAFAU,GAkBAV,EAAA2F,MAAA,SAAAxM,GACA,OAAAC,UAAAhC,QACAwJ,EAAAzH,EACA0H,GAAA,EACAb,GAHAY,GAWAZ,EAAA4F,YAAA,SAAAzM,GACA,OAAAC,UAAAhC,QACAyJ,EAAA1H,EACA6G,GAFAa,GAyBAb,EAAA6F,MAAA,SAAA1M,GACA,OAAAC,UAAAhC,QACA0J,EAAA3H,EACA4H,GAAA,EACAf,GAHAc,GAWAd,EAAA8F,YAAA,SAAA3M,GACA,OAAAC,UAAAhC,QACA2J,EAAA5H,EACA6G,GAFAe,GAsBAf,EAAA9G,UAAA,SAAAC,GAEA,OADA+H,EAAAtK,KAAAuC,GACA6G,GASAA,EAAAuD,WAAA,SAAApK,GACA,OAAAC,UAAAhC,QACA+J,EAAAhI,EACA6G,GAFAmB,GAaAnB,EAAA6C,YAAA,WAEA,OAAA7C,GAaAA,EAAA+F,OAAA,SAAA/S,GACA,OAAAoG,UAAAhC,SACAkJ,EAAAtN,GACAyK,OAAAuC,GACAA,GAHAM,GA6BAN,EAAAgG,GAAA,SAAAxB,EAAAyB,GAEA,OADA5E,EAAAmD,GAAAyB,EACAjG,GAGAA,GASA3K,EAAA6Q,WAAA,SAAAlG,GACA,IAAAmG,EAAA,CAAmBC,IAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,KAAA,IA6BnB,OAdAvG,EAAAwG,QAAA,SAAArT,GACA,OAAAiG,UAAAhC,QACA+O,EAAAhT,EACA6M,GAFAmG,GAKAnG,EAAAyG,eAAA,WACA,OAAAzG,EAAAyC,QAAAzC,EAAAwG,UAAAD,KAAAvG,EAAAwG,UAAAH,OAGArG,EAAA0G,gBAAA,WACA,OAAA1G,EAAA2C,SAAA3C,EAAAwG,UAAAJ,IAAApG,EAAAwG,UAAAF,QAGAtG,GASA3K,EAAAsR,oBAAA,SAAA3G,GACA,IAWA4G,EACAC,EACAC,EAEAC,EACAC,EAhBAC,EAAA,YACAC,EAAA,aACAC,EAAA,YAKAnH,EAAA3K,EAAA+R,WAAA/R,EAAA6Q,WAAA7Q,EAAA0K,UAAAC,MAEA/B,OAAA9I,EAAAkS,MAAAC,cAQA,IAIAC,EAGAC,EAIAC,EAKAC,EAMAC,EAKAC,EACAC,EA5BAC,EAAA3S,EAAAwO,IAAAoE,OACAC,EAAA3S,EAAAyC,MAAAC,SACAkQ,EAAA,EACAC,GAAA,EAEAC,EAAA,EAGAC,EAAAjT,EAAAwO,IAAAoE,OACAM,EAAA,EACAC,GAAA,EAEAC,EAAA,EAEAC,EAAArT,EAAAwO,IAAA8E,QACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAEAC,GAAA,EAGAC,EAAA,UACAC,GAAA,EAKAC,GAAA,EACAC,EAAA,EA0OA,SAAAC,EAAAjH,GACAjC,EAAAmJ,aAAAnJ,EAAAoJ,YACArC,EAAA5O,OAAA,CAAA6H,EAAAqJ,WAAArJ,EAAAsJ,aAEAtJ,EAAAoJ,aAAA,IAAArC,EAAA5O,SAAAf,QACA2P,EAAA5O,OAAA6H,EAAAgD,uBAAAuG,IAAA,SAAAC,GAAsE,OAAAA,EAAAlV,OAGtE0L,EAAAoJ,YACApJ,EAAAyJ,sBAEA1C,EAAA2C,MAAA,GAAA1J,EAAA2J,gBAGA7B,IAAAT,MAAArH,EAAAlE,KAAA8N,OAAA,UA2BA,SAAA3H,GACA,IAAA4H,EAAA5H,EAAAqB,UAAA,KAAA6D,GAEA,GAAAyB,EAAA,CACAiB,EAAAjM,UACAiM,EAAA5H,EAAA6H,OAAA,oBACAhG,KAAA,QAAAmD,EAAA,IAAAE,GACArD,KAAA,yBAAA9D,EAAA+J,SAAA,IAAA/J,EAAAwG,UAAAJ,IAAA,MAEA,IAAA4D,EAAAlC,EAAAmC,aAAAnC,EAAAmC,aAAAlD,EAAAiD,MAAAlC,EAAAkC,QAAA,IAEAE,EAAAL,EAAAvG,UAAA,QACA1H,KAAAoO,GAGAG,EAAAD,EAAAE,QACAvM,OAAA,QACAiG,KAAA,cAAAzQ,GACA,OAAA0T,EAAA1T,KAEAyQ,KAAA,KAAA9D,EAAAqK,SAAArK,EAAAwG,UAAAJ,KACAtC,KAAA,cAAAzQ,GACA,OAAA0T,EAAA1T,KAEAyQ,KAAA,QACAA,KAAA,aACAzO,EAAAoC,WAAA0S,EAAAnK,EAAAoE,sBACAN,KAAA,aAGAzO,EAAAoC,WAAAyS,EAAAlK,EAAAoE,sBACAN,KAAA,cAAAzQ,GACA,OAAA0T,EAAA1T,KAEAyQ,KAAA,KAAA9D,EAAAqK,SAAArK,EAAAwG,UAAAJ,KACAtC,KAAA,cAAAzQ,GACA,OAAA0T,EAAA1T,KAEAyQ,KAAA,QAGAoG,EAAAI,OAAAzG,cAGAgG,EAAAvG,UAAA,QAAAO,SArEA0G,CAAAtI,GA0FA,SAAAuI,EAAAvI,SACA/M,IAAAsS,GAAAxH,EAAAyK,cACAjD,EAAArS,EAAAkS,MAAAqD,UACAvS,OAAA,CAAA6H,EAAA2K,WAAA3K,EAAA4K,aAAAC,WAAA,CAAA7K,EAAA8K,cAAA,IAGAtD,EAAAkC,MAAA,CAAA1J,EAAA8K,cAAA,IACA1C,IAAAf,MAAAG,GAAAoC,OAAA,QA2BA,SAAA3H,GACA,IAAA4H,EAAA5H,EAAAqB,UAAA,KAAA4D,GAEA,GAAAyB,EAAA,CACA,IAAAqB,EAAA5B,EAAA6B,aAAA7B,EAAA6B,aAAAzC,EAAAwC,MAAA5B,EAAA4B,QAAA,IAEAH,EAAAjM,UACAiM,EAAA5H,EAAA6H,OAAA,oBACAhG,KAAA,QAAAmD,EAAA,IAAAC,GACApD,KAAA,yBAAA9D,EAAA+J,SAAA,IAAA/J,EAAAwG,UAAAJ,IAAA,MAEA,IAAA8D,EAAAL,EAAAvG,UAAA,QACA1H,KAAAoO,GAGAG,EAAAD,EAAAE,QACAvM,OAAA,QACAiG,KAAA,QACAA,KAAA,cAAAzQ,GACA,OAAAmU,EAAAnU,KAEAyQ,KAAA,KAAA9D,EAAA2J,eACA7F,KAAA,cAAAzQ,GACA,OAAAmU,EAAAnU,KAEAyQ,KAAA,aACAzO,EAAAoC,WAAA0S,EAAAnK,EAAAoE,sBACAN,KAAA,aAGAzO,EAAAoC,WAAAyS,EAAAlK,EAAAoE,sBACAN,KAAA,QACAA,KAAA,cAAAzQ,GACA,OAAAmU,EAAAnU,KAEAyQ,KAAA,KAAA9D,EAAA2J,eACA7F,KAAA,cAAAzQ,GACA,OAAAmU,EAAAnU,KAIA6W,EAAAI,OAAAzG,cAGAgG,EAAAvG,UAAA,QAAAO,SArEAkH,CAAA9I,GA+OA,SAAA+I,IACA,OAAAhL,EAAAqK,SAAArK,EAAAwG,UAAAJ,IAuCA,SAAA6E,EAAApW,GACA,IAAAqW,EAAAlL,EAAAmL,cAEAnL,EAAAoL,YAAAvE,GAEA7G,EAAAqL,aAAAH,GACA7V,EAAA+I,OAAAE,QAAA,WACA0B,EAAA3F,OAAA,MACAhF,EAAAkC,UAAAyI,EAAAuD,gBAGAlO,EAAA+I,OAAAE,QAAA,WACA0B,EAAA3F,OAAA,MACA2F,EAAA3F,OAAA,CAAA6Q,EAAA,GAAAA,EAAA,KACA7V,EAAAkC,UAAAyI,EAAAuD,eACalO,EAAAE,UAAAS,aAmCb,SAAAsV,IACA,OAAAtL,EAAAyD,aAAA,QAgIA,SAAA8H,EAAA7B,GACA,OAAAA,aAAApP,OAAAoP,EAAAtS,OAAA,EAmDA,OAz1BA4I,EAAA6F,MAAA,SAAAxS,GACA,OAAAA,EAAAuI,KAAAtH,IAAA,KAAAjB,EAAAuI,KAAA5H,QAGAgM,EAAAwL,QAAA,WACA7D,OAAAzS,EACA8K,EAAAyL,cAWAzL,EAAA0L,WAAA,SAAAvS,GACA,OAAAC,UAAAhC,SACAwQ,EAAAzO,GACAwS,WAAA3L,GACAA,GAHA4H,GAWA5H,EAAA4L,UAAA,SAAAzS,GACA,OAAAC,UAAAhC,QACA0R,EAAA3P,EACA6G,GAFA8I,GASA9I,EAAA6L,gBAAA,SAAA1S,GACA,OAAAC,UAAAhC,QACA2R,EAAA5P,EACA6G,GAFA+I,GAKA/I,EAAA8L,WAAA,SAAArO,GAYA,OAVAmJ,OADA1R,IAAAuI,EACAuC,EAAA2D,MAEAlG,EAEAoJ,EAAAD,EAAA/I,OAAA,KAEAiJ,EAAAD,EAAAhJ,OAAA,KAAAiG,KAAA,sBACAA,KAAA,yBAAA9D,EAAAwG,UAAAD,KAAA,KAAAvG,EAAAwG,UAAAJ,IAAA,KACAtC,KAAA,oBAAAwH,IAAA,KAEAzE,GASA7G,EAAAiC,EAAA,SAAA9I,GACA,OAAAC,UAAAhC,QACAyP,EAAA1N,EACA6G,GAFA6G,GAYA7G,EAAA+L,cAAA,SAAAC,GACA,OAAA5S,UAAAhC,QACA4R,EAAAgD,EACAhM,GAFAgJ,GASAhJ,EAAAiM,WAAA,SAAA9S,GACA,OAAAC,UAAAhC,QACA0P,EAAA3N,EACA6G,GAFA8G,GAiBA9G,EAAAlE,EAAA,SAAA3C,GACA,OAAAC,UAAAhC,QAEA4P,GADAD,EAAA5N,GACAhB,SACA6H,GAHA+G,GAMA/G,EAAAkM,gBAAA,WACA,OAAAlF,GAgCAhH,EAAAmM,OAAA,SAAAhT,GACA,OAAAC,UAAAhC,QACA4Q,EAAA7O,EACA6G,GAFAgI,GAoBAhI,EAAAoM,MAAA,SAAAjT,GACA,OAAAC,UAAAhC,QACA0Q,EAAA3O,EACA6G,GAFA8H,GAWA9H,EAAAmJ,SAAA,SAAAhQ,GACA,OAAAC,UAAAhC,QACA8Q,EAAA/O,EACA6G,GAFAkI,GAeAlI,EAAAqM,aAAA,SAAAlT,GACA,OAAAC,UAAAhC,QACA6Q,EAAA9O,EACA6G,GAFAiI,GAKAjI,EAAAyL,WAAA,WACA,QAAAvW,IAAAyS,EAAA,CACA,IAAA7P,EAAAkI,EAAAmM,QAAAnM,GAAAlE,IAAA3D,SAAA,GAAA6H,EAAAlE,IAAA3D,SAAA,GAAA6H,EAAAlE,IAAA3D,UAGAwP,EADA7P,aAAAwC,MACAxC,EAAAV,OAEAU,EAGA,OAAA6P,GAGA3H,EAAAoJ,UAAA,WACA,OAAApJ,EAAAmM,WAAA9W,EAAAyC,MAAAI,SAGA8H,EAAAyJ,oBAAA,SAAA9J,GACAA,IACAA,EAAAK,EAAAyL,cAIA,IAHA,IAAA/B,EAAA,GACA4C,EAAAtM,EAAA2J,eAAAhK,EAAA,GACA4M,EAAAD,EAAA,EACAvZ,EAAA,EAAuBA,EAAA4M,EAAW5M,IAClC2W,EAAA3W,GAAAwZ,EACAA,GAAAD,EAEAvF,EAAA2C,UAsBA1J,EAAAwM,YAAA,SAAAvK,GACA,IAAAwK,EAAAxK,EAAAqB,UAAA,OAEAmJ,EAAA7O,UACA6O,EAAAxK,EAAApE,OAAA,KACAiG,KAAA,kBACAA,KAAA,yBAAA9D,EAAAwG,UAAAD,KAAA,IAAAvG,EAAAqK,SAAA,MAEA,IAAAqC,EAAAzK,EAAAqB,UAAA,qBACAoJ,EAAA9O,SAAAoC,EAAA2M,eACAD,EAAAzK,EAAApE,OAAA,QACAiG,KAAA,yBAAA9D,EAAA2J,cAAA,OAAA3J,EAAA2C,SAAAwF,GAAA,KACArE,KAAA,QArTA,gBAsTAA,KAAA,wBACAI,KAAAlE,EAAA2M,eACA3M,EAAA2M,cAAAD,EAAAxI,QAAAlE,EAAA2M,cACAC,SAAA1I,KAAAlE,EAAA2M,cAEAtX,EAAAoC,WAAAgV,EAAAzM,EAAAoE,sBACAlR,KAAA4U,IAmDA9H,EAAAqK,OAAA,WACA,OAAArK,EAAA2C,SAAA3C,EAAAwG,UAAAF,QAGAtG,EAAA2J,YAAA,WACA,OAAA3J,EAAAyG,kBAGAzG,EAAA2M,WAAA,SAAAxT,EAAA0T,GACA,OAAAzT,UAAAhC,QACAmQ,EAAApO,EACA6G,EAAAwG,UAAAF,QAAA6B,EACAA,OAAAjT,IAAA2X,EA1XA,GA0XAA,EACA7M,EAAAwG,UAAAF,QAAA6B,EACAnI,GALAuH,GAoBAvH,EAAA8M,YAAA,SAAA7K,GACA,IAAA8K,EAAA9K,EAAAqB,UAAA,OACAyJ,EAAAnP,UACAmP,EAAA9K,EAAApE,OAAA,KACAiG,KAAA,kBACAA,KAAA,yBAAA9D,EAAA+J,SAAA,IAAA/J,EAAAwG,UAAAJ,IAAA,MAEA,IAAAwG,EAAA3K,EAAAqB,UAAA,qBACAsJ,EAAAhP,SAAAoC,EAAAgN,eACAJ,EAAA3K,EAAApE,OAAA,QACAiG,KAAA,yBAAAyE,EAAA,IAAAvI,EAAA8K,cAAA,mBACAhH,KAAA,QAxZA,gBAyZAA,KAAA,wBACAI,KAAAlE,EAAAgN,eACAhN,EAAAgN,cAAAJ,EAAA1I,QAAAlE,EAAAgN,cACAJ,EAAA1I,KAAAlE,EAAAgN,cAEA3X,EAAAoC,WAAAsV,EAAA/M,EAAAoE,sBACAlR,KAAAkV,IAoDApI,EAAA+J,OAAA,WACA,OAAA/J,EAAAwG,UAAAD,MAGAvG,EAAAgN,WAAA,SAAA7T,EAAA0T,GACA,OAAAzT,UAAAhC,QACAqQ,EAAAtO,EACA6G,EAAAwG,UAAAD,MAAAgC,EACAA,OAAArT,IAAA2X,EAzdA,GAydAA,EACA7M,EAAAwG,UAAAD,MAAAgC,EACAvI,GALAyH,GAaAzH,EAAAjE,EAAA,SAAA5C,GACA,OAAAC,UAAAhC,QACAoQ,EAAArO,EACA6G,GAFAwH,GAoBAxH,EAAAiN,MAAA,SAAAlR,GACA,OAAA3C,UAAAhC,QACAgR,EAAArM,EACAiE,GAFAoI,GAWApI,EAAAyK,SAAA,SAAAtR,GACA,OAAAC,UAAAhC,QACAkR,EAAAnP,EACA6G,GAFAsI,GAUAtI,EAAA+K,0BAAA,SAAA5R,GACA,OAAAC,UAAAhC,QACAuR,EAAAxP,EACA6G,GAFA2I,GAUA3I,EAAAuK,wBAAA,SAAApR,GACA,OAAAC,UAAAhC,QACAwR,EAAAzP,EACA6G,GAFA4I,GAKA5I,EAAAqJ,SAAA,WACA,IAAAhM,EAAAlI,EAAAkI,IAAA2C,EAAA1J,QAAA6G,MAAA,SAAA1G,GACA,OAAAuJ,EAAAsF,aAAAtF,CAAAvJ,KAEA,OAAApB,EAAAmD,MAAA2C,SAAAkC,EAAA4K,IAGAjI,EAAAsJ,SAAA,WACA,IAAArM,EAAA9H,EAAA8H,IAAA+C,EAAA1J,QAAA6G,MAAA,SAAA1G,GACA,OAAAuJ,EAAAsF,aAAAtF,CAAAvJ,KAEA,OAAApB,EAAAmD,MAAAoC,IAAAqC,EAAAgL,IAGAjI,EAAA2K,SAAA,WACA,IAAAtN,EAAAlI,EAAAkI,IAAA2C,EAAA1J,QAAA6G,MAAA,SAAA1G,GACA,OAAAuJ,EAAAmC,eAAAnC,CAAAvJ,KAGA,OADA4G,EAAAhI,EAAAmD,MAAA2C,SAAAkC,EAAAgL,IAIArI,EAAA4K,SAAA,WACA,IAAA3N,EAAA9H,EAAA8H,IAAA+C,EAAA1J,QAAA6G,MAAA,SAAA1G,GACA,OAAAuJ,EAAAmC,eAAAnC,CAAAvJ,KAGA,OADAwG,EAAA5H,EAAAmD,MAAAoC,IAAAqC,EAAAoL,IAcArI,EAAAkN,aAAA,SAAA/T,GACA,OAAAC,UAAAhC,QACAiR,EAAAlP,EACA6G,GAFAqI,GAKArI,EAAA8K,YAAA,WACA,OAAA9K,EAAA0G,mBAcA1G,EAAApH,MAAA,SAAAO,GACA,OAAAC,UAAAhC,QACAsQ,EAAAvO,EACA6G,GAFA0H,GAKArS,EAAAwD,SAAAmH,EAAA,kBAAA7G,GACA,OAAAC,UAAAhC,QAEA4I,EAAAmN,QAAAhU,GAEAA,EACA6G,EAAAyI,QAAAyC,OAAA/R,GAEA6G,EAAAyI,QAAA5R,QAGAmJ,GAVAA,EAAAmN,YAaAnN,EAAAyI,MAAA,SAAAtP,GACA,OAAAC,UAAAhC,QACAoR,EAAArP,EACA6G,GAFAwI,GASAxI,EAAAoN,YAAA,SAAAnL,GAIA,GAHAjC,EAAAoJ,cACAV,GAAA,GAEAA,EAAA,CACAF,EAAAxC,GAAA,QAAAiF,GAEA,IAAAoC,EAAApL,EAAApE,OAAA,KACAiG,KAAA,iBACAA,KAAA,yBAAA9D,EAAAwG,UAAAD,KAAA,IAAAvG,EAAAwG,UAAAJ,IAAA,KACAlT,KAAAsV,EAAA1M,EAAAkE,EAAAlE,MACAuR,EAAA/J,UAAA,QAAAQ,KAAA,SAAAkH,KACAqC,EAAA/J,UAAA,WAAAzF,OAAA,QAAAiG,KAAA,IAAA9D,EAAAsN,kBAEAtN,EAAA8E,aACA9E,EAAAoL,YAAAnJ,KAKAjC,EAAAmL,YAAA,WACA,IAAAD,EAAA1C,EAAA0C,SAQA,OAPAlL,EAAApH,UACAsS,EAAA,GAAAA,EAAA3B,IAAAvJ,EAAApH,SAAA,GACAsS,EAAA,GAAAA,EAAA3B,IAAAvJ,EAAApH,SAAA,GAEAiO,EAAAlJ,OAAA,UACAzK,KAAAsV,EAAA0C,YAEAA,GAGAlL,EAAAqL,aAAA,SAAAH,GACA,OAAA1C,EAAA5K,UAAAsN,KAAA,IAAAA,EAAA,IAsBAlL,EAAAoL,YAAA,SAAAnJ,GACA,GAAAyG,EAAA,CACA1I,EAAA3F,UAAA2F,EAAAyI,QAAA7K,SACAoC,EAAAyI,QAAAyC,OAAAlL,EAAA3F,UAEA,IAAAgT,EAAApL,EAAAtE,OAAA,WACA0P,EAAAna,KAAA8M,EAAAyI,QAAA3M,EAAAkE,EAAAlE,MACAuR,EAAA/J,UAAA,QAAAQ,KAAA,SAAAkH,KAGAhL,EAAAuN,sBAGAvN,EAAAuN,mBAAA,aAKAvN,EAAAsN,iBAAA,SAAAja,GACA,IAAAoD,IAAA,KAAApD,GAAAyI,EAAArF,EAAA,KAAAsF,EAAAiP,IAAA,EACA,aAAAlP,EAAA,IAAAC,EACA,YAAAtF,EAAA,QAAAqF,EAAA,KAAAC,EAAA,GACA,OAAAA,EAAA,GACA,YAAAtF,EAAA,OAAAqF,EAAA,MAAAC,EACA,KACA,IAAAD,EAAA,KAAAC,EAAA,GACA,OAAAA,EAAA,GACA,QAAAD,EAAA,KAAAC,EAAA,GACA,OAAAA,EAAA,IAcAiE,EAAAwN,YAAA,SAAA3Y,GACA,OAAAuE,UAAAhC,QACA6R,EAAApU,EACAmL,GAFAiJ,GAiBAjJ,EAAAsE,SAAA,WACA,QAAApP,IAAA6R,EACA,UAAA1R,EAAAkE,OAAAO,sBAAA,oDACAkG,EAAAyD,aAAA,KAfA,IACAgK,EAEAC,EAEAC,EA+BA,OAnBA3N,EAAA4D,WAEA5D,EAAAsC,YACAtC,EAAA8L,aAnBA2B,EAAApY,EAAAmD,MAAAgF,eAAAoJ,EAAA,QAEA8G,EAAArY,EAAAmD,MAAAgF,eAAAiQ,EAAA,YAAA3J,KAAA,KAAAwH,KAEAqC,EAAA,EAAA1E,EAEA5T,EAAAmD,MAAAgF,eAAAkQ,EAAA,QACA5J,KAAA,QAAA9D,EAAA2J,cAAAgE,GACA7J,KAAA,SAAA9D,EAAA8K,cAAA6C,GAcAzE,EAAAlJ,EAAAiC,KACAuI,EAAAxK,EAAAiC,KAEAjC,EAAA4N,WAEA5N,EAAAwM,YAAAxM,EAAAiC,KACAjC,EAAA8M,YAAA9M,EAAAiC,KAEAjC,EAAAoN,YAAApN,EAAAiC,KASA+G,GACAhJ,EAAA3N,OAAAa,KAAAiC,EAAA0Y,SAAAC,OACAhS,EAAAkE,EAAAlE,KACAiS,YAAAjF,GACA9C,GAAA,kBACAhG,EAAAgO,MAAAhO,EAAAlE,IAAA3D,UACA6H,EAAA6E,wBAMA,WACA,GAAA+C,EAAA,CACA,IAAAqG,EAAAjO,EAAAlE,IAAA3D,SACA,GAAA4Q,EAAA,CACA,IAAAmF,EAAAtG,EAAAsE,kBACAiC,EAAA,CACAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IACAtG,EAAAoG,MAAAG,QAEAvG,EAAAoG,MAAAC,GAEArG,EAAAvN,OAAA,MACAuN,EAAAvN,OAAA4T,GAEA5Y,EAAA+I,OAAAE,QAAA,WACAjJ,EAAAkC,UAAAyI,EAAAuD,iBArBA6K,OAXApO,GAqCAA,EAAA0E,SAAA,WAcA,OAbAwE,EAAAlJ,EAAAiC,KACAuI,EAAAxK,EAAAiC,KAEAjC,EAAA4N,WAEA5N,EAAAyK,YACAzK,EAAA8M,YAAA9M,EAAAiC,MAEAjC,EAAAmJ,YAAAN,IACA7I,EAAAwM,YAAAxM,EAAAiC,KAEAjC,EAAAoL,YAAApL,EAAAiC,KAEAjC,GAGAA,EAAAqO,UAAA,WAKA,OAJArO,EAAAsC,WACAtC,EAAA4N,WAGA5N,GAWAA,EAAAsO,QAAA,SAAAnV,GACA,OAAAC,UAAAhC,QACAsR,EAAAvP,EACA6G,GAFA0I,GAuBA1I,EAAAgO,MAAA,SAAAtE,GACAb,GAAA,EAEA0C,EAAA7B,GACA1J,EAAAlE,IAAA3D,OAAAuR,GAEA1J,EAAAlE,IAAA3D,OAAA6H,EAAAkM,mBAGAlM,EAAAwL,UAEAxL,EAAAxI,SAEA+T,EAAA7B,KACAb,GAAA,IAGA7I,EAAAuO,UAAA,WACA,OAAA1F,GAGA7I,EAAA2L,WAAA,SAAAvY,GACA,OAAAgG,UAAAhC,QACAyQ,EAAAzU,EACA4M,EAAAgG,GAAA,oBAAAxP,GACAnB,EAAA+I,OAAAE,QAAA,WACAuJ,EAAAmG,MAAAxX,EAAA6D,UACAwN,EAAAxN,OAAA7D,EAAA6D,UACAhF,EAAAkC,UAAAf,EAAA+M,kBAGAvD,GATA6H,GAYA7H,GAUA3K,EAAA+R,WAAA,SAAApH,GACA,IAAAwO,EAAArZ,EAAAkS,MAAAoH,cAEAC,EAAA,GAAAF,EAAA9E,QAAAtS,QAEAuX,EAAA,SAAA3a,GACA,IAAAmE,EAAAuW,EACA,mBAAAA,IACAvW,EAAAuW,EAAAxb,KAAA8M,IACA,IAAA4O,EAAAzW,EAAA,GACA0W,EAAA1W,EAAA,GAGA,GADA2W,MAAA9a,OAAA,IACAqB,EAAAmD,MAAAwE,SAAA6R,GAAA,OAAAL,EAAAxa,GAEA,IAAA+a,EAAA/O,EAAA/B,SAAAyL,QAAAtS,OACA4X,GAAAH,EAAAD,GAAAG,EACAE,EAAAjX,KAAAC,IAAAD,KAAAqF,IAAA0R,EAAA,EAAA/W,KAAAY,OAAA5E,EAAA4a,GAAAI,KAEA,OAAAhP,EAAA/B,QAAA+B,CAAAiP,IAGAC,EAAA,SAAA7b,EAAAN,GAAwC,OAAAA,GAuFxC,OAzEAiN,EAAA/B,OAAA,SAAA9E,GACA,IAAAC,UAAAhC,OAAA,OAAAoX,EAEA,GAAArV,aAAAmB,MAAA,CACAkU,EAAArZ,EAAAkS,MAAAnP,UAAAwR,MAAAvQ,GAEA,IADA,IAAAhB,EAAA,GACApF,EAAA,EAA0BA,EAAAoG,EAAA/B,SAAcrE,EACxCoF,EAAAvB,KAAA7D,GAEAyb,EAAArW,eAEAqW,EAAArV,EAKA,OAFAuV,EAAA,GAAAF,EAAA9E,QAAAtS,QAEA4I,GAGAA,EAAAmP,gBAAA,SAAAhW,GACA,OAAAC,UAAAhC,QACAuX,EAAAxV,EACA6G,GAFA2O,GAKA3O,EAAAoP,SAAA,SAAA/b,EAAAN,GACA,OAAA4b,EAAAO,EAAA7b,EAAAN,KAgBAiN,EAAAqP,cAAA,SAAAlW,GACA,OAAAC,UAAAhC,QACA8X,EAAA/V,EACA6G,GAFAkP,GAwBAlP,EAAAsP,YAAA,SAAAnW,GACA,OAAAC,UAAAhC,QACAsX,EAAAvV,EACA6G,GAFA0O,GAKA1O,GASA3K,EAAAka,eAAA,SAAAvP,GACA,IAOAwP,EACAC,EACAC,EACAC,EAVAC,EAAA,IAAAva,EAAAmD,MAAA4C,WACAyU,EAAA1a,EAAA2a,OAAAC,QACAC,OAAA,QACAC,MAAA,WACAC,OAAA,SAAA7c,GACA,OAAAA,EAAAwJ,SAoGA,SAAAsT,IACA,IAAAhT,EAAA,GAEA,GAAA6C,EAAAlE,IAAA,CACA,IACAsU,EADAC,EAAArQ,EAAAlE,IAAA3D,SAEA,GAAA6H,EAAAoJ,YAAA,CACA,IAAAkH,EAAAnb,EAAAob,IAAAF,GACAD,EAAA,SAAAvb,GACA,OAAAyb,EAAA/Z,IAAA1B,EAAAiH,SAGAsU,EAAA,SAAAvb,GACA,OAAAA,EAAAiH,GAAAuU,EAAA,IAAAxb,EAAAiH,GAAAuU,IAAAjZ,OAAA,IAEA4I,EAAAwQ,cAAAC,QAAA,SAAAha,GACAA,EAAAoG,OAAA4T,QAAA,SAAA5b,GACAub,EAAAvb,IACAsI,EAAAvG,KAAA/B,YAIAmL,EAAAwQ,cAAAC,QAAA,SAAAha,GACA0G,IAAAuT,OAAAja,EAAAoG,UAIA,OAAAM,EA8CA,SAAAwT,EAAAC,EAAAvd,GACA,OAAA2M,EAAA6Q,sBAAAD,EAAA5Q,CAAA3M,GAGA,SAAAyd,EAAAF,EAAAvd,GACA,OAAA2M,EAAA+Q,wBAAAH,EAAA5Q,CAAA3M,GAGA,SAAA2d,EAAApV,EAAAgV,GACA,QAAAK,EAAA,EAA+BA,EAAArV,EAAAxE,SAAyB6Z,EAAA,CACxD,IAAA5d,EAAAuI,EAAAqV,GACA3c,EAAAqc,EAAAC,EAAAvd,GACAW,EAAA8c,EAAAF,EAAAvd,GAEAuc,EAAAnU,aAAAmV,EAAAK,EAAA,CAA6DrV,KAAAvI,EAAAyI,EAAAxH,EAAAyH,EAAA/H,EAAA4I,MAAAgU,KA0D7D,OAhOA5Q,EAAA+P,MAAA,SAAAzZ,EAAA4a,EAAA1U,GAcA,OAbApD,UAAAhC,QACAwY,EAAA/Y,QAEA,iBAAAqa,EACAlR,EAAA8C,cAAAxM,EAAA4a,EAAA1U,GACA,mBAAA0U,IACA1U,EAAA0U,GAEAtB,EAAArT,mBAAAyD,EAAAmC,iBACAyN,EAAA3T,SAAA3F,EAAAkG,GAEAwD,EAAA6C,cAEA7C,GAGAA,EAAA6C,YAAA,WAKA,OAJA2M,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACA3P,GAGAA,EAAAmR,UAAA,WACA,UAAA3B,EAAA,EACAA,EAAA,IAEA5Y,KAAAoJ,EAAA1J,SAEA,QAAAvD,EAAA,EAA2BA,EAAA6c,EAAAtT,SAAwBvJ,EACnDyc,EAAA5Y,KAAAgZ,EAAAzT,gBAAApJ,IAGA,OAAAyc,GAGAxP,EAAAoR,kBAAA,WACA,UAAA3B,EAAA,EACAA,EAAA,IAEA7Y,KAAAoJ,EAAAmC,iBAEA,QAAApP,EAAA,EAA2BA,EAAA6c,EAAAtT,SAAwBvJ,EACnD0c,EAAA7Y,KAAAgZ,EAAAvT,mBAAAtJ,IAGA,OAAA0c,GAGAzP,EAAA+Q,wBAAA,SAAAH,GACA,OAAA5Q,EAAAoR,oBAAAR,IAGA5Q,EAAA2K,SAAA,WACA,IAAAtN,EAAAF,EAAAgT,IAQA,OANA9S,EAAAlI,EAAAkI,IAAAF,EAAA,SAAAtI,GACA,OAAAA,EAAAkH,EAAAlH,EAAAwc,GAAAxc,EAAAwc,GAAAxc,EAAAkH,EAAAlH,EAAAwc,GAAAxc,EAAAwc,KAGAhU,EAAAhI,EAAAmD,MAAA2C,SAAAkC,EAAA2C,EAAAkN,iBAKAlN,EAAA4K,SAAA,WACA,IAAA3N,EAAAE,EAAAgT,IAQA,OANAlT,EAAA9H,EAAA8H,IAAAE,EAAA,SAAAtI,GACA,OAAAA,EAAAkH,EAAAlH,EAAAwc,KAGApU,EAAA5H,EAAAmD,MAAAoC,IAAAqC,EAAA+C,EAAAkN,iBAmCAlN,EAAAsR,gBAAA,WACA,UAAA5B,EAAA,EACAA,EAAA,IAEA9Y,KAAAoJ,EAAAsF,eAEA,QAAAvS,EAAA,EAA2BA,EAAA6c,EAAAtT,SAAwBvJ,EACnD2c,EAAA9Y,KAAAoJ,EAAAsF,eAGA,OAAAoK,GAGA1P,EAAA6Q,sBAAA,SAAAD,GACA,OAAA5Q,EAAAsR,kBAAAV,IAGA5Q,EAAAqJ,SAAA,WAIA,IAHA,IAAAhM,EAAA,KACA8T,EAAAnR,EAAAmR,YAEAP,EAAA,EAAgCA,EAAAO,EAAA/Z,SAA+BwZ,EAAA,CAC/D,IAAAta,EAAA6a,EAAAP,GACAzd,EAAAkC,EAAAmD,MAAA4E,SAAA9G,EAAA0J,EAAA6Q,sBAAAD,KACA,OAAAvT,KAAAlK,KAAAkK,EAAAlK,GAGA,OAAAkC,EAAAmD,MAAA2C,SAAAkC,EAAA2C,EAAAqM,iBAGArM,EAAAsJ,SAAA,WAIA,IAHA,IAAArM,EAAA,KACAkU,EAAAnR,EAAAmR,YAEAP,EAAA,EAAgCA,EAAAO,EAAA/Z,SAA+BwZ,EAAA,CAC/D,IAAAta,EAAA6a,EAAAP,GACAzd,EAAAkC,EAAAmD,MAAA0E,SAAA5G,EAAA0J,EAAA6Q,sBAAAD,KACA,OAAA3T,KAAA9J,KAAA8J,EAAA9J,GAGA,OAAAkC,EAAAmD,MAAAoC,IAAAqC,EAAA+C,EAAAqM,iBAqBArM,EAAAuR,+BAAA,WAEA,IADA,IAAAC,EAAAxR,EAAAmR,YACAP,EAAA,EAAgCA,EAAAY,EAAApa,SAA4BwZ,EAI5DI,EAHAQ,EAAAZ,GACAzT,MAEAyT,IAIA5Q,EAAAyR,cAAA,WACA,OAAA7B,GAGAva,EAAAwD,SAAAmH,EAAA,yBAAA7G,GACA,OAAAC,UAAAhC,QACA4I,EAAA6C,cACA7C,EAAAU,eAAAvH,IAFA6G,EAAAU,mBAKArL,EAAAwD,SAAAmH,EAAA,uBAAA7G,GACA,OAAAC,UAAAhC,QACA4I,EAAA6C,cACA7C,EAAAS,aAAAtH,IAFA6G,EAAAS,iBAKAT,EAAA0R,YAAA,SAAA3B,GACA,OAAA3W,UAAAhC,QACAyY,EAAAE,EACA/P,GAFA6P,GAKA7P,EAAAwQ,YAAA,SAAArX,GACA,IAAAC,UAAAhC,OAKA,OAJA,OAAAuY,IACA3P,EAAAuR,iCACA5B,EAAA3P,EAAA0R,aAAA1R,CAAA4P,EAAAlT,aAEAiT,EAEAA,EAAAxW,GAIA6G,EAAAqP,cAAA,SAAAhc,GAAqC,OAAAA,EAAAuJ,OAAAvJ,EAAA+I,QAErC4D,EAAAwF,YAAA,WACA,IAAAmM,EAAA,GAIA,OAHAnC,EAAAiB,QAAA,SAAAxO,EAAAlP,GACA4e,EAAA/a,KAAAvB,EAAAmD,MAAAsF,iBAAAkC,EAAAiC,EAAAlP,EAAAiN,EAAA+Q,wBAAAhe,OAEA4e,GAGA3R,GAQA3K,EAAAuc,oBAAA,SAAA5R,GACA,IAAA6R,EAAA,GACAC,EAAA,GAEA9R,EAAA+R,kBAAA,OACA/R,EAAAgS,aAAA,SACAhS,EAAAiS,WAAA,IAEAjS,EAAA3K,EAAA+R,WAAApH,IAEA4F,aAAA,GACA5F,EAAA8F,aAAA,GAEA,IAAAoM,EAAA/c,EAAAkS,MAAAqD,SAAAvS,OAAA,SAEAga,EAAA,SAAA9e,GACA,OAAAA,EAAAQ,GAQAmM,EAAAnM,EAAA,SAAAsF,GACA,OAAAC,UAAAhC,QACA8a,EAAA/Y,EACA6G,GAFAkS,GAYAlS,EAAAoS,oBAAA,SAAAjZ,GACA,OAAAC,UAAAhC,QACA+a,EAAAhZ,EACA6G,GAFAmS,GAKAnS,EAAAqS,KAAA,WAIA,OAHAld,EAAAkI,IAAA2C,EAAA1J,QAAA6G,MAAA,SAAA1G,GACA,OAAAuJ,EAAAoS,qBAAApS,CAAAvJ,MAKAuJ,EAAAsS,KAAA,WAIA,OAHAnd,EAAA8H,IAAA+C,EAAA1J,QAAA6G,MAAA,SAAA1G,GACA,OAAAuJ,EAAAoS,qBAAApS,CAAAvJ,MAKAuJ,EAAAuS,QAAA,SAAAlf,GACA,IAAAW,EAAAgM,EAAAoS,qBAAApS,CAAA3M,GACAQ,EAAAmM,EAAAnM,GAAAmM,CAAAhM,GAGA,OAFA8a,MAAAjb,IAAAG,GAAA,KACAH,EAAA,GACAA,GAGA,IAAA2e,EAAA,SAAAnf,GACA,OAAA2M,EAAA2F,OAAA3F,CAAA3M,IAGAof,EAAA,SAAApf,GACA,OAAA2M,EAAAuS,QAAAlf,GAAAye,EAAA,KAGA9R,EAAA0S,cAAA,SAAAC,GACA,GAAA3S,EAAA4F,cAAA,CACA,IAAAD,EAAAgN,EAAAhV,OAAA,QAEAgI,EAAA/H,UACA+H,EAAAgN,EAAA9U,OAAA,QACAiG,KAAA,wBACAA,KAAA,aACAkC,GAAA,QAAAhG,EAAAqF,UAGAM,EACA7B,KAAA,aACAI,KAAAsO,GACAnd,EAAAoC,WAAAkO,EAAA3F,EAAAoE,sBACAN,KAAA,UAAA2O,KAIAzS,EAAA4S,eAAA,SAAAD,GACA,GAAA3S,EAAA4F,cAAA,CACA,IAAAiN,EAAAF,EAAArP,UAAA,QACAY,KAAAsO,GACAnd,EAAAoC,WAAAob,EAAA7S,EAAAoE,sBACAN,KAAA,UAAA2O,KAIA,IAAAK,EAAA,SAAAzf,GACA,OAAA2M,EAAA6F,OAAA7F,CAAA3M,IAgFA,OA7EA2M,EAAA+S,eAAA,SAAA9Q,GACAjC,EAAA8F,eACA7D,EAAAtE,OAAA,SAEAC,SACAqE,EAAApE,OAAA,SAAAqG,KAAA4O,IAIA9S,EAAAgT,eAAA,SAAA/Q,GACAjC,EAAA8F,eACA7D,EAAAqB,UAAA,SAAAY,KAAA4O,IAUA9S,EAAAiT,mBAAA,SAAA9Z,GACA,OAAAC,UAAAhC,QACA0a,EAAA3Y,EACA6G,GAFA8R,GAWA9R,EAAAkT,sBAAA,SAAA/Z,GACA,OAAAC,UAAAhC,QACAya,EAAA1Y,EACA6G,GAFA6R,GAKA7R,EAAAmT,gBAAA,SAAA9f,EAAAN,GAEA,OADA4G,KAAAtE,EAAAE,UAAAM,iBAAA9C,EACAiN,EAAAoP,SAAA/b,EAAAN,IAGAiN,EAAAoT,kBAAA,SAAA/f,EAAAN,GAEA,OAAAiN,EAAAoP,SAAA/b,EAAAsG,KAAAtE,EAAAE,UAAAM,mBAGAmK,EAAAuN,mBAAA,WACAvN,EAAA8E,YACA9E,EAAAsD,UAAA,KAAAtD,EAAA+R,mBAAAtN,KAAA,SAAApR,GACA2M,EAAAqT,eAAAhgB,GACA2M,EAAAkF,kBAAAvL,MAEAqG,EAAAmF,eAAAxL,QAIAqG,EAAAsD,UAAA,KAAAtD,EAAA+R,mBAAAtN,KAAA,SAAApR,GACA2M,EAAAoF,eAAAzL,SAKAqG,EAAAqT,eAAA,SAAAhgB,GACA,OAAA2M,EAAA8E,UAAAzR,EAAAiB,MAGA0L,EAAAqF,QAAA,SAAAhS,GACA,IAAAgH,EAAAhH,EAAAiB,IACAe,EAAA+I,OAAAE,QAAA,WACA0B,EAAA3F,UACAhF,EAAAkC,UAAAyI,EAAAuD,iBAIAvD,GAmCA3K,EAAAie,SAAA,SAAA7V,EAAA8F,GACA,IAIAgQ,EAGA1M,EALA2M,EAAA,YAGAC,EAAA,EAIAC,EATA,GAWA1T,EAAA3K,EAAAse,OAAAte,EAAA+R,WAAA/R,EAAA0K,UAAA,MAkCA,SAAA6T,IACA,GAAA5T,EAAAsC,UAAA,CACA,IAAAuR,EAoPA1e,EAAA2a,OAAA+D,MAAAxQ,KAAA,MAAArP,MAAA,SAAAX,GACA,OAAA2M,EAAAmC,eAAAnC,CAAA3M,KAlPAkgB,KAAApe,EAAAkI,IAAA,CAAA2C,EAAAyC,QAAAzC,EAAA2C,WAAA,EAEA,IAAAmR,EAAA9T,EAAA+T,YAEAC,EAAAH,EAAA7T,EAAAiU,sBAEA,GAAApN,EAAA,CACA,IAAAqN,EAAArN,EAAAvD,UAAA,KAAAkQ,GACA5X,KAAAoY,IAaA,SAAAE,EAAAJ,EAAAE,GACA,IAAAG,EASA,SAAAD,GAOA,OANAA,EACA9J,QACAvM,OAAA,KACAiG,KAAA,iBAAAzQ,EAAAN,GACA,OAAAygB,EAAA,KAAAzgB,IAdAqhB,CAAAF,IAmBA,SAAAC,EAAAL,GACAK,EAAAtW,OAAA,QACAiG,KAAA,gBAAAzQ,EAAAN,GACA,OAAAiN,EAAAoP,SAAA/b,EAAAN,KAEAiT,GAAA,QAAAX,GACAvB,KAAA,aAAAzQ,EAAAN,GACA,OAAAshB,EAAAhhB,EAAAN,EAAA+gB,KAEArc,aACAE,SAAAqI,EAAAoE,sBACAkQ,UAAA,IAAAC,IA5BAC,CAAAL,EAAAL,GA+BA,SAAAK,GACAnU,EAAA8F,eACAqO,EAAAtW,OAAA,SAAAqG,KAAA,SAAA7Q,GACA,OAAA2M,EAAA6F,OAAA7F,CAAA3M,KAhCAohB,CAAAN,GAqCA,SAAAH,EAAAF,GACA,GAAA9T,EAAA4F,cAAA,CACA,IAAAiN,EAAAhM,EAAAvD,UAAA,QAAAkQ,GACA5X,KAAAoY,GAEAnB,EAAAvI,OAAAzG,SAEA,IAAA6Q,EAAA7B,EACAzI,QACAvM,OAAA,QACAiG,KAAA,iBAAAzQ,EAAAN,GACA,OAAAygB,EAAA,KAAAzgB,IAEAiT,GAAA,QAAAX,GACAhQ,EAAAoC,WAAAid,EAAA1U,EAAAoE,sBACAN,KAAA,qBAAAzQ,GACAA,EAAAshB,YAAA3U,EAAA2U,cACAthB,EAAAuhB,YAAArB,EACA,IAAAsB,EAAAf,EAAAe,SAAAxhB,GACA,OAAAyb,MAAA+F,EAAA,KAAA/F,MAAA+F,EAAA,IACA,iBAEA,aAAAA,EAAA,MAGA/Q,KAAA,wBACAI,KAAA,SAAA7Q,GACA,IAAAuI,EAAAvI,EAAAuI,KACA,OAAAkZ,EAAAlZ,IAAAmZ,EAAA1hB,GACA,GACA2M,EAAA2F,OAAA3F,CAAA3M,MAjEA2hB,CAAAhB,EAAAF,GAlBAmB,CAAAf,EAAAJ,EAAAE,GAwFA,SAAAA,EAAAF,IAMA,SAAAE,EAAAF,GACA,IAAAoB,EAAArO,EAAAvD,UAAA,KAAAkQ,GACA5X,KAAAoY,GACArW,OAAA,QACAmG,KAAA,aAAAzQ,EAAAN,GACA,OAAAshB,EAAAhhB,EAAAN,EAAA+gB,KAEAze,EAAAoC,WAAAyd,EAAAlV,EAAAoE,qBACA,SAAAtP,GACAA,EAAAwf,UAAA,IAAAC,KACazQ,KAAA,gBAAAzQ,EAAAN,GACb,OAAAiN,EAAAoP,SAAA/b,EAAAN,MAhBAoiB,CAAAnB,EAAAF,GAoBA,SAAAE,EAAAF,GACA,GAAA9T,EAAA4F,cAAA,CACA,IAAAiN,EAAAhM,EAAAvD,UAAA,QAAAkQ,GACA5X,KAAAoY,GACA3e,EAAAoC,WAAAob,EAAA7S,EAAAoE,sBACAN,KAAA,qBAAAzQ,GACAA,EAAAshB,YAAA3U,EAAA2U,cACAthB,EAAAuhB,YAAArB,EACA,IAAAsB,EAAAf,EAAAe,SAAAxhB,GACA,OAAAyb,MAAA+F,EAAA,KAAA/F,MAAA+F,EAAA,IACA,iBAEA,aAAAA,EAAA,MAGA/Q,KAAA,wBACAI,KAAA,SAAA7Q,GACA,IAAAuI,EAAAvI,EAAAuI,KACA,OAAAkZ,EAAAlZ,IAAAmZ,EAAA1hB,GACA,GACA2M,EAAA2F,OAAA3F,CAAA3M,MAvCA+hB,CAAApB,EAAAF,GA4CA,SAAAE,GACAhU,EAAA8F,eACAe,EAAAvD,UAAA,KAAAkQ,GACA5X,KAAAoY,GACArW,OAAA,SACAuG,KAAA,SAAA7Q,GACA,OAAA2M,EAAA6F,OAAA7F,CAAA3M,KAjDAgiB,CAAArB,GAzFAsB,CAAAtB,EAAAF,GA+IA,SAAAI,GACAA,EAAA5J,OAAAzG,SA9IA0R,CAAArB,GAkJAlU,EAAA8E,YACA9E,EAAAsD,UAAA,KAAAkQ,GAAA/O,KAAA,SAAApR,GACA2M,EAAAwV,gBAAAniB,GACA2M,EAAAkF,kBAAAvL,MAEAqG,EAAAmF,eAAAxL,QAIAqG,EAAAsD,UAAA,KAAAkQ,GAAA/O,KAAA,SAAApR,GACA2M,EAAAoF,eAAAzL,UA4EA,SAAAob,EAAA1hB,GACA,IAAAoiB,EAAApiB,EAAAqiB,SAAAriB,EAAAsiB,WACA,OAAA7G,MAAA2G,MAAA/B,EAGA,SAAAoB,EAAAlZ,GACA,WAAAoE,EAAAmC,eAAAnC,CAAApE,GAGA,SAAA2Y,EAAAqB,GACAA,EAAAjB,YAAA3U,EAAA2U,cACA,IAAAtW,EAAA1E,KAAAkc,UAUA,SAAAxX,GACA,OAAAA,GAAAyQ,MAAAzQ,EAAAsX,aAAA7G,MAAAzQ,EAAAqX,WAVAI,CAAAzX,KACAA,EAAA,CAAuBsX,WAAA,EAAAD,SAAA,IACvB,IAAA3iB,EAAAoC,EAAA4gB,YAAA1X,EAAAuX,GAEA,OADAjc,KAAAkc,SAAA9iB,EAAA,GACA,SAAAkB,GACA,OAAAogB,EAAAthB,EAAAkB,GAAA,EAAA+L,EAAA+T,cAQA,SAAA1O,EAAAhS,GACA2M,EAAAqF,QAAAhS,EAAAuI,MAGA,SAAAyY,EAAAhhB,EAAAN,EAAA+gB,GACA,IAAAkC,EAAAlC,EAAAzgB,EAAAN,GAGA,OAFAijB,EAAAtf,QAAA,YACAsf,EAAA,QACAA,EAGA,OAzTAhW,EAAAiW,UAAAjW,EAAAkW,IAEAlW,EAAA2F,MAAA,SAAAtS,GACA,OAAA2M,EAAAsF,aAAAtF,CAAA3M,EAAAuI,QAGAoE,EAAA4F,aAAA,GAEA5F,EAAA6F,MAAA,SAAAxS,GACA,OAAA2M,EAAAsF,aAAAtF,CAAA3M,EAAAuI,MAAA,KAAAoE,EAAAmC,eAAAnC,CAAA3M,EAAAuI,QAGAoE,EAAAoE,mBAAA,KAEApE,EAAAsE,SAAA,WASA,OARAtE,EAAA4D,WAEAiD,EAAA7G,EAAA2D,MACA9F,OAAA,KACAiG,KAAA,yBAAA9D,EAAAmW,KAAA,IAAAnW,EAAAoW,KAAA,KAEAxC,IAEA5T,GA6LAA,EAAA2U,YAAA,SAAA9gB,GACA,OAAAuF,UAAAhC,QACAqc,EAAA5f,EACAmM,GAFAyT,GAUAzT,EAAAqW,OAAA,SAAAxiB,GACA,OAAAuF,UAAAhC,QACAmc,EAAA1f,EACAmM,GAFAuT,GAUAvT,EAAAmW,GAAA,WACA,OAAAnW,EAAAyC,QAAA,GAQAzC,EAAAoW,GAAA,WACA,OAAApW,EAAA2C,SAAA,GAGA3C,EAAA+T,UAAA,WACA,OAAA5e,EAAAwO,IAAAmQ,MAAAc,YAAArB,GAAAoB,YAAAlB,IAGAzT,EAAAwV,gBAAA,SAAAniB,GACA,OAAA2M,EAAA8E,UAAA9E,EAAAsF,aAAAtF,CAAA3M,EAAAuI,QAGAoE,EAAA0E,SAAA,WAEA,OADAkP,IACA5T,GAQAA,EAAAsW,iBAAA,SAAAnd,GACA,OAAAC,UAAAhC,QACAsc,EAAAva,EACA6G,GAFA0T,GA+CA1T,EAAAkC,OAAAzE,EAAA8F,IAmCAlO,EAAAkhB,SAAA,SAAA9Y,EAAA8F,GACA,IAQAiT,EACAC,EATAC,EAAA,EAGA1W,EAAA3K,EAAAka,eAAAla,EAAAsR,oBAAA,KAEAgQ,EAJA,EAKAC,GAAA,EAkCA,SAAAC,EAAAxjB,GACA,OAAAgC,EAAAmD,MAAA2F,WAAAnG,KAAAC,IAAA+H,EAAAjE,GAAAiE,CAAA3M,EAAA0I,EAAA1I,EAAAge,IAAArR,EAAAjE,GAAAiE,CAAA3M,EAAAge,MAsDA,SAAAyF,IAKA,YAJA5hB,IAAAshB,IACAA,EAAAxW,EAAAyL,cAGA+K,EA6CA,SAAAnR,EAAAhS,GACA2M,EAAAqF,QAAAhS,EAAAuI,MA6CA,OApLAvG,EAAAwD,SAAAmH,EAAA,qBACAA,EAAA+W,WACAP,OAAAthB,EACAuhB,OAAAvhB,EACA4hB,MAGA9W,EAAA4N,SAAA,WACA,IAAAjR,EAAAqD,EAAAiM,aAAA3I,UAAA,WACA1H,KAAAoE,EAAAwQ,gBA8DA,WACA,QAAAtb,IAAAuhB,EAAA,CACA,IAAAO,EAAAhX,EAAAoJ,YAAA0N,IAAA,EAAAA,IAEApU,EAAA1K,KAAAU,OAAAsH,EAAA2J,eAAAqN,EAAA,GAAAL,GAAAK,IAEAtU,GAAAuU,KAAAnI,MAAApM,MAAAgU,KACAhU,EAAAgU,GAEAD,EAAA/T,GArEAwU,GAEAva,EACAyN,QACAvM,OAAA,KACAiG,KAAA,iBAAAzQ,EAAAN,GACA,gBAAAA,IAGA4J,EAAA8H,KAAA,SAAApR,EAAAN,IAaA,SAAA6J,EAAAvJ,EAAAN,GACA,IAAAokB,EAAAva,EAAA0G,UAAA,YACA1H,KAAAvI,EAAAwJ,QAEAsa,EAAA/M,QACAvM,OAAA,QACAiG,KAAA,eACAA,KAAA,OAAA9D,EAAAoP,UACAvR,OAAA,SAAAqG,KAAAlE,EAAA6F,SAEA7F,EAAAoJ,aACA+N,EAAAnR,GAAA,QAAAX,GAEAhQ,EAAAoC,WAAA0f,EAAAnX,EAAAoE,sBACAN,KAAA,aAAAzQ,GACA,IAAAyI,EAAAkE,EAAAlE,GAAAkE,CAAA3M,EAAAyI,GAEA,OADA8a,GAAA5W,EAAAoJ,eAAAtN,GAAA2a,EAAA,GACAphB,EAAAmD,MAAA2F,WAAArC,KAEAgI,KAAA,aAAAzQ,GACA,IAAA0I,EAAAiE,EAAAjE,GAAAiE,CAAA3M,EAAA0I,EAAA1I,EAAAge,IAKA,OAHAhe,EAAA0I,EAAA,IACAA,GAAA8a,EAAAxjB,IAEAgC,EAAAmD,MAAA2F,WAAApC,KAEA+H,KAAA,QAAA2S,GACA3S,KAAA,kBAAAzQ,GACA,OAAAwjB,EAAAxjB,KAEAsK,OAAA,SAAAuG,KAAAlE,EAAA6F,SAEAxQ,EAAAoC,WAAA0f,EAAA7M,OAAAtK,EAAAoE,sBACAN,KAAA,YACAD,SA7CAuT,CAFAjiB,EAAAwI,OAAAhE,MAEAtG,KAGA2M,EAAAwQ,YAAA,OAkEAxQ,EAAAuN,mBAAA,WACA,IAAA4J,EAAAnX,EAAAiM,aAAA3I,UAAA,YACA4H,EAAAlL,EAAAyI,QAAAyC,SAEA,GAAAlL,EAAAoJ,YACApJ,EAAA8E,aACAqS,EAAA3T,QAAAnO,EAAAE,UAAAK,eAAA,SAAAvC,GACA,OAAA2M,EAAA8E,UAAA9E,EAAAsF,aAAAtF,CAAA3M,EAAAuI,SAEAub,EAAA3T,QAAAnO,EAAAE,UAAAI,iBAAA,SAAAtC,GACA,OAAA2M,EAAA8E,UAAA9E,EAAAsF,aAAAtF,CAAA3M,EAAAuI,WAGAub,EAAA3T,QAAAnO,EAAAE,UAAAK,gBAAA,GACAuhB,EAAA3T,QAAAnO,EAAAE,UAAAI,kBAAA,SAGA,GAAAqK,EAAAqL,aAAAH,GASAiM,EAAA3T,QAAAnO,EAAAE,UAAAI,kBAAA,OATA,CACA,IAAA0hB,EAAAnM,EAAA,GACAoM,EAAApM,EAAA,GAEAiM,EAAA3T,QAAAnO,EAAAE,UAAAI,iBAAA,SAAAtC,GACA,IAAAkkB,EAAAvX,EAAAsF,aAAAtF,CAAA3M,EAAAuI,MACA,OAAA2b,EAAAF,GAAAE,GAAAD,MAaAtX,EAAAwX,UAAA,SAAAre,GACA,OAAAC,UAAAhC,QACAwf,EAAAzd,EACA6G,GAFA4W,GAeA5W,EAAAyX,IAAA,SAAAte,GACA,OAAAC,UAAAhC,QACAuf,EAAAxd,EACA6G,GAFA2W,GAKA3W,EAAAmL,YAAA,WACA,IAAAD,EAAAlL,EAAAyI,QAAAyC,SAQA,OAPAlL,EAAApH,UAAAge,IACA1L,EAAA,GAAAA,EAAA3B,IAAAvJ,EAAApH,SAAA,GACAsS,EAAA,GAAAA,EAAA3B,IAAAvJ,EAAApH,SAAA,GAEAoH,EAAAiM,aAAAtO,OAAA,UACAzK,KAAA8M,EAAAyI,QAAAyC,YAEAA,GAGAlL,EAAAyF,gBAAA,SAAApS,GACA2M,EAAArC,OAAA,eAAA2F,UAAA,YAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,gBACTxD,EAAArC,OAAA,eAAA2F,UAAA,YAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,eAGTxD,EAAA0F,YAAA,SAAArS,GACA2M,EAAAsD,UAAA,eAAAA,UAAA,YAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,gBACTxD,EAAAsD,UAAA,eAAAA,UAAA,YAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,eAGTxD,EAAAkC,OAAAzE,EAAA8F,IAmCAlO,EAAAqiB,UAAA,SAAAja,EAAA8F,GACA,IAWAoU,EAVAC,EAAA,aACAC,EAAA,MACAC,EAAA,OACAC,EAAA,OAEA/X,EAAA3K,EAAAka,eAAAla,EAAAsR,oBAAA,KACAqR,GAAA,EACAC,EARA,EASAC,EAAA,SACAC,EAAA,GAgHA,SAAAC,EAAA/kB,GACA,OAAAA,KAAAqD,QAAA,iBAAArD,EA2GA,OAzNA2M,EAAAoE,mBAAA,KAEApE,EAAA4N,SAAA,WACA,IAAAjR,EAAAqD,EAAAiM,aAAA3I,UAAA,WACA1H,KAAAoE,EAAAwQ,eAEA6H,EAAA1b,EACAyN,QACAvM,OAAA,KACAiG,KAAA,iBAAAzQ,EAAAN,GACA,gBAAAA,KA0CA,SAAAslB,EAAA1b,GACA,IAAA2b,EAAAnjB,EAAAwO,IAAA2U,OACAxc,EAAA,SAAAzI,GACA,OAAA2M,EAAAlE,GAAAkE,CAAA3M,EAAAyI,KAEAC,EAAA,SAAA1I,GACA,OAAA2M,EAAAjE,GAAAiE,CAAA3M,EAAA0I,EAAA1I,EAAAge,MAEA0E,YAAAmC,GACAK,QAAAJ,GACAR,GACAW,EAAAE,QAAAb,GAGAU,EAAAxa,OAAA,QACAiG,KAAA,gBACAA,KAAA,SAAA9D,EAAAoP,UACAtL,KAAA,OAAA9D,EAAAoP,UAEA/Z,EAAAoC,WAAAkF,EAAAgB,OAAA,aAAAqC,EAAAoE,sBACAN,KAAA,aAAAzQ,GACA,OAAA+kB,EAAAE,EAAAjlB,EAAAwJ,WA5DA4b,CAAAJ,EAAA1b,GAgEA,SAAA0b,EAAA1b,GACA,GAAAqb,EAAA,CACA,IAAAU,EAAAvjB,EAAAwO,IAAA+U,OACA5c,EAAA,SAAAzI,GACA,OAAA2M,EAAAlE,GAAAkE,CAAA3M,EAAAyI,KAEAC,EAAA,SAAA1I,GACA,OAAA2M,EAAAjE,GAAAiE,CAAA3M,EAAA0I,EAAA1I,EAAAge,MAEAA,GAAA,SAAAhe,GACA,OAAA2M,EAAAjE,GAAAiE,CAAA3M,EAAAge,MAEA0E,YAAAmC,GACAK,QAAAJ,GACAR,GACAe,EAAAF,QAAAb,GAGAU,EAAAxa,OAAA,QACAiG,KAAA,gBACAA,KAAA,OAAA9D,EAAAoP,UACAtL,KAAA,aAAAzQ,GACA,OAAA+kB,EAAAM,EAAArlB,EAAAwJ,WAGAxH,EAAAoC,WAAAkF,EAAAgB,OAAA,aAAAqC,EAAAoE,sBACAN,KAAA,aAAAzQ,GACA,OAAA+kB,EAAAM,EAAArlB,EAAAwJ,YAzFA8b,CAAAN,EAAA1b,GAkGA,SAAA0b,GACArY,EAAAsO,WACA+J,EAAA5T,KAAA,SAAApR,EAAAN,GACA,IAAA6J,EAAAzH,EAAAwI,OAAAhE,MAEAsI,EAAArF,EAAAe,OAAA,KAAAia,GACA3V,EAAArE,UAAAqE,EAAArF,EAAAiB,OAAA,KAAAiG,KAAA,QAAA8T,IAuCA,SAAA3V,IACAA,EAAAtE,OAAA,QAAAma,GAAAla,QAAAqE,EAAApE,OAAA,QAAAiG,KAAA,QAAAgU,GAAA7V,EAAAtE,OAAA,QAAAma,IACA7T,MAAA,kBAAAH,KAAA,2BAEA7B,EAAAtE,OAAA,QAAAoa,GAAAna,QAAAqE,EAAApE,OAAA,QAAAiG,KAAA,QAAAiU,GAAA9V,EAAAtE,OAAA,QAAAoa,IACA9T,MAAA,kBAAAH,KAAA,0BA1CA8U,CAAA3W,GAEA,IAAA4W,EAAA5W,EAAAqB,UAAA,UAAAuU,GACAjc,KAAAqG,EAAA6W,QAAAjc,QAEAgc,EAAAzO,QACAvM,OAAA,UACAiG,KAAA,QAAA+T,GACA/T,KAAA,IAAAmU,GACAnU,KAAA,OAAA9D,EAAAoP,UACAnL,MAAA,qBACAA,MAAA,uBACA+B,GAAA,qBAAA3S,GACA,IAAA0lB,EAAA5jB,EAAAwI,OAAAhE,OAgCA,SAAAof,GACAA,EAAA9U,MAAA,mBACA8U,EAAA9U,MAAA,qBAjCA+U,CAAAD,GAqCA,SAAAA,EAAA9W,GACA,IAAAnG,EAAAid,EAAAjV,KAAA,MACA/H,EAAAgd,EAAAjV,KAAA,MACA7B,EAAAtE,OAAA,QAAAma,GAAA7T,MAAA,cAAAH,KAAA,UAAA/H,EAAA,aACAkG,EAAAtE,OAAA,QAAAoa,GAAA9T,MAAA,cAAAH,KAAA,QAAAhI,EAAA,IAAAkE,EAAA8K,cAAA,IAAAhP,EAAA,IAAAC,GAxCAkd,CAAAF,EAAA9W,KAEA+D,GAAA,oBAAA3S,GACA,IAAA0lB,EAAA5jB,EAAAwI,OAAAhE,OAwCA,SAAAof,GACAA,EAAA9U,MAAA,qBAAAA,MAAA,uBAxCAiV,CAAAH,GA2CA,SAAA9W,GACAA,EAAAtE,OAAA,QAAAma,GAAA7T,MAAA,kBACAhC,EAAAtE,OAAA,QAAAoa,GAAA9T,MAAA,kBA5CAkV,CAAAlX,KAEApE,OAAA,SAAAqG,KAAAlE,EAAA6F,SAEAgT,EAAA/U,KAAA,cAAAzQ,GACA,OAAAgC,EAAAmD,MAAA2F,WAAA6B,EAAAlE,GAAAkE,CAAA3M,EAAAyI,MAEAgI,KAAA,cAAAzQ,GACA,OAAAgC,EAAAmD,MAAA2F,WAAA6B,EAAAjE,GAAAiE,CAAA3M,EAAA0I,EAAA1I,EAAAge,OAEA1T,OAAA,SAAAuG,KAAAlE,EAAA6F,SAEAgT,EAAAvO,OAAAzG,WAxIAuV,CAAAzc,GAEAqD,EAAAwQ,YAAA,OAGAxQ,EAAA+V,YAAA,SAAA5c,GACA,OAAAC,UAAAhC,QACA8gB,EAAA/e,EACA6G,GAFAkY,GAKAlY,EAAAuY,QAAA,SAAApf,GACA,OAAAC,UAAAhC,QACA+gB,EAAAhf,EACA6G,GAFAmY,GAKAnY,EAAAwY,QAAA,SAAArf,GACA,OAAAC,UAAAhC,QACAugB,EAAAxe,EACA6G,GAFA2X,GAWA3X,EAAAqZ,WAAA,SAAAlgB,GACA,OAAAC,UAAAhC,QACA4gB,EAAA7e,EACA6G,GAFAgY,GAkJAhY,EAAAsZ,UAAA,SAAAngB,GACA,OAAAC,UAAAhC,QACA6gB,EAAA9e,EACA6G,GAFAiY,GAKAjY,EAAAyF,gBAAA,SAAApS,GACA2M,EAAAsD,UAAA,eAAAA,UAAA,QAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,gBACTxD,EAAAsD,UAAA,eAAAA,UAAA,QAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,eAGTxD,EAAA0F,YAAA,SAAArS,GACA2M,EAAAsD,UAAA,eAAAA,UAAA,QAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,gBACTxD,EAAAsD,UAAA,eAAAA,UAAA,QAAAjJ,OAAA,WACA,OAAAlF,EAAAwI,OAAAhE,MAAAmK,KAAA,SAAAzQ,EAAA6K,QACSsF,QAAA,eAGTxD,EAAAkC,OAAAzE,EAAA8F,IA6CAlO,EAAAkkB,UAAA,SAAA9b,EAAA8F,GACA,IAAAiW,EAAArkB,EAAA+E,OAAA,MACA8F,EAAA3K,EAAA0K,UAAA,IAaA,OAXAC,EAAAsE,SAAA,WAIA,OAHAtE,EAAAsD,UAAA,gBAAAY,KAAAsV,EAAAxZ,EAAA8B,YAAAxF,SACA0D,EAAAsD,UAAA,iBAAAY,KAAAsV,EAAAxZ,EAAA1J,QAAAtC,UAEAgM,GAGAA,EAAA0E,SAAA,WACA,OAAA1E,EAAAsE,YAGAtE,EAAAkC,OAAAzE,EAAA8F,IAwBAlO,EAAAokB,UAAA,SAAAhc,EAAA8F,GACA,IAaAmW,EAbAC,EAAA,iBACAC,EAAA,eACAC,EAAA,kBACAC,EAAA,iBAEA9Z,EAAA3K,EAAA0K,UAAA,IAEAga,EAAA,GACAC,EAAA,GACAC,EAAA,SAAA5mB,GACA,OAAAA,GAEA6mB,EAAA/kB,EAAAglB,UA2JA,OAxJAna,EAAAsE,SAAA,WAQA,IACAkN,EAKA4I,EATA,OAJApa,EAAAsD,UAAA,SAAAO,SA6CA,SAAA2N,GAWA,IAVA,IAAA6I,EAAA7I,EAAAvB,QACA3M,UAAA,MAAAsW,GACAhe,KAAA,SAAAvI,GACA,OAAAA,EAAA6c,SAGAoK,EAAAD,EAAAjQ,QACAvM,OAAA,MACAiG,KAAA,QAAA8V,GAEA7mB,EAAA,EAAuBA,EAAAinB,EAAA5iB,SAAqBrE,EAAA,CAC5C,IAAA6R,EAAAoV,EAAAjnB,GACAunB,EAAAzc,OAAA,MACAiG,KAAA,QAAA+V,EAAA,KAAA9mB,GACAwnB,KAAA,SAAAlnB,GACA,OAAAuR,EAAAvR,KAIAgnB,EAAA/P,OAAAzG,SA/DA2W,EAMAhJ,EAAAxR,EAAA3N,OAAAiR,UAAA,SACA1H,KAuBA,WACA8d,IACAA,EAAAtkB,EAAA+N,UAAAC,GAAA6W,IAEA,IAAAQ,EAAAza,EAAA8B,YAAAsE,IAAA2T,GAEA,OAAA5kB,EAAAulB,OACApmB,IAAA0L,EAAA1J,SACAqkB,SAAAT,GACAU,WAAAV,GACAO,QAAAf,EAAAe,EAAA,EAAAA,EAAArjB,SAjCAyjB,GAAA,SAAAxnB,GACA,OAAA2M,EAAAsF,aAAAtF,CAAA3M,MAGA+mB,EAAA5I,EACApH,QACAvM,OAAA,UAGAA,OAAA,MACAiG,KAAA,QAAAgW,GACAjc,OAAA,MACAiG,KAAA,QAAA6V,GACA7V,KAAA,UAAAkW,EAAA5iB,QACAmjB,KAAA,SAAAlnB,GACA,OAAA2M,EAAAsF,aAAAtF,CAAA3M,KAGAme,EAAAlH,OAAAzG,SAEAuW,IAzBApa,GAkEAA,EAAA0E,SAAA,WACA,OAAA1E,EAAAsE,YAQAtE,EAAA1D,KAAA,SAAAxH,GACA,OAAAsE,UAAAhC,QACA2iB,EAAAjlB,EACAkL,GAFA+Z,GAgCA/Z,EAAA8a,QAAA,SAAA3hB,GACA,OAAAC,UAAAhC,QACA4iB,EAAA7gB,EACA6G,GAFAga,GAiBAha,EAAA+a,OAAA,SAAA5hB,GACA,OAAAC,UAAAhC,QACA6iB,EAAA9gB,EACA6G,GAFAia,GAcAja,EAAAiQ,MAAA,SAAA9W,GACA,OAAAC,UAAAhC,QACA8iB,EAAA/gB,EACA6G,GAFAka,GAKAla,EAAAkC,OAAAzE,EAAA8F,IAoCAlO,EAAA2lB,YAAA,SAAAvd,EAAA8F,GACA,IAAAvD,EAAA3K,EAAAuc,oBAAAvc,EAAAsR,oBAAA,KAEAsU,GAAA,EAEAjb,EAAAoE,mBAAA,KAEA,IAAA8W,EAAA,SAAA7nB,GACA,mBA8EA,SAAAA,GACA,IAAAyI,EAAAkE,EAAAlE,GAAAkE,GAAAsF,aAAAtF,CAAA3M,IAGA,OAFAyb,MAAAhT,KACAA,EAAA,GACAA,EAlFA,CAAAzI,GAAA,IAqFA,SAAAA,GACA,IAAA0I,EAAAiE,EAAAjE,GAAAiE,GAAAmC,eAAAnC,CAAA3M,IAGA,OAFAyb,MAAA/S,KACAA,EAAA,GACAA,EAzFA,CAAA1I,GAAA,KAqGA,OA5FA2M,EAAAmb,cAAA,SAAAhiB,GACA,OAAAC,UAAAhC,QACA6jB,EAAA9hB,EACA6G,GAFAib,GAKAjb,EAAA4N,SAAA,WACAqN,GACAjb,EAAAnM,IAAAsE,OAAA,CAAA6H,EAAAqS,OAAArS,EAAAsS,SAEAtS,EAAAnM,IAAA6V,MAAA,CAAA1J,EAAAiS,WAAAjS,EAAA2J,cAAA3J,EAAAkT,0BAEA,IAAAkI,EAAApb,EAAAiM,aAAA3I,UAAA,KAAAtD,EAAA+R,mBACAnW,KAAAoE,EAAA1J,QAAA6G,QAWA,SAAAie,GACA,IAAAzI,EAAAyI,EAAAhR,QAAAvM,OAAA,KAEA8U,EACA7O,KAAA,QAAA9D,EAAA+R,mBACAjO,KAAA,YAAAoX,GACArd,OAAA,UAAAiG,KAAA,iBAAAzQ,EAAAN,GACA,OAAAiN,EAAAgS,aAAA,KAAAjf,IAEAiT,GAAA,QAAAhG,EAAAqF,SACAvB,KAAA,OAAA9D,EAAAmT,iBACArP,KAAA,OACAzO,EAAAoC,WAAA2jB,EAAApb,EAAAoE,sBACAN,KAAA,aAAAzQ,GACA,OAAA2M,EAAAuS,QAAAlf,KAEAyQ,KAAA,mBAAAzQ,GACA,OAAA2M,EAAAuS,QAAAlf,GAAA,QAGA2M,EAAA0S,cAAAC,GAEA3S,EAAA+S,eAAAJ,GA/BA0I,CAAAD,GAkCA,SAAAA,GACA/lB,EAAAoC,WAAA2jB,EAAApb,EAAAoE,sBACAN,KAAA,YAAAoX,GACA5X,UAAA,UAAAtD,EAAAgS,cACAlO,KAAA,OAAA9D,EAAAoT,mBACAtP,KAAA,aAAAzQ,GACA,OAAA2M,EAAAuS,QAAAlf,KAEAyQ,KAAA,mBAAAzQ,GACA,OAAA2M,EAAAuS,QAAAlf,GAAA,QAGA2M,EAAA4S,eAAAwI,GACApb,EAAAgT,eAAAoI,GA7CAE,CAAAF,GAgDA,SAAAA,GACAA,EAAA9Q,OAAAzG,SA/CA0X,CAAAH,GAEApb,EAAAuN,sBA8DAvN,EAAAoN,YAAA,SAAAnL,KAIAjC,EAAAoL,YAAA,SAAAnJ,GAEAjC,EAAAuN,sBAGAvN,EAAAkC,OAAAzE,EAAA8F,IAiCAlO,EAAAmmB,eAAA,SAAA/d,EAAA8F,GACA,IAAAkY,EAAA,MAEAzb,EAAA3K,EAAAsR,oBAAA,IACA+U,EAAA,GAyBA,SAAAC,EAAAC,EAAA7oB,GACA6oB,EAAA9P,WAAA9L,EAAAiC,KACA2Z,EAAA3Z,IAAA6B,KAAA,QAAA2X,EAAA,KAAA1oB,GAiJA,OA1KAiN,EAAAoE,mBAAA,KACApE,EAAA1J,MAAA,IAEAjB,EAAAwD,SAAAmH,EAAA,wBAGA,IAFA,IAAAiC,EAAAtI,KAAAkiB,cAEA9oB,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAAA,CAC7C,IAAA6oB,EAAAF,EAAA3oB,GAEA4oB,EAAAC,EAAA7oB,QAEAmC,IAAA0mB,EAAA9Z,aAAA8Z,EAAA9Z,UAAA9B,EAAA8B,kBACA5M,IAAA0mB,EAAAtlB,SAAAslB,EAAAtlB,MAAA0J,EAAA1J,SACAslB,EAAArY,WAAAvD,EAAAuD,cACAqY,EAAAjY,IAAA3D,EAAA2D,OACAiY,EAAAzP,OAAAnM,EAAAmM,UACAyP,EAAAxX,mBAAApE,EAAAoE,sBACAwX,EAAAtN,QAAAtO,EAAAsO,WAGA,OAAArM,IAQAjC,EAAA4N,SAAA,WACA,QAAA7a,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAAA,CAC7C,IAAA6oB,EAAAF,EAAA3oB,QAEAmC,IAAA0mB,EAAA3Z,KACA0Z,EAAAC,EAAA7oB,GAGA6oB,EAAA9f,EAAAkE,EAAAlE,KACA8f,EAAA7f,EAAAiE,EAAAjE,KACA6f,EAAAxP,MAAApM,EAAAoM,SACAwP,EAAA3O,MAAAjN,EAAAiN,SAEA2O,EAAAhO,WAEAgO,EAAArX,uBAIAvE,EAAAuN,mBAAA,WACA,QAAAxa,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAAA,CAC7C,IAAA6oB,EAAAF,EAAA3oB,GACA6oB,EAAAnT,MAAAzI,EAAAyI,SACAmT,EAAArO,uBA8BAvN,EAAA8b,QAAA,SAAA3kB,GACAukB,EAAAvkB,EACA,QAAApE,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAAA,CAC7C,IAAA6oB,EAAAF,EAAA3oB,GACA6oB,EAAAjZ,OAAA3C,EAAA2C,UACAiZ,EAAAnZ,MAAAzC,EAAAyC,SACAmZ,EAAApV,QAAAxG,EAAAwG,WAEA,OAAAxG,GAGAA,EAAA+b,SAAA,WACA,OAAAL,GAWA1b,EAAA2K,SAAA,WACA,OAAAxV,EAAAkI,IATA,WAEA,IADA,IAAA2e,EAAA,GACAjpB,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAC7CipB,EAAAplB,KAAA8kB,EAAA3oB,GAAA4X,YAEA,OAAAqR,EAIAC,KAWAjc,EAAA4K,SAAA,WACA,OAAAvV,EAAAmD,MAAAoC,IAAAzF,EAAA8H,IATA,WAEA,IADA,IAAAif,EAAA,GACAnpB,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAC7CmpB,EAAAtlB,KAAA8kB,EAAA3oB,GAAA6X,YAEA,OAAAsR,EAIAC,IAAAnc,EAAAkN,iBAWAlN,EAAAqJ,SAAA,WACA,OAAAhU,EAAAmD,MAAA2C,SAAAhG,EAAAkI,IATA,WAEA,IADA,IAAA2e,EAAA,GACAjpB,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAC7CipB,EAAAplB,KAAA8kB,EAAA3oB,GAAAsW,YAEA,OAAA2S,EAIAI,IAAApc,EAAAqM,iBAWArM,EAAAsJ,SAAA,WACA,OAAAjU,EAAAmD,MAAAoC,IAAAzF,EAAA8H,IATA,WAEA,IADA,IAAAif,EAAA,GACAnpB,EAAA,EAAuBA,EAAA2oB,EAAAtkB,SAAsBrE,EAC7CmpB,EAAAtlB,KAAA8kB,EAAA3oB,GAAAuW,YAEA,OAAA4S,EAIAG,IAAArc,EAAAqM,iBAGArM,EAAAwF,YAAA,WACA,IAAAmM,EAAA,GAQA,OAPA+J,EAAAjL,QAAA,SAAA6L,EAAAvf,GACA,IAAAwf,EAAAD,EAAA9W,cACA+W,EAAAnlB,OAAA,EACAua,EAAA/a,KAAAmD,MAAA4X,EAAA4K,GAEA5K,EAAA/a,KAAAvB,EAAAmD,MAAAsF,iBAAAwe,IAAAhmB,QAAAyG,EAAAuf,EAAAna,oBAEAwP,GAGA3R,EAAAyF,gBAAA,SAAApS,GACA,QAAA0J,EAAA,EAAuBA,EAAA2e,EAAAtkB,SAAsB2F,EAC7C2e,EAAA3e,GACA0I,gBAAApS,IAIA2M,EAAA0F,YAAA,SAAArS,GACA,QAAA0J,EAAA,EAAuBA,EAAA2e,EAAAtkB,SAAsB2F,EAC7C2e,EAAA3e,GACA2I,YAAArS,IAIA2M,EAAAkC,OAAAzE,EAAA8F,IA+BAlO,EAAAmnB,mBAAA,SAAA/e,EAAA8F,GACA,IAAAvD,EAAA3K,EAAA+R,WAAA/R,EAAA0K,UAAA,KAEAC,EAAAqP,cAAA,SAAAhc,EAAAN,GACA,OAAAM,IAGA,IACAopB,EADAC,EAAAvnB,EAAAwnB,IAAA3G,OAGA4G,EAAA,GA0BA,SAAAhP,EAAAlS,GACA,IAAAE,EAWA,WAGA,IAFA,IAAAA,EAAA,GACAihB,EAAA7c,EAAA1J,QAAA6G,MACApK,EAAA,EAAuBA,EAAA8pB,EAAAzlB,SAAqBrE,EAC5C6I,EAAAoE,EAAAsF,aAAAtF,CAAA6c,EAAA9pB,KAAAiN,EAAAmC,eAAAnC,CAAA6c,EAAA9pB,IAEA,OAAA6I,EAjBAkhB,GAEA,GAkBA,SAAAphB,GACA,OAAAqhB,EAAArhB,GAAA4J,YAnBA0X,CAAAthB,GAAA,CACA,IAAAuhB,EAqBA,SAAAvhB,GAiBA,OAhBAsE,EAAA2D,MACAL,UAkBA,SAAA5H,GACA,gBAAAA,EAAA,MAAAqhB,EAAArhB,GAAApI,KAnBA4pB,CAAAxhB,IACA8H,QAAA,oBAAAnQ,GACA,OAAA8pB,EAAAzhB,EAAArI,KAEAmQ,QAAA,sBAAAnQ,GACA,OAAA+pB,EAAA1hB,EAAArI,KAEAyQ,KAAA,iBAAAzQ,GACA,IAAAgqB,EAAAN,EAAArhB,GAAApI,KACAgqB,EAAAjoB,EAAAmD,MAAA8E,SAAAyf,EAAArhB,GAAA4J,YAAAjS,IACAkqB,EAAAF,EAAA,IAAAC,EAGA,OAFAH,EAAAzhB,EAAArI,KAAAkqB,GAAA,aACAH,EAAA1hB,EAAArI,KAAAkqB,GAAA,eACAA,IApCAC,CAAA9hB,IA6DA,SAAAuhB,EAAAvhB,EAAAE,GACA,IAAA6hB,EAAAR,EACAtf,OAAA,QACAmG,KAAA,gBAAAzQ,GACA,IAAAqqB,EAAAvoB,EAAAwI,OAAAhE,MAAAmK,KAAA,QACA,OAAA4Z,GAEA,SAEA1X,GAAA,iBAAA3S,GACA,OAAA2M,EAAAqF,QAAAhS,EAAAqI,KAGArG,EAAAoC,WAAAgmB,EAAAzd,EAAAoE,sBAAAN,KAAA,gBAAAzQ,EAAAN,GACA,OAAAiN,EAAAoP,SAAAxT,EAAAmhB,EAAArhB,GAAA4J,YAAAjS,IAAAN,KAzEA4qB,CAAAV,EAAAvhB,EAAAE,GAqFA,SAAAqhB,EAAAvhB,EAAAE,GACAoE,EAAA8F,eACAmX,EAAA3Z,UAAA,SAAAY,KAAA,SAAA7Q,GACA,IAAAiB,EAAAspB,EAAAliB,EAAArI,GACAW,EAAA4H,EAAAtH,GACA,OAAA0L,EAAA6F,OAAA7F,CAAA,CAAuC1L,MAAAN,YAxFvC8R,CAAAmX,EAAAvhB,EAAAE,IAyCA,SAAAuhB,EAAAzhB,EAAArI,GACA,OAAA2M,EAAA8E,aAAA9E,EAAA8E,UAAA8Y,EAAAliB,EAAArI,IAGA,SAAA+pB,EAAA1hB,EAAArI,GACA,OAAA2M,EAAA8E,cAAA9E,EAAA8E,UAAA8Y,EAAAliB,EAAArI,IAGA,SAAAuqB,EAAAliB,EAAArI,GACA,OAAA0pB,EAAArhB,GAAA4J,YAAAjS,GAGA,SAAA0pB,EAAA3gB,GACA,OAAAwgB,EAAAxgB,GAiIA,OAvNA4D,EAAAsE,SAAA,WACAtE,EAAA4D,WACA,QAAAlI,EAAA,EAAgCA,EAAAkhB,EAAAxlB,SAA+BsE,EAAA,CAC/D,IAGAuhB,EAHAjd,EAAA2D,MAAA9F,OAAA,KACAiG,KAAA,gBAAApI,GAEA4H,UAAA,KAAAyZ,EAAArhB,GAAApI,MACAsI,KAAAmhB,EAAArhB,GAAAE,MACAwO,QACAvM,OAAA,KACAiG,KAAA,QAAAiZ,EAAArhB,GAAApI,MAEA2pB,EACApf,OAAA,QACAiG,KAAA,gBACAA,KAAA,IAAA4Y,GAEAO,EAAApf,OAAA,SAEA+P,EAAAlS,GAEA+gB,GAAA,GAsFAzc,EAAAqF,QAAA,SAAAhS,EAAAqI,GACA,IAAAmiB,EAAAd,EAAArhB,GAAA4J,YAAAjS,GACAgC,EAAA+I,OAAAE,QAAA,WACA0B,EAAA3F,OAAAwjB,GACAxoB,EAAAkC,UAAAyI,EAAAuD,iBAcAvD,EAAA0E,SAAA,WACA,QAAAhJ,EAAA,EAAgCA,EAAAkhB,EAAAxlB,SAA+BsE,EAC/DkS,EAAAlS,GACA+gB,GACAzc,EAAA2D,MAAAL,UAAA,KAAAyZ,EAAArhB,GAAApI,KAAA,SAAAwQ,KAAA,IAAA4Y,GAGAD,GAAA,GAuBAzc,EAAA8d,eAAA,SAAAC,EAAAzqB,EAAAgS,GACA,QAAAvS,EAAA,EAAuBA,EAAA6pB,EAAAxlB,SAAsBrE,EAC7C,GAAA6pB,EAAA7pB,GAAAO,QAGA,OAFAspB,EAAA7pB,GAAA6I,KAAAmiB,EACAnB,EAAA7pB,GAAAuS,cACAtF,EAIA,OADA4c,EAAAhmB,KAAA,CAAwBtD,OAAAsI,KAAAmiB,EAAAzY,gBACxBtF,GASAA,EAAAge,WAAA,SAAAA,GAGA,OAFAtB,EAAAsB,cACAvB,GAAA,EACAzc,GAaAA,EAAAie,SAAA,WACA,OAAArB,GAUA5c,EAAAke,cAAA,SAAA5qB,GAGA,IAFA,IAAA2qB,EAAA,GAEAlrB,EAAA,EAAuBA,EAAA6pB,EAAAxlB,SAAsBrE,EAAA,CAC7C,IAAA6J,EAAAggB,EAAA7pB,GACA6J,EAAAtJ,SACA2qB,EAAArnB,KAAAgG,GAMA,OAFAggB,EAAAqB,EAEAje,GAGAA,EAAAkC,OAAAzE,EAAA8F,IA4CAlO,EAAA8oB,cAAA,SAAA9rB,EAAAkR,GACA,IAKAsD,EALAuX,EAAA,iBACArM,EAAA,OACAC,EAAA,SAEAhS,EAAA3K,EAAAuc,oBAAAvc,EAAA0K,UAAA,KAEAse,EAAA,GAiEA,SAAAC,IACA,IAAA1iB,EAAA,GAIA,OAHAoE,EAAA1J,QAAA6G,MAAAsT,QAAA,SAAAqI,GACAld,EAAAoE,EAAAsF,aAAAtF,CAAA8Y,QAEAld,EAGA,SAAA2iB,EAAAC,EAAA5iB,GACA,IAAA6iB,EAAA1M,EAAA,IAAA1c,EAAAmD,MAAA8E,SAAAkhB,EAAAlrB,MAEAorB,EAAA7X,EAAAlJ,OAAA,KAAAtI,EAAAmD,MAAA8E,SAAAkhB,EAAAlrB,OAUA,OARAorB,EAAA9gB,UACA8gB,EAAA7X,EAAAhJ,OAAA,KACAiG,KAAA,QAAA2a,GACA3a,KAAA,yBAAA0a,EAAA1iB,EAAA,IAAA0iB,EAAAziB,EAAA,MAGA2iB,EAAA5F,MAAAld,EAAA4iB,EAAAlrB,OAEAorB,EA8DA,OAlJA1e,EAAAoE,mBAAA,KAEApE,EAAAoS,oBAAA,SAAA/e,GACA,OAAAA,EAAAW,QAUAgM,EAAAwe,MAAA,SAAAlrB,EAAAwI,EAAAC,GAEA,OADAsiB,EAAAznB,KAAA,CAAsBtD,OAAAwI,IAAAC,MACtBiE,GAGAA,EAAAsE,SAAA,WAmBA,IACA1I,EAXA,OAIAiL,EAAA7G,EAAArC,OAAA,KAAAygB,IACAxgB,UACAiJ,EAAA7G,EAAA2D,MAAA9F,OAAA,KAAAiG,KAAA,QAAAsa,IAdAvX,EAeAA,EAbA7G,EAAAnM,IAAA6V,MAAA,CAAA1J,EAAAiS,WAAAjS,EAAAyC,QAAAzC,EAAAkT,0BAiBAtX,EAAA0iB,IAEAD,EAAA5N,QAAA,SAAA+N,GACA,IAAAE,EAAAH,EAAAC,EAAA5iB,GAEA+iB,EAAAD,EAAA/gB,OAAA,UAAAqU,GAEA2M,EAAA/gB,UACA+gB,EAAAD,EAAA7gB,OAAA,UACAiG,KAAA,QAAAkO,GACAlO,KAAA,OACAA,KAAA,OAAA9D,EAAAmT,iBACAnN,GAAA,QAAAhG,EAAAqF,UAEAhQ,EAAAoC,WAAAknB,EAAA3e,EAAAoE,sBACAN,KAAA,aAAAzQ,GACA,OAAA2M,EAAAuS,QAAAlf,KAGA2M,EAAA0S,cAAAgM,GAEA1e,EAAA+S,eAAA2L,KAlCA1e,EAAAuN,qBAEAvN,GA4DAA,EAAA0E,SAAA,WAQA,IACA9I,EAJA,OAIAA,EAAA0iB,IAEAD,EAAA5N,QAAA,SAAA+N,GACA,IAAAE,EAAAH,EAAAC,EAAA5iB,GAEA+iB,EAAAD,EAAA/gB,OAAA,UAAAqU,GAEA3c,EAAAoC,WAAAknB,EAAA3e,EAAAoE,sBACAN,KAAA,aAAAzQ,GACA,OAAA2M,EAAAuS,QAAAlf,KAEAyQ,KAAA,OAAA9D,EAAAoT,mBAEApT,EAAA4S,eAAA8L,GAEA1e,EAAAgT,eAAA0L,KArBA1e,EAAAuN,qBAEAvN,GAuBAA,EAAA4e,MAAA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAA9e,EAAArC,OAAA,KAAAtI,EAAAE,UAAAE,mBAEAqpB,EAAAlhB,UACAkhB,EAAA9e,EAAA2D,MACA9F,OAAA,KACAiG,KAAA,QAAAzO,EAAAE,UAAAE,oBAEA,IAAAspB,EAAAD,EAAAjhB,OAAA,QACAiG,KAAA,QACAA,KAAA,QAEAgb,EACAjhB,OAAA,QACAiG,KAAA,QAAA9D,EAAAyC,SACAqB,KAAA,SAAA9D,EAAA2C,UACAqD,GAAA,uBACA,IAAAgZ,EAAA7pB,EAAA8pB,MAAAH,EAAAI,QACAzlB,EAAAulB,EAAA,QAAAA,EAAA,GACAD,EAAA7a,KAAAzK,UAGAuG,EAAAsD,UAAA,UAAAO,SAGA,OAAA7D,GAGAA,EAAAkC,OAAA7P,EAAAkR,GAEAvD,GAyBA3K,EAAA8pB,SAAA,SAAA1hB,EAAA8F,GAEA,IAAAsD,EAYAE,EAEAqY,EAIAC,EAhBAC,EAAA,GAEAC,EAAA,GAEA5I,EAAA,EAEA6I,EAAA,MAEAxf,EAAA3K,EAAAse,OAAAte,EAAA6Q,WAAA7Q,EAAA+R,WAAA/R,EAAA0K,UAAA,OAMA+H,EAAA3S,EAAAwO,IAAAoE,OAAA6B,OAAA,UAiBA,SAAA6V,IACA,IAAAC,EAAA7Y,EAAAlJ,OAAA,WAZA,WACA,IAAAoJ,GAAAqY,EAAA,CACA,IAAAlU,EAAA/V,EAAA+V,OAAAmU,EAAArf,EAAAmC,iBACA+I,EAAA,OAAAA,EAAA,MACAnE,EAAA5R,EAAAkS,MAAAqD,SAAAvS,OAAA+S,GACAxB,MAAA,GAAA1J,EAAAyG,mBAEAqB,EAAAT,MAAAN,IAOA4Y,GAEAD,EAAA9hB,UACA8hB,EAAA7Y,EAAAhJ,OAAA,KAAAiG,KAAA,gBACAA,KAAA,4BAAA9D,EAAA0G,kBAAA,MAEArR,EAAAoC,WAAAioB,EAAA1f,EAAAoE,sBACAlR,KAAA4U,GA6CA,SAAA8L,IACAyL,EAAArf,EAAAiU,qBAEAwL,IAlBA5Y,EAAAvD,UAAA,UACA3F,OAAA,kBACAkG,SAEAgD,EAAAvD,UAAA,UACAzF,OAAA,QACAiG,KAAA,qBACAA,KAAA,QACAA,KAAA,QACAA,KAAA,QACAA,KAAA,gBACA,OAAA9D,EAAA0G,oBAUA,IAAA2T,EAAAxT,EAAAvD,UAAA,KAAAkc,GACA5jB,KAAAyjB,IAOA,SAAAhF,GACA,IAAAC,EAAAD,EAAAjQ,QACAvM,OAAA,KACAiG,KAAA,iBAAAzQ,EAAAN,GACA,OAAAysB,EAAA,KAAAzsB,IAGAunB,EAAAzc,OAAA,QAAAiG,KAAA,WAgDA,SAAAwW,GACAta,EAAA4F,eACA0U,EAAAzc,OAAA,QACAmI,GAAA,QAAAX,GAjDA2P,CAAAsF,GACAlF,EAAAiF,GAfApF,CAAAoF,GAkBA,SAAAA,GACAA,EAAA/P,OAAAzG,SAlBA0R,CAAA8E,GAqBA,SAAAA,GACA,IAAA7lB,EAAA6qB,EAAAjoB,OAEAuL,GAAA3C,EAAA0G,mBAAAlS,EAAA,GAAAmiB,GAAAniB,EAEAorB,EAAAvF,EAAAvW,KAAA,qBAAAzQ,EAAAN,GACA,uBAAAA,EAAA,GAAA4jB,EAAA5jB,EAAA4P,GAAA,MACahF,OAAA,QACbmG,KAAA,SAAAnB,GACAmB,KAAA,OAAA9D,EAAAoP,UACApJ,GAAA,QAAAX,GACA7B,QAAA,sBAAAnQ,GACA,QAAA2M,EAAA8E,cAAA9E,EAAA6f,cAAAxsB,KAEAmQ,QAAA,oBAAAnQ,GACA,QAAA2M,EAAA8E,aAAA9E,EAAA6f,cAAAxsB,KAGAgC,EAAAoC,WAAAmoB,EAAA5f,EAAAoE,sBACAN,KAAA,iBAAAzQ,GACA,IAAAgkB,EAAAtQ,EAAA,SAAAA,EAAA,GAAAA,EAAA,GACA,OAAA/O,KAAAC,IAAAof,EAAAtQ,EAAA/G,EAAAmC,eAAAnC,CAAA3M,OAEAyQ,KAAA,YAAAgc,GAMA,SAAAzF,GACAra,EAAA8F,gBACAuU,EAAA/W,UAAA,SAAAO,SACAwW,EAAAxc,OAAA,SAAAqG,KAAA,SAAA7Q,GACA,OAAA2M,EAAA6F,OAAA7F,CAAA3M,MARAohB,CAAA4F,GACAjF,EAAAiF,GA9CA/E,CAAA+E,GAiEA,SAAAjF,EAAAiF,GACA,GAAAra,EAAA4F,cAAA,CACA,IAAAma,EAAA1F,EAAA1c,OAAA,QACAmG,KAAA,IAAAwb,GACAxb,KAAA,IAAAyb,GACAvZ,GAAA,QAAAX,GACAvB,KAAA,iBAAAzQ,EAAAN,GACA,OAAAysB,EAAA,KAAAzsB,IAEAmR,KAAA,SAAA7Q,GACA,OAAA2M,EAAA2F,OAAA3F,CAAA3M,KAEAgC,EAAAoC,WAAAsoB,EAAA/f,EAAAoE,sBACAN,KAAA,YAAAgc,IAIA,SAAAza,EAAAhS,GACA2M,EAAAqF,QAAAhS,GAGA,SAAAysB,EAAAzsB,GACA,IAAAyI,EAAAiL,EAAA/G,EAAAmC,eAAAnC,CAAA3M,IACA2sB,EAAAjZ,EAAA,GAEA,oBADAjL,EAAAkkB,IAAAlkB,GACA,MA6DA,OAtOAkE,EAAAigB,QAAAjgB,EAAAkW,IA0BAlW,EAAAsE,SAAA,WASA,OARAtE,EAAA4D,WAEAiD,EAAA7G,EAAA2D,MACA9F,OAAA,KACAiG,KAAA,yBAAA9D,EAAAwG,UAAAD,KAAA,IAAAvG,EAAAwG,UAAAJ,IAAA,KAEAwN,IAEA5T,GAGAA,EAAA6F,MAAA,SAAAxS,GACA,OAAA2M,EAAAsF,aAAAtF,CAAA3M,GAAA,KAAA2M,EAAAmC,eAAAnC,CAAA3M,KAGA2M,EAAA2F,MAAA,SAAAtS,GACA,OAAA2M,EAAAsF,aAAAtF,CAAA3M,KAGA2M,EAAAlE,EAAA,SAAAA,GACA,OAAA1C,UAAAhC,QACA2P,EAAAjL,EACAkE,GAFA+G,GA6HA/G,EAAA0E,SAAA,WAEA,OADAkP,IACA5T,GAGAA,EAAAoM,MAAA,WACA,OAAAtE,GAQA9H,EAAAyX,IAAA,SAAAxV,GACA,OAAA7I,UAAAhC,QACAuf,EAAA1U,EACAjC,GAFA2W,GAWA3W,EAAAmJ,SAAA,SAAAhQ,GACA,OAAAC,UAAAhC,QACAgoB,EAAAjmB,EACA6G,GAFAof,GAUApf,EAAAkgB,aAAA,SAAA1sB,GACA,OAAA4F,UAAAhC,QACAkoB,EAAA9rB,EACAwM,GAFAsf,GAUAtf,EAAAmgB,aAAA,SAAA3sB,GACA,OAAA4F,UAAAhC,QACAmoB,EAAA/rB,EACAwM,GAFAuf,GAKAvf,EAAA6f,cAAA,SAAAxsB,GACA,OAAA2M,EAAA8E,UAAA9E,EAAAsF,aAAAtF,CAAA3M,KAGA2M,EAAAkC,OAAAzE,EAAA8F,IAgBAlO,EAAA0Q,OAAA,WACA,IAGAa,EADAtG,EAAA,GAEAyG,EAAA,EACAS,EAAA,EACA4Y,EAAA,GACAzJ,EAAA,EAsFA,OAlFArW,EAAA7C,OAAA,SAAA5I,GACA,OAAAuE,UAAAhC,QACAwP,EAAA/R,EACAyL,GAFAsG,GAKAtG,EAAAhJ,OAAA,WAKA,IAAA+oB,EAJAzZ,EAAAjD,MAAA9F,OAAA,KACAiG,KAAA,qBACAA,KAAA,yBAAAiD,EAAA,IAAAS,EAAA,KAEAlE,UAAA,oBACA1H,KAAAgL,EAAApB,eACA4E,QACAvM,OAAA,KACAiG,KAAA,0BACAA,KAAA,qBAAAzQ,EAAAN,GACA,qBAAAA,GAsBA4jB,EAAAyJ,GAtBA,MAEApa,GAAA,qBAAA3S,GACAuT,EAAAnB,gBAAApS,KAEA2S,GAAA,oBAAA3S,GACAuT,EAAAlB,YAAArS,KAGAgtB,EACAxiB,OAAA,QACAiG,KAAA,QAAAsc,GACAtc,KAAA,SAAAsc,GACAtc,KAAA,gBAAAzQ,GAA0C,OAAAA,EAAA6K,QAE1CmiB,EAAAxiB,OAAA,QACAqG,KAAA,SAAA7Q,GAAkC,OAAAA,EAAAC,OAClCwQ,KAAA,IAAAsc,EA7CA,GA8CAtc,KAAA,eAAsC,OAAAsc,EAAA,GAAAzmB,KAAA2mB,aAAA3mB,KAAA2mB,aAAA,WAWtChgB,EAAAxE,EAAA,SAAAA,GACA,OAAA1C,UAAAhC,QACA2P,EAAAjL,EACAwE,GAFAyG,GASAzG,EAAAvE,EAAA,SAAAA,GACA,OAAA3C,UAAAhC,QACAoQ,EAAAzL,EACAuE,GAFAkH,GASAlH,EAAAmX,IAAA,SAAAA,GACA,OAAAre,UAAAhC,QACAuf,EAAAc,EACAnX,GAFAqW,GASArW,EAAAigB,WAAA,SAAA3d,GACA,OAAAxJ,UAAAhC,QACAgpB,EAAAxd,EACAtC,GAFA8f,GAKA9f,GAGAjL,EAAAse,OAAA,SAAA3T,GAEA,IAAAwgB,EAAAvJ,IAEAwJ,EAAA,SAEAC,EAAA,SAAAC,GACA,IAAAC,EAAAzrB,EAAA0rB,IAAAF,EAAA3gB,EAAAmC,iBACA2e,EAAA9gB,EAAA1J,QAAA6G,MACA4jB,EAAA5rB,EAAA0rB,IAAAC,EAAA9gB,EAAAmC,iBACA6e,EAAAL,EAAApX,IAAAvJ,EAAAsF,eACA2b,EAAAH,EAAAvX,IAAAvJ,EAAAsF,eACA4b,EAAA/rB,EAAAob,IAAAyQ,GACAG,EAAAF,EAAA5mB,OAAA,SAAAhH,GAAgD,OAAA6tB,EAAA3qB,IAAAlD,KAChDstB,EAAA/pB,KAAA,CAAsBuqB,SAAA7sB,IAAAmsB,EAAAzsB,MAAA+sB,EAAAH,KAuDtB,OApDA5gB,EAAAiU,mBAAA,WACA,GAAAuM,GAAAvJ,IACA,OAAAjX,EAAAgD,uBAEA,IAAA2d,EAAA3gB,EAAA1J,QAAA8P,IAAAoa,GAGA,OAFAG,EAAA3gB,EAAAgD,qBAAA2d,GACAD,KAAAC,GACAA,GAIA3gB,EAAAkW,IAAA,SAAA/c,GACA,OAAAC,UAAAhC,QACAopB,EAAArnB,EACA6G,GAFAwgB,GASAxgB,EAAAohB,YAAA,SAAAjoB,GACA,OAAAC,UAAAhC,QACAqpB,EAAAtnB,EACA6G,GAFAygB,GAgBAzgB,EAAAqhB,cAAA,SAAAloB,GACA,OAAAC,UAAAhC,QACAspB,EAAAvnB,EACA6G,GAFA0gB,GAKArrB,EAAAwD,SAAAmH,EAAA,mBAAA3M,GACAA,EAAA8tB,QACA9tB,EAAA8tB,OAAA1Q,QAAA,SAAA7L,GACA5E,EAAA3F,OAAAuK,KAEA5E,EAAAshB,SAAAjuB,KAGA2M,GAgCA3K,EAAAksB,cAAA,SAAA9jB,EAAA8F,GACA,IACAiW,EAAArkB,EAAA+E,OAAA,OACA8F,EAAA3K,EAAA0K,UAAA,IAsDA,OApDAC,EAAA8B,UAAA,IAMA9B,EAAAhM,MAAA,WACA,IAAAwtB,EAAAxhB,EAAA1J,QAAA6G,KAAA6C,EAAA1J,QAAA6G,MAAA,IAAA6C,EAAA1J,QAAAtC,QACA,OAAAgM,EAAAmC,eAAAnC,CAAAwhB,IAGAxhB,EAAAoE,mBAAA,KAEApE,EAAAsE,SAAA,WACA,IAAAmd,EAAAzhB,EAAAhM,QACA0tB,EAAA1hB,EAAAsD,UAAA,mBAmBA,OAjBAoe,EAAA9jB,UACA8jB,IAAA9lB,KAAA,KACAwO,QACAvM,OAAA,QACAiG,KAAA,QAzBA,mBA2BA4d,EAAAjqB,aACAE,SAAAqI,EAAAoE,sBACAud,KAAA,eACAC,MAAA,kBACA,IAAAC,EAAA1sB,EAAA2sB,kBAAAnoB,KAAAooB,WAAA,EAAAN,GAEA,OADA9nB,KAAAooB,UAAAN,EACA,SAAAxtB,GACA0F,KAAAqoB,YAAAhiB,EAAAiiB,cAAAjiB,CAAA6hB,EAAA5tB,OAIA+L,GAGAA,EAAA0E,SAAA,WACA,OAAA1E,EAAAsE,YAQAtE,EAAAiiB,aAAA,SAAA9oB,GACA,OAAAC,UAAAhC,QACAoiB,EAAArgB,EACA6G,GAFAwZ,GAKAxZ,EAAAkC,OAAAzE,EAAA8F,IAKAlO,IAEyCN,EAAAgF,MAAAxH,EAAAyC,GAAAD,KAAAvC,EAAAD,QAAA0C,GAxwKzC,oBClBA,IAAAF,EAAAE,GAAA,WACA,IAAAE,EAAA,CACAG,QAAA,UAEA4sB,EAAA,GAAAhf,MAAAif,EAAA,SAAArrB,GACA,OAAAorB,EAAAhvB,KAAA4D,IAEAsrB,EAAAzoB,KAAA0oB,SACA,SAAAC,EAAApD,GACA,OAAAA,MAAAqD,eAAArD,EAAAmD,UAAAnD,GAAAsD,gBAEA,SAAAC,EAAAvD,GACA,OAAAA,MAAAqD,eAAArD,EAAAqD,cAAAG,aAAAxD,EAAAmD,UAAAnD,KAAAwD,aAEA,GAAAN,EACA,IACAD,EAAAC,EAAAI,gBAAAG,YAAA,GAAAC,SACK,MAAAnsB,GACL0rB,EAAA,SAAArrB,GAEA,IADA,IAAA/D,EAAA+D,EAAAM,OAAAyrB,EAAA,IAAAvoB,MAAAvH,GACAA,KAAA8vB,EAAA9vB,GAAA+D,EAAA/D,GACA,OAAA8vB,GAOA,GAHAroB,KAAAsoB,MAAAtoB,KAAAsoB,IAAA,WACA,WAAAtoB,OAEA4nB,EACA,IACAA,EAAAW,cAAA,OAAA9e,MAAA+e,YAAA,gBACK,MAAAC,GACL,IAAAC,EAAAvpB,KAAAwpB,QAAAxuB,UAAAyuB,EAAAF,EAAAG,aAAAC,EAAAJ,EAAAK,eAAAC,EAAA7pB,KAAA8pB,oBAAA9uB,UAAA+uB,EAAAF,EAAAR,YACAE,EAAAG,aAAA,SAAA/vB,EAAAU,GACAovB,EAAAlwB,KAAAyG,KAAArG,EAAAU,EAAA,KAEAkvB,EAAAK,eAAA,SAAAI,EAAAC,EAAA5vB,GACAsvB,EAAApwB,KAAAyG,KAAAgqB,EAAAC,EAAA5vB,EAAA,KAEAwvB,EAAAR,YAAA,SAAA1vB,EAAAU,EAAA6vB,GACAH,EAAAxwB,KAAAyG,KAAArG,EAAAU,EAAA,GAAA6vB,IAKA,SAAAC,EAAA1hB,EAAAwT,GACA,OAAAxT,EAAAwT,GAAA,EAAAxT,EAAAwT,EAAA,EAAAxT,GAAAwT,EAAA,EAAAmO,IA8DA,SAAAC,EAAAloB,GACA,cAAAA,EAAAioB,KAAAjoB,EAEA,SAAAmoB,EAAAnoB,GACA,OAAAgT,MAAAhT,GA0DA,SAAAooB,EAAAC,GACA,OACA5d,KAAA,SAAAnE,EAAAtG,EAAAsoB,EAAAC,GAGA,IAFAjrB,UAAAhC,OAAA,IAAAgtB,EAAA,GACAhrB,UAAAhC,OAAA,IAAAitB,EAAAjiB,EAAAhL,QACAgtB,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAF,EAAA/hB,EAAAkiB,GAAAxoB,GAAA,EAAAsoB,EAAAE,EAAA,EAAmDD,EAAAC,EAEnD,OAAAF,GAEA/d,MAAA,SAAAjE,EAAAtG,EAAAsoB,EAAAC,GAGA,IAFAjrB,UAAAhC,OAAA,IAAAgtB,EAAA,GACAhrB,UAAAhC,OAAA,IAAAitB,EAAAjiB,EAAAhL,QACAgtB,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAF,EAAA/hB,EAAAkiB,GAAAxoB,GAAA,EAAAuoB,EAAAC,EAA+CF,EAAAE,EAAA,EAE/C,OAAAF,IAhJAjvB,EAAAglB,UAAA2J,EAIA3uB,EAAAovB,WAAA,SAAAniB,EAAAwT,GACA,OAAAA,EAAAxT,GAAA,EAAAwT,EAAAxT,EAAA,EAAAwT,GAAAxT,EAAA,EAAA2hB,KAEA5uB,EAAAkI,IAAA,SAAAwlB,EAAAje,GACA,IAAAxC,EAAAwT,EAAA7iB,GAAA,EAAAyB,EAAAquB,EAAAzrB,OACA,OAAAgC,UAAAhC,OAAA,CACA,OAAArE,EAAAyB,GAAA,UAAAohB,EAAAiN,EAAA9vB,KAAA6iB,KAAA,CACAxT,EAAAwT,EACA,MAEA,OAAA7iB,EAAAyB,GAAA,OAAAohB,EAAAiN,EAAA9vB,KAAAqP,EAAAwT,IAAAxT,EAAAwT,OACK,CACL,OAAA7iB,EAAAyB,GAAA,UAAAohB,EAAAhR,EAAA1R,KAAA2vB,IAAA9vB,QAAA6iB,KAAA,CACAxT,EAAAwT,EACA,MAEA,OAAA7iB,EAAAyB,GAAA,OAAAohB,EAAAhR,EAAA1R,KAAA2vB,IAAA9vB,QAAAqP,EAAAwT,IAAAxT,EAAAwT,GAEA,OAAAxT,GAEAjN,EAAA8H,IAAA,SAAA4lB,EAAAje,GACA,IAAAxC,EAAAwT,EAAA7iB,GAAA,EAAAyB,EAAAquB,EAAAzrB,OACA,OAAAgC,UAAAhC,OAAA,CACA,OAAArE,EAAAyB,GAAA,UAAAohB,EAAAiN,EAAA9vB,KAAA6iB,KAAA,CACAxT,EAAAwT,EACA,MAEA,OAAA7iB,EAAAyB,GAAA,OAAAohB,EAAAiN,EAAA9vB,KAAA6iB,EAAAxT,MAAAwT,OACK,CACL,OAAA7iB,EAAAyB,GAAA,UAAAohB,EAAAhR,EAAA1R,KAAA2vB,IAAA9vB,QAAA6iB,KAAA,CACAxT,EAAAwT,EACA,MAEA,OAAA7iB,EAAAyB,GAAA,OAAAohB,EAAAhR,EAAA1R,KAAA2vB,IAAA9vB,QAAA6iB,EAAAxT,MAAAwT,GAEA,OAAAxT,GAEAjN,EAAA+V,OAAA,SAAA2X,EAAAje,GACA,IAAAxC,EAAAwT,EAAAxiB,EAAAL,GAAA,EAAAyB,EAAAquB,EAAAzrB,OACA,OAAAgC,UAAAhC,OAAA,CACA,OAAArE,EAAAyB,GAAA,UAAAohB,EAAAiN,EAAA9vB,KAAA6iB,KAAA,CACAxT,EAAAhP,EAAAwiB,EACA,MAEA,OAAA7iB,EAAAyB,GAAA,OAAAohB,EAAAiN,EAAA9vB,MACAqP,EAAAwT,IAAAxT,EAAAwT,GACAxiB,EAAAwiB,IAAAxiB,EAAAwiB,QAEK,CACL,OAAA7iB,EAAAyB,GAAA,UAAAohB,EAAAhR,EAAA1R,KAAA2vB,IAAA9vB,QAAA6iB,KAAA,CACAxT,EAAAhP,EAAAwiB,EACA,MAEA,OAAA7iB,EAAAyB,GAAA,OAAAohB,EAAAhR,EAAA1R,KAAA2vB,IAAA9vB,SACAqP,EAAAwT,IAAAxT,EAAAwT,GACAxiB,EAAAwiB,IAAAxiB,EAAAwiB,IAGA,OAAAxT,EAAAhP,IAQA+B,EAAA0rB,IAAA,SAAAgC,EAAAje,GACA,IAAAxC,EAAAtN,EAAA,EAAAN,EAAAquB,EAAAzrB,OAAArE,GAAA,EACA,OAAAqG,UAAAhC,OACA,OAAArE,EAAAyB,GAAAyvB,EAAA7hB,GAAAygB,EAAA9vB,MAAA+B,GAAAsN,QAEA,OAAArP,EAAAyB,GAAAyvB,EAAA7hB,GAAAwC,EAAA1R,KAAA2vB,IAAA9vB,SAAA+B,GAAAsN,GAEA,OAAAtN,GAEAK,EAAAqvB,KAAA,SAAA3B,EAAAje,GACA,IAAAxC,EAAAtN,EAAA,EAAAN,EAAAquB,EAAAzrB,OAAArE,GAAA,EAAAgK,EAAAvI,EACA,OAAA4E,UAAAhC,OACA,OAAArE,EAAAyB,GAAAyvB,EAAA7hB,EAAA4hB,EAAAnB,EAAA9vB,KAAA+B,GAAAsN,IAAsErF,OAEtE,OAAAhK,EAAAyB,GAAAyvB,EAAA7hB,EAAA4hB,EAAApf,EAAA1R,KAAA2vB,IAAA9vB,QAAA+B,GAAAsN,IAAwFrF,EAExF,GAAAA,EAAA,OAAAjI,EAAAiI,GAEA5H,EAAAsvB,SAAA,SAAAvU,EAAArb,GACA,IAAA6vB,GAAAxU,EAAA9Y,OAAA,GAAAvC,EAAA,EAAA+N,EAAA5K,KAAAU,MAAAgsB,GAAAC,GAAAzU,EAAAtN,EAAA,GAAAnM,EAAAiuB,EAAA9hB,EACA,OAAAnM,EAAAkuB,EAAAluB,GAAAyZ,EAAAtN,GAAA+hB,MAEAxvB,EAAAyvB,OAAA,SAAA/B,EAAAje,GACA,IAAAxC,EAAAyiB,EAAA,GAAArwB,EAAAquB,EAAAzrB,OAAArE,GAAA,EACA,OAAAqG,UAAAhC,OACA,OAAArE,EAAAyB,GAAAyvB,EAAA7hB,EAAA4hB,EAAAnB,EAAA9vB,MAAA8xB,EAAAjuB,KAAAwL,QAEA,OAAArP,EAAAyB,GAAAyvB,EAAA7hB,EAAA4hB,EAAApf,EAAA1R,KAAA2vB,IAAA9vB,SAAA8xB,EAAAjuB,KAAAwL,GAEA,GAAAyiB,EAAAztB,OAAA,OAAAjC,EAAAsvB,SAAAI,EAAAxhB,KAAAygB,GAAA,KAEA3uB,EAAA2vB,SAAA,SAAAjC,EAAAje,GACA,IAAAxC,EAAA/O,EAAAmB,EAAAquB,EAAAzrB,OAAAjE,EAAA,EAAA2B,EAAA,EAAA/B,GAAA,EAAAgK,EAAA,EACA,OAAA3D,UAAAhC,OACA,OAAArE,EAAAyB,GACAyvB,EAAA7hB,EAAA4hB,EAAAnB,EAAA9vB,OAGA+B,IAFAzB,EAAA+O,EAAAjP,IAEAiP,GADAjP,GAAAE,IAAA0J,UAKA,OAAAhK,EAAAyB,GACAyvB,EAAA7hB,EAAA4hB,EAAApf,EAAA1R,KAAA2vB,IAAA9vB,UAGA+B,IAFAzB,EAAA+O,EAAAjP,IAEAiP,GADAjP,GAAAE,IAAA0J,KAKA,GAAAA,EAAA,SAAAjI,GAAAiI,EAAA,IAEA5H,EAAA4vB,UAAA,WACA,IAAAJ,EAAAxvB,EAAA2vB,SAAA/qB,MAAAJ,KAAAP,WACA,OAAAurB,EAAA3sB,KAAAgtB,KAAAL,MAwBA,IAAAM,EAAAf,EAAAJ,GAuCA,SAAAoB,EAAA7xB,GACA,OAAAA,EAAA+D,OAvCAjC,EAAAgwB,WAAAF,EAAA1e,KACApR,EAAAiwB,OAAAjwB,EAAAkwB,YAAAJ,EAAA5e,MACAlR,EAAAmwB,SAAA,SAAA1gB,GACA,OAAAsf,EAAA,IAAAtf,EAAAxN,OAAA,SAAA/D,EAAAyI,GACA,OAAAgoB,EAAAlf,EAAAvR,GAAAyI,IACK8I,IAELzP,EAAAowB,QAAA,SAAA1C,EAAA2C,EAAAC,IACAtyB,EAAAiG,UAAAhC,QAAA,IACAquB,EAAA5C,EAAAzrB,OACAjE,EAAA,IAAAqyB,EAAA,IAGA,IADA,IAAAvxB,EAAAlB,EAAAI,EAAAsyB,EAAAD,EACAryB,GACAJ,EAAAiF,KAAA0tB,SAAAvyB,IAAA,EACAc,EAAA4uB,EAAA1vB,EAAAqyB,GAAA3C,EAAA1vB,EAAAqyB,GAAA3C,EAAA9vB,EAAAyyB,GAAA3C,EAAA9vB,EAAAyyB,GAAAvxB,EAEA,OAAA4uB,GAEA1tB,EAAAwwB,QAAA,SAAA9C,EAAA+C,GAEA,IADA,IAAA7yB,EAAA6yB,EAAAxuB,OAAAyuB,EAAA,IAAAvrB,MAAAvH,GACAA,KAAA8yB,EAAA9yB,GAAA8vB,EAAA+C,EAAA7yB,IACA,OAAA8yB,GAEA1wB,EAAA2wB,MAAA,SAAAjD,GAEA,IADA,IAAA9vB,EAAA,EAAAyB,EAAAquB,EAAAzrB,OAAA,EAAA2uB,EAAAlD,EAAA,GAAAiD,EAAA,IAAAxrB,MAAA9F,EAAA,IAAAA,GACAzB,EAAAyB,GAAAsxB,EAAA/yB,GAAA,CAAAgzB,IAAAlD,IAAA9vB,IACA,OAAA+yB,GAEA3wB,EAAA6wB,UAAA,SAAAC,GACA,KAAAzxB,EAAAyxB,EAAA7uB,QAAA,SACA,QAAArE,GAAA,EAAAI,EAAAgC,EAAAkI,IAAA4oB,EAAAf,GAAAc,EAAA,IAAA1rB,MAAAnH,KAAsFJ,EAAAI,GACtF,QAAAqB,EAAAuI,GAAA,EAAAmpB,EAAAF,EAAAjzB,GAAA,IAAAuH,MAAA9F,KAA4DuI,EAAAvI,GAC5D0xB,EAAAnpB,GAAAkpB,EAAAlpB,GAAAhK,GAGA,OAAAizB,GAKA7wB,EAAAgxB,IAAA,WACA,OAAAhxB,EAAA6wB,UAAA5sB,YAEAjE,EAAAixB,KAAA,SAAA7c,GACA,IAAA6c,EAAA,GACA,QAAA9xB,KAAAiV,EAAA6c,EAAAxvB,KAAAtC,GACA,OAAA8xB,GAEAjxB,EAAA+a,OAAA,SAAA3G,GACA,IAAA2G,EAAA,GACA,QAAA5b,KAAAiV,EAAA2G,EAAAtZ,KAAA2S,EAAAjV,IACA,OAAA4b,GAEA/a,EAAAslB,QAAA,SAAAlR,GACA,IAAAkR,EAAA,GACA,QAAAnmB,KAAAiV,EAAAkR,EAAA7jB,KAAA,CACAtC,MACAN,MAAAuV,EAAAjV,KAEA,OAAAmmB,GAEAtlB,EAAAkxB,MAAA,SAAAC,GAEA,IADA,IAAAnzB,EAAAozB,EAAA1D,EAAAruB,EAAA8xB,EAAAlvB,OAAArE,GAAA,EAAAgK,EAAA,IACAhK,EAAAyB,GAAAuI,GAAAupB,EAAAvzB,GAAAqE,OAEA,IADAmvB,EAAA,IAAAjsB,MAAAyC,KACAvI,GAAA,GAGA,IADArB,GADA0vB,EAAAyD,EAAA9xB,IACA4C,SACAjE,GAAA,GACAozB,IAAAxpB,GAAA8lB,EAAA1vB,GAGA,OAAAozB,GAEA,IAAAtuB,EAAAD,KAAAC,IAoBA,SAAAuuB,EAAAC,EAAAC,GACA,QAAApyB,KAAAoyB,EACAjzB,OAAAC,eAAA+yB,EAAA9xB,UAAAL,EAAA,CACAN,MAAA0yB,EAAApyB,GACAX,YAAA,IAkBA,SAAAgzB,IACAhtB,KAAAR,EAAA1F,OAAAY,OAAA,MA1CAc,EAAAuU,MAAA,SAAA2N,EAAAuP,EAAAC,GAQA,GAPAztB,UAAAhC,OAAA,IACAyvB,EAAA,EACAztB,UAAAhC,OAAA,IACAwvB,EAAAvP,EACAA,EAAA,KAGAuP,EAAAvP,GAAAwP,GAAA5P,IAAA,UAAA6P,MAAA,kBACA,IAAA/pB,EAAA2M,EAAA,GAAAjK,EAKA,SAAA3D,GACA,IAAA2D,EAAA,EACA,KAAA3D,EAAA2D,EAAA,GAAAA,GAAA,GACA,OAAAA,EARAsnB,CAAA9uB,EAAA4uB,IAAA9zB,GAAA,EAEA,GADAskB,GAAA5X,EAAAmnB,GAAAnnB,GAAAonB,GAAApnB,GACA,QAAA1C,EAAAsa,EAAAwP,IAAA9zB,GAAA6zB,GAAAld,EAAA9S,KAAAmG,EAAA0C,QAA4E,MAAA1C,EAAAsa,EAAAwP,IAAA9zB,GAAA6zB,GAAAld,EAAA9S,KAAAmG,EAAA0C,GAC5E,OAAAiK,GAeAvU,EAAAoU,IAAA,SAAA9U,EAAAmQ,GACA,IAAA2E,EAAA,IAAAod,EACA,GAAAlyB,aAAAkyB,EACAlyB,EAAAgc,QAAA,SAAAnc,EAAAN,GACAuV,EAAAgH,IAAAjc,EAAAN,UAEK,GAAAsG,MAAA0sB,QAAAvyB,GAAA,CACL,IAAAjB,EAAAT,GAAA,EAAAyB,EAAAC,EAAA2C,OACA,OAAAgC,UAAAhC,OAAA,OAAArE,EAAAyB,GAAA+U,EAAAgH,IAAAxd,EAAA0B,EAAA1B,SAAwE,OAAAA,EAAAyB,GAAA+U,EAAAgH,IAAA3L,EAAA1R,KAAAuB,EAAAjB,EAAAiB,EAAA1B,MAAAS,QAExE,QAAAc,KAAAG,EAAA8U,EAAAgH,IAAAjc,EAAAG,EAAAH,IAEA,OAAAiV,GAKA,IAAA0d,EAAA,YAAAC,EAAA,KA8BA,SAAAC,EAAA7yB,GACA,OAAAA,GAAA,MAAA2yB,GAAA3yB,EAAA,KAAA4yB,IAAA5yB,IAEA,SAAA8yB,EAAA9yB,GACA,OAAAA,GAAA,SAAA4yB,EAAA5yB,EAAA4O,MAAA,GAAA5O,EAEA,SAAA+yB,EAAA/yB,GACA,OAAA6yB,EAAA7yB,KAAAqF,KAAAR,EAEA,SAAAmuB,EAAAhzB,GACA,OAAAA,EAAA6yB,EAAA7yB,MAAAqF,KAAAR,UAAAQ,KAAAR,EAAA7E,GAEA,SAAAizB,IACA,IAAAnB,EAAA,GACA,QAAA9xB,KAAAqF,KAAAR,EAAAitB,EAAAxvB,KAAAwwB,EAAA9yB,IACA,OAAA8xB,EAEA,SAAAoB,IACA,IAAAlrB,EAAA,EACA,QAAAhI,KAAAqF,KAAAR,IAAAmD,EACA,OAAAA,EAEA,SAAAmrB,IACA,QAAAnzB,KAAAqF,KAAAR,EAAA,SACA,SAsEA,SAAAuuB,IACA/tB,KAAAR,EAAA1F,OAAAY,OAAA,MAiBA,SAAAszB,EAAAt0B,GACA,OAAAA,EAOA,SAAAu0B,EAAAC,EAAAC,EAAAC,GACA,kBACA,IAAA/zB,EAAA+zB,EAAAhuB,MAAA+tB,EAAA1uB,WACA,OAAApF,IAAA8zB,EAAAD,EAAA7zB,GAGA,SAAAg0B,EAAAvzB,EAAAnB,GACA,GAAAA,KAAAmB,EAAA,OAAAnB,EACAA,IAAA20B,OAAA,GAAAC,cAAA50B,EAAA4P,MAAA,GACA,QAAAnQ,EAAA,EAAAyB,EAAA2zB,EAAA/wB,OAAiDrE,EAAAyB,IAAOzB,EAAA,CACxD,IAAAq1B,EAAAD,EAAAp1B,GAAAO,EACA,GAAA80B,KAAA3zB,EAAA,OAAA2zB,GAhKA5B,EAAAG,EAAA,CACApwB,IAAA8wB,EACAzzB,IAAA,SAAAU,GACA,OAAAqF,KAAAR,EAAAguB,EAAA7yB,KAEAic,IAAA,SAAAjc,EAAAN,GACA,OAAA2F,KAAAR,EAAAguB,EAAA7yB,IAAAN,GAEA6P,OAAAyjB,EACAlB,KAAAmB,EACArX,OAAA,WACA,IAAAA,EAAA,GACA,QAAA5b,KAAAqF,KAAAR,EAAA+W,EAAAtZ,KAAA+C,KAAAR,EAAA7E,IACA,OAAA4b,GAEAuK,QAAA,WACA,IAAAA,EAAA,GACA,QAAAnmB,KAAAqF,KAAAR,EAAAshB,EAAA7jB,KAAA,CACAtC,IAAA8yB,EAAA9yB,GACAN,MAAA2F,KAAAR,EAAA7E,KAEA,OAAAmmB,GAEAne,KAAAkrB,EACA5pB,MAAA6pB,EACAhX,QAAA,SAAA7L,GACA,QAAAtQ,KAAAqF,KAAAR,EAAAyL,EAAA1R,KAAAyG,KAAAytB,EAAA9yB,GAAAqF,KAAAR,EAAA7E,OA6BAa,EAAAulB,KAAA,WACA,IAAiBE,EAAAyN,EAAjB3N,EAAA,GAAiB0L,EAAA,GAAAzL,EAAA,GACjB,SAAApR,EAAA+e,EAAAzF,EAAA0F,GACA,GAAAA,GAAAnC,EAAAhvB,OAAA,OAAAixB,IAAAn1B,KAAAwnB,EAAAmI,GAAAjI,EAAAiI,EAAAxf,KAAAuX,GAAAiI,EAEA,IADA,IAAA2F,EAAA/zB,EAAAg0B,EAAAvY,EAAAnd,GAAA,EAAAyB,EAAAquB,EAAAzrB,OAAA9C,EAAA8xB,EAAAmC,KAAAG,EAAA,IAAA/B,IACA5zB,EAAAyB,IACA0b,EAAAwY,EAAA90B,IAAA40B,EAAAl0B,EAAAG,EAAAouB,EAAA9vB,MACAmd,EAAAtZ,KAAAnC,GAEAi0B,EAAAnY,IAAAiY,EAAA,CAAA/zB,IAeA,OAZA6zB,GACA7zB,EAAA6zB,IACAG,EAAA,SAAAD,EAAAtY,GACAzb,EAAA8b,IAAAiY,EAAAjf,EAAA+e,EAAApY,EAAAqY,OAGA9zB,EAAA,GACAg0B,EAAA,SAAAD,EAAAtY,GACAzb,EAAA+zB,GAAAjf,EAAA+e,EAAApY,EAAAqY,KAGAG,EAAAjY,QAAAgY,GACAh0B,EAqCA,OAtBAimB,EAAAnR,IAAA,SAAAsZ,EAAAyF,GACA,OAAA/e,EAAA+e,EAAAzF,EAAA,IAEAnI,EAAAD,QAAA,SAAAoI,GACA,OAjBA,SAAApI,EAAAlR,EAAAgf,GACA,GAAAA,GAAAnC,EAAAhvB,OAAA,OAAAmS,EACA,IAAAsZ,EAAA,GAAA8F,EAAAhO,EAAA4N,KAOA,OANAhf,EAAAkH,QAAA,SAAAnc,EAAAs0B,GACA/F,EAAAjsB,KAAA,CACAtC,MACA4b,OAAAuK,EAAAmO,EAAAL,OAGAI,EAAA9F,EAAAxf,KAAA,SAAAjB,EAAAwT,GACA,OAAA+S,EAAAvmB,EAAA9N,IAAAshB,EAAAthB,OACOuuB,EAMPpI,CAAAlR,EAAApU,EAAAoU,IAAAsZ,EAAA,OAEAnI,EAAApmB,IAAA,SAAAjB,GAEA,OADA+yB,EAAAxvB,KAAAvD,GACAqnB,GAEAA,EAAAC,SAAA,SAAA1K,GAEA,OADA0K,EAAAyL,EAAAhvB,OAAA,GAAA6Y,EACAyK,GAEAA,EAAAE,WAAA,SAAA3K,GAEA,OADA2K,EAAA3K,EACAyK,GAEAA,EAAA2N,OAAA,SAAAzjB,GAEA,OADAyjB,EAAAzjB,EACA8V,GAEAA,GAEAvlB,EAAAob,IAAA,SAAAsS,GACA,IAAAtS,EAAA,IAAAmX,EACA,GAAA7E,EAAA,QAAA9vB,EAAA,EAAAyB,EAAAquB,EAAAzrB,OAAgDrE,EAAAyB,IAAOzB,EAAAwd,EAAA3V,IAAAioB,EAAA9vB,IACvD,OAAAwd,GAKAiW,EAAAkB,EAAA,CACAnxB,IAAA8wB,EACAzsB,IAAA,SAAAtG,GAEA,OADAqF,KAAAR,EAAAguB,EAAA7yB,GAAA,QACAA,GAEAuP,OAAAyjB,EACApX,OAAAqX,EACAjrB,KAAAkrB,EACA5pB,MAAA6pB,EACAhX,QAAA,SAAA7L,GACA,QAAAtQ,KAAAqF,KAAAR,EAAAyL,EAAA1R,KAAAyG,KAAAytB,EAAA9yB,OAGAa,EAAA0Y,SAAA,GAIA1Y,EAAA0zB,OAAA,SAAAhB,EAAAC,GAEA,IADA,IAAAC,EAAAh1B,EAAA,EAAAyB,EAAA4E,UAAAhC,SACArE,EAAAyB,GAAAqzB,EAAAE,EAAA3uB,UAAArG,IAAA60B,EAAAC,EAAAC,IAAAC,IACA,OAAAF,GAgBA,IAAAM,EAAA,oCACA,SAAAW,KAMA,SAAAC,KAeA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GAAAC,EAAA,IAAAxC,EACA,SAAAniB,IAEA,IADA,IAAAxR,EAAAgZ,EAAAkd,EAAAn2B,GAAA,EAAAyB,EAAAwX,EAAA5U,SACArE,EAAAyB,IAAAxB,EAAAgZ,EAAAjZ,GAAAiT,KAAAhT,EAAA+G,MAAAJ,KAAAP,WACA,OAAA6vB,EAeA,OAbAzkB,EAAAwB,GAAA,SAAA1S,EAAA2S,GACA,IAAAlT,EAAAC,EAAAm2B,EAAAv1B,IAAAN,GACA,OAAA8F,UAAAhC,OAAA,EAAApE,KAAAgT,IACAhT,IACAA,EAAAgT,GAAA,KACAkjB,IAAAhmB,MAAA,EAAAnQ,EAAAm2B,EAAAxyB,QAAA1D,IAAA0d,OAAAwY,EAAAhmB,MAAAnQ,EAAA,IACAo2B,EAAAtlB,OAAAvQ,IAEA2S,GAAAijB,EAAAtyB,KAAAuyB,EAAA5Y,IAAAjd,EAAA,CACA0S,GAAAC,KAEAgjB,IAEAzkB,EAGA,SAAA4kB,IACAj0B,EAAAqP,MAAA6kB,iBAEA,SAAAC,IAEA,IADA,IAAAx0B,EAAA2B,EAAAtB,EAAAqP,MACA1P,EAAA2B,EAAA8yB,aAAA9yB,EAAA3B,EACA,OAAA2B,EAEA,SAAA+yB,EAAA3B,GAEA,IADA,IAAAoB,EAAA,IAAAF,EAAAh2B,EAAA,EAAAyB,EAAA4E,UAAAhC,SACArE,EAAAyB,GAAAy0B,EAAA7vB,UAAArG,IAAAi2B,EAAAC,GAaA,OAZAA,EAAAQ,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,IAAAC,EAAAD,EAAAL,YAAAp0B,EAAAqP,MACAolB,EAAA/B,SACA1yB,EAAAqP,MAAAolB,EACAX,EAAAW,EAAAE,MAAA/vB,MAAA2vB,EAAAC,GACS,QACTx0B,EAAAqP,MAAAqlB,KAIAZ,EAlEA9zB,EAAA8zB,SAAA,WAEA,IADA,IAAAA,EAAA,IAAAF,EAAAh2B,GAAA,EAAAyB,EAAA4E,UAAAhC,SACArE,EAAAyB,GAAAy0B,EAAA7vB,UAAArG,IAAAi2B,EAAAC,GACA,OAAAA,GAGAF,EAAAp0B,UAAAqR,GAAA,SAAA8jB,EAAA7jB,GACA,IAAAlT,EAAA+2B,EAAApzB,QAAA,KAAApD,EAAA,GAKA,GAJAP,GAAA,IACAO,EAAAw2B,EAAA5mB,MAAAnQ,EAAA,GACA+2B,IAAA5mB,MAAA,EAAAnQ,IAEA+2B,EAAA,OAAA1wB,UAAAhC,OAAA,EAAAuC,KAAAmwB,GAAA9jB,GAAA1S,GAAAqG,KAAAmwB,GAAA9jB,GAAA1S,EAAA2S,GACA,OAAA7M,UAAAhC,OAAA,CACA,SAAA6O,EAAA,IAAA6jB,KAAAnwB,KACAA,KAAA/E,eAAAk1B,IAAAnwB,KAAAmwB,GAAA9jB,GAAA1S,EAAA,MAEA,OAAAqG,OAyBAxE,EAAAqP,MAAA,KA0BArP,EAAA40B,QAAA,SAAAj1B,GACA,OAAAA,EAAA+F,QAAAmvB,EAAA,SAEA,IAAAA,EAAA,kCACAC,EAAA,GAAsBC,UAAA,SAAAz1B,EAAAE,GACtBF,EAAAy1B,UAAAv1B,GACG,SAAAF,EAAAE,GACH,QAAAD,KAAAC,EAAAF,EAAAC,GAAAC,EAAAD,IAEA,SAAAy1B,EAAA3Y,GAEA,OADAyY,EAAAzY,EAAA4Y,GACA5Y,EAEA,IAAA6Y,EAAA,SAAAv1B,EAAAN,GACA,OAAAA,EAAA81B,cAAAx1B,IACGy1B,EAAA,SAAAz1B,EAAAN,GACH,OAAAA,EAAAg2B,iBAAA11B,IACG21B,EAAA,SAAAj2B,EAAAM,GACH,IAAA41B,EAAAl2B,EAAAm2B,SAAAn2B,EAAAwzB,EAAAxzB,EAAA,oBAIA,OAHAi2B,EAAA,SAAAj2B,EAAAM,GACA,OAAA41B,EAAAx3B,KAAAsB,EAAAM,KAEAN,EAAAM,IAEA,mBAAA81B,SACAP,EAAA,SAAAv1B,EAAAN,GACA,OAAAo2B,OAAA91B,EAAAN,GAAA,UAEA+1B,EAAAK,OACAH,EAAAG,OAAAC,iBAEA11B,EAAA21B,UAAA,WACA,OAAA31B,EAAAwI,OAAAykB,EAAAI,kBAEA,IAAA4H,EAAAj1B,EAAA21B,UAAAn2B,UAAA,GAkBA,SAAAo2B,EAAAC,GACA,yBAAAA,IAAA,WACA,OAAAX,EAAAW,EAAArxB,OAgBA,SAAAsxB,EAAAD,GACA,yBAAAA,IAAA,WACA,OAAAT,EAAAS,EAAArxB,OArCAywB,EAAAzsB,OAAA,SAAAqtB,GACA,IAAAE,EAAAC,EAAA70B,EAAA4oB,EAAAkM,EAAA,GACAJ,EAAAD,EAAAC,GACA,QAAAjuB,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GAAS,CAC9Ci4B,EAAAx0B,KAAAs0B,EAAA,IACAA,EAAAG,YAAA/0B,EAAAqD,KAAAoD,IAAAsuB,WACA,QAAAt4B,GAAA,EAAAyB,EAAA8B,EAAAc,SAAwCrE,EAAAyB,IACxC0qB,EAAA5oB,EAAAvD,KACAm4B,EAAAt0B,KAAAu0B,EAAAH,EAAA93B,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,IACAouB,GAAA,aAAAjM,IAAAiM,EAAAG,SAAApM,EAAAoM,WAEAJ,EAAAt0B,KAAA,MAIA,OAAAuzB,EAAAiB,IAOAhB,EAAA9mB,UAAA,SAAA0nB,GACA,IAAAE,EAAAhM,EAAAkM,EAAA,GACAJ,EAAAC,EAAAD,GACA,QAAAjuB,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GACrC,QAAAmD,EAAAqD,KAAAoD,GAAAhK,GAAA,EAAAyB,EAAA8B,EAAAc,SAAyDrE,EAAAyB,IACzD0qB,EAAA5oB,EAAAvD,MACAq4B,EAAAx0B,KAAAs0B,EAAA/I,EAAA6I,EAAA93B,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,KACAmuB,EAAAG,WAAAnM,GAIA,OAAAiL,EAAAiB,IAOA,IAAAG,GAAA,+BACAC,GAAA,CACA7nB,IAAA,6BACA8nB,MAAAF,GACAG,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCAyBA,SAAAC,GAAAv4B,EAAAU,GAsBA,OArBAV,EAAA6B,EAAAf,GAAA03B,QAAAx4B,GAqBA,MAAAU,EAAAV,EAAAswB,MAjBA,WACAjqB,KAAAoyB,kBAAAz4B,EAAAqwB,MAAArwB,EAAAswB,QAJA,WACAjqB,KAAAqyB,gBAAA14B,IAmBA,mBAAAU,EAAAV,EAAAswB,MAJA,WACA,IAAA9nB,EAAA9H,EAAA+F,MAAAJ,KAAAP,WACA,MAAA0C,EAAAnC,KAAAoyB,kBAAAz4B,EAAAqwB,MAAArwB,EAAAswB,OAAoEjqB,KAAA4pB,eAAAjwB,EAAAqwB,MAAArwB,EAAAswB,MAAA9nB,IANpE,WACA,IAAAA,EAAA9H,EAAA+F,MAAAJ,KAAAP,WACA,MAAA0C,EAAAnC,KAAAqyB,gBAAA14B,GAAgDqG,KAAA0pB,aAAA/vB,EAAAwI,IAMhDxI,EAAAswB,MAXA,WACAjqB,KAAA4pB,eAAAjwB,EAAAqwB,MAAArwB,EAAAswB,MAAA5vB,IAJA,WACA2F,KAAA0pB,aAAA/vB,EAAAU,IAeA,SAAAi4B,GAAAn3B,GACA,OAAAA,EAAAo3B,OAAArxB,QAAA,YAmBA,SAAAsxB,GAAA74B,GACA,WAAA84B,OAAA,aAAAj3B,EAAA40B,QAAAz2B,GAAA,kBAEA,SAAA+4B,GAAA/4B,GACA,OAAAA,EAAA,IAAA44B,OAAAI,MAAA,SAEA,SAAAC,GAAAj5B,EAAAU,GAEA,IAAAQ,GADAlB,EAAA+4B,GAAA/4B,GAAAiW,IAAAijB,KACAp1B,OASA,yBAAApD,EAJA,WAEA,IADA,IAAAjB,GAAA,EAAA+I,EAAA9H,EAAA+F,MAAAJ,KAAAP,aACArG,EAAAyB,GAAAlB,EAAAP,GAAA4G,KAAAmC,IANA,WAEA,IADA,IAAA/I,GAAA,IACAA,EAAAyB,GAAAlB,EAAAP,GAAA4G,KAAA3F,IAQA,SAAAw4B,GAAAl5B,GACA,IAAAm5B,EAAAN,GAAA74B,GACA,gBAAA4rB,EAAAlrB,GACA,GAAAZ,EAAA8rB,EAAAwN,UAAA,OAAA14B,EAAAZ,EAAAwH,IAAAtH,GAAAF,EAAAyQ,OAAAvQ,GACA,IAAAF,EAAA8rB,EAAAyN,aAAA,aACA34B,GACAy4B,EAAAG,UAAA,EACAH,EAAArc,KAAAhd,IAAA8rB,EAAAmE,aAAA,QAAA4I,GAAA74B,EAAA,IAAAE,KAEA4rB,EAAAmE,aAAA,QAAA4I,GAAA74B,EAAAyH,QAAA4xB,EAAA,QAoBA,SAAAI,GAAAv5B,EAAAU,EAAA6vB,GAWA,aAAA7vB,EAVA,WACA2F,KAAAsK,MAAA6oB,eAAAx5B,IASA,mBAAAU,EAJA,WACA,IAAA8H,EAAA9H,EAAA+F,MAAAJ,KAAAP,WACA,MAAA0C,EAAAnC,KAAAsK,MAAA6oB,eAAAx5B,GAAqDqG,KAAAsK,MAAA+e,YAAA1vB,EAAAwI,EAAA+nB,IALrD,WACAlqB,KAAAsK,MAAA+e,YAAA1vB,EAAAU,EAAA6vB,IAgBA,SAAAkJ,GAAAz5B,EAAAU,GAWA,aAAAA,EAVA,kBACA2F,KAAArG,IASA,mBAAAU,EAJA,WACA,IAAA8H,EAAA9H,EAAA+F,MAAAJ,KAAAP,WACA,MAAA0C,SAAAnC,KAAArG,GAAuCqG,KAAArG,GAAAwI,GALvC,WACAnC,KAAArG,GAAAU,GAkCA,SAAAg5B,GAAA15B,GAQA,yBAAAA,OAAA6B,EAAAf,GAAA03B,QAAAx4B,IAAAswB,MAHA,WACA,OAAAjqB,KAAA4oB,cAAA0K,gBAAA35B,EAAAqwB,MAAArwB,EAAAswB,QALA,WACA,IAAAvB,EAAA1oB,KAAA4oB,cAAA2K,EAAAvzB,KAAAwzB,aACA,OAAAD,IAAA3B,IAAAlJ,EAAAG,gBAAA2K,eAAA5B,GAAAlJ,EAAAU,cAAAzvB,GAAA+uB,EAAA4K,gBAAAC,EAAA55B,IAiBA,SAAA85B,KACA,IAAA3vB,EAAA9D,KAAA0xB,WACA5tB,KAAA4vB,YAAA1zB,MAmFA,SAAA2zB,GAAA1xB,GACA,OACA0vB,SAAA1vB,GAoBA,SAAA2xB,GAAAvC,GACA,kBACA,OAAAP,EAAA9wB,KAAAqxB,IA8BA,SAAAwC,GAAAhc,EAAA5Z,GACA,QAAAmF,EAAA,EAAA5J,EAAAqe,EAAApa,OAAsC2F,EAAA5J,EAAO4J,IAC7C,QAAAmiB,EAAA5oB,EAAAkb,EAAAzU,GAAAhK,EAAA,EAAAyB,EAAA8B,EAAAc,OAAgErE,EAAAyB,EAAOzB,KACvEmsB,EAAA5oB,EAAAvD,KAAA6E,EAAAsnB,EAAAnsB,EAAAgK,GAGA,OAAAyU,EA0BA,SAAAic,GAAA3C,GAEA,OADAb,EAAAa,EAAA4C,IACA5C,EAhXA31B,EAAAf,GAAA,CACAu5B,OAAAnC,GACAM,QAAA,SAAAx4B,GACA,IAAAP,EAAAO,EAAAoD,QAAA,KAAAi3B,EAAAr6B,EAEA,OADAP,GAAA,cAAA46B,EAAAr6B,EAAA4P,MAAA,EAAAnQ,MAAAO,IAAA4P,MAAAnQ,EAAA,IACAy4B,GAAA52B,eAAA+4B,GAAA,CACAhK,MAAA6H,GAAAmC,GACA/J,MAAAtwB,GACOA,IAGP82B,EAAAtmB,KAAA,SAAAxQ,EAAAU,GACA,GAAAoF,UAAAhC,OAAA,GACA,oBAAA9D,EAAA,CACA,IAAA4rB,EAAAvlB,KAAAulB,OAEA,OADA5rB,EAAA6B,EAAAf,GAAA03B,QAAAx4B,IACAswB,MAAA1E,EAAA0O,eAAAt6B,EAAAqwB,MAAArwB,EAAAswB,OAAA1E,EAAAyN,aAAAr5B,GAEA,IAAAU,KAAAV,EAAAqG,KAAA8K,KAAAonB,GAAA73B,EAAAV,EAAAU,KACA,OAAA2F,KAEA,OAAAA,KAAA8K,KAAAonB,GAAAv4B,EAAAU,KA6BAo2B,EAAA5mB,QAAA,SAAAlQ,EAAAU,GACA,GAAAoF,UAAAhC,OAAA,GACA,oBAAA9D,EAAA,CACA,IAAA4rB,EAAAvlB,KAAAulB,OAAA1qB,GAAAlB,EAAA+4B,GAAA/4B,IAAA8D,OAAArE,GAAA,EACA,GAAAiB,EAAAkrB,EAAAwN,WACA,OAAA35B,EAAAyB,GAAA,IAAAR,EAAA65B,SAAAv6B,EAAAP,IAAA,cAGA,IADAiB,EAAAkrB,EAAAyN,aAAA,WACA55B,EAAAyB,GAAA,IAAA23B,GAAA74B,EAAAP,IAAAqd,KAAApc,GAAA,SAEA,SAEA,IAAAA,KAAAV,EAAAqG,KAAA8K,KAAA8nB,GAAAv4B,EAAAV,EAAAU,KACA,OAAA2F,KAEA,OAAAA,KAAA8K,KAAA8nB,GAAAj5B,EAAAU,KAkCAo2B,EAAAnmB,MAAA,SAAA3Q,EAAAU,EAAA6vB,GACA,IAAArvB,EAAA4E,UAAAhC,OACA,GAAA5C,EAAA,GACA,oBAAAlB,EAAA,CAEA,IAAAuwB,KADArvB,EAAA,IAAAR,EAAA,IACAV,EAAAqG,KAAA8K,KAAAooB,GAAAhJ,EAAAvwB,EAAAuwB,GAAA7vB,IACA,OAAA2F,KAEA,GAAAnF,EAAA,GACA,IAAA0qB,EAAAvlB,KAAAulB,OACA,OAAAuD,EAAAvD,GAAA4O,iBAAA5O,EAAA,MAAA6O,iBAAAz6B,GAEAuwB,EAAA,GAEA,OAAAlqB,KAAA8K,KAAAooB,GAAAv5B,EAAAU,EAAA6vB,KAeAuG,EAAA11B,SAAA,SAAApB,EAAAU,GACA,GAAAoF,UAAAhC,OAAA,GACA,oBAAA9D,EAAA,OAAAqG,KAAAulB,OAAA5rB,GACA,IAAAU,KAAAV,EAAAqG,KAAA8K,KAAAsoB,GAAA/4B,EAAAV,EAAAU,KACA,OAAA2F,KAEA,OAAAA,KAAA8K,KAAAsoB,GAAAz5B,EAAAU,KAeAo2B,EAAAlmB,KAAA,SAAAlQ,GACA,OAAAoF,UAAAhC,OAAAuC,KAAA8K,KAAA,mBAAAzQ,EAAA,WACA,IAAA2wB,EAAA3wB,EAAA+F,MAAAJ,KAAAP,WACAO,KAAAqoB,YAAA,MAAA2C,EAAA,GAAAA,GACK,MAAA3wB,EAAA,WACL2F,KAAAqoB,YAAA,IACK,WACLroB,KAAAqoB,YAAAhuB,IACK2F,KAAAulB,OAAA8C,aAELoI,EAAA7P,KAAA,SAAAvmB,GACA,OAAAoF,UAAAhC,OAAAuC,KAAA8K,KAAA,mBAAAzQ,EAAA,WACA,IAAA2wB,EAAA3wB,EAAA+F,MAAAJ,KAAAP,WACAO,KAAAq0B,UAAA,MAAArJ,EAAA,GAAAA,GACK,MAAA3wB,EAAA,WACL2F,KAAAq0B,UAAA,IACK,WACLr0B,KAAAq0B,UAAAh6B,IACK2F,KAAAulB,OAAA8O,WAEL5D,EAAAvsB,OAAA,SAAAvK,GAEA,OADAA,EAAA05B,GAAA15B,GACAqG,KAAAgE,OAAA,WACA,OAAAhE,KAAAs0B,YAAA36B,EAAAyG,MAAAJ,KAAAP,eAaAgxB,EAAAtgB,OAAA,SAAAxW,EAAA46B,GAGA,OAFA56B,EAAA05B,GAAA15B,GACA46B,EAAAnD,EAAAmD,GACAv0B,KAAAgE,OAAA,WACA,OAAAhE,KAAAw0B,aAAA76B,EAAAyG,MAAAJ,KAAAP,WAAA80B,EAAAn0B,MAAAJ,KAAAP,YAAA,SAGAgxB,EAAAvmB,OAAA,WACA,OAAAlK,KAAA8K,KAAA2oB,KAMAhD,EAAAxuB,KAAA,SAAA5H,EAAAM,GACA,IAAAgC,EAAA4oB,EAAAnsB,GAAA,EAAAyB,EAAAmF,KAAAvC,OACA,IAAAgC,UAAAhC,OAAA,CAEA,IADApD,EAAA,IAAAsG,MAAA9F,GAAA8B,EAAAqD,KAAA,IAAAvC,UACArE,EAAAyB,IACA0qB,EAAA5oB,EAAAvD,MACAiB,EAAAjB,GAAAmsB,EAAAoM,UAGA,OAAAt3B,EAEA,SAAAO,EAAA+B,EAAA83B,GACA,IAAAr7B,EAAAmsB,EAAAmP,EAAA75B,EAAA8B,EAAAc,OAAAjE,EAAAi7B,EAAAh3B,OAAAk3B,EAAAt2B,KAAAqF,IAAA7I,EAAArB,GAAAmoB,EAAA,IAAAhhB,MAAAnH,GAAAo7B,EAAA,IAAAj0B,MAAAnH,GAAAq7B,EAAA,IAAAl0B,MAAA9F,GACA,GAAAF,EAAA,CACA,IAAAk0B,EAAAiG,EAAA,IAAA9H,EAAA+H,EAAA,IAAAp0B,MAAA9F,GACA,IAAAzB,GAAA,IAAoBA,EAAAyB,IACpB0qB,EAAA5oB,EAAAvD,MACA07B,EAAAl4B,IAAAiyB,EAAAl0B,EAAApB,KAAAgsB,IAAAoM,SAAAv4B,IACAy7B,EAAAz7B,GAAAmsB,EAEAuP,EAAAle,IAAAiY,EAAAtJ,GAEAwP,EAAA37B,GAAAy1B,GAGA,IAAAz1B,GAAA,IAAoBA,EAAAI,IACpB+rB,EAAAuP,EAAA76B,IAAA40B,EAAAl0B,EAAApB,KAAAk7B,EAAAC,EAAAD,EAAAr7B,SAEW,IAAAmsB,IACX5D,EAAAvoB,GAAAmsB,EACAA,EAAAoM,SAAA+C,GAHAE,EAAAx7B,GAAAu6B,GAAAe,GAKAI,EAAAle,IAAAiY,GAAA,GAEA,IAAAz1B,GAAA,IAAoBA,EAAAyB,GACpBzB,KAAA27B,IAAA,IAAAD,EAAA76B,IAAA86B,EAAA37B,MACAy7B,EAAAz7B,GAAAuD,EAAAvD,QAGO,CACP,IAAAA,GAAA,IAAoBA,EAAAu7B,GACpBpP,EAAA5oB,EAAAvD,GACAs7B,EAAAD,EAAAr7B,GACAmsB,GACAA,EAAAoM,SAAA+C,EACA/S,EAAAvoB,GAAAmsB,GAEAqP,EAAAx7B,GAAAu6B,GAAAe,GAGA,KAAct7B,EAAAI,IAAMJ,EACpBw7B,EAAAx7B,GAAAu6B,GAAAc,EAAAr7B,IAEA,KAAcA,EAAAyB,IAAMzB,EACpBy7B,EAAAz7B,GAAAuD,EAAAvD,GAGAw7B,EAAAI,OAAArT,EACAiT,EAAAlD,WAAA/P,EAAA+P,WAAAmD,EAAAnD,WAAA/0B,EAAA+0B,WACAjhB,EAAAxT,KAAA23B,GACAI,EAAA/3B,KAAA0kB,GACAhR,EAAA1T,KAAA43B,GAEA,IAAApkB,EAAAqjB,GAAA,IAAAkB,EAAAxE,EAAA,IAAA7f,EAAA6f,EAAA,IACA,sBAAAn2B,EACA,OAAAjB,EAAAyB,GACAD,EAAA+B,EAAAqD,KAAA5G,GAAAiB,EAAAd,KAAAoD,IAAA+0B,WAAAC,SAAAv4B,SAGA,OAAAA,EAAAyB,GACAD,EAAA+B,EAAAqD,KAAA5G,GAAAiB,GASA,OANA26B,EAAAvkB,MAAA,WACA,OAAAA,GAEAukB,EAAArkB,KAAA,WACA,OAAAA,GAEAqkB,GAOAvE,EAAAtR,MAAA,SAAA9kB,GACA,OAAAoF,UAAAhC,OAAAuC,KAAAjF,SAAA,WAAAV,GAAA2F,KAAAjF,SAAA,aAEA01B,EAAA/vB,OAAA,SAAAA,GACA,IAAA6wB,EAAA50B,EAAA4oB,EAAAkM,EAAA,GACA,mBAAA/wB,MAAAkzB,GAAAlzB,IACA,QAAA0C,EAAA,EAAA5J,EAAAwG,KAAAvC,OAAoC2F,EAAA5J,EAAO4J,IAAA,CAC3CquB,EAAAx0B,KAAAs0B,EAAA,IACAA,EAAAG,YAAA/0B,EAAAqD,KAAAoD,IAAAsuB,WACA,QAAAt4B,EAAA,EAAAyB,EAAA8B,EAAAc,OAAuCrE,EAAAyB,EAAOzB,KAC9CmsB,EAAA5oB,EAAAvD,KAAAsH,EAAAnH,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,IACAmuB,EAAAt0B,KAAAsoB,GAIA,OAAAiL,EAAAiB,IAOAhB,EAAAna,MAAA,WACA,QAAAlT,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GACrC,QAAA+rB,EAAA5oB,EAAAqD,KAAAoD,GAAAhK,EAAAuD,EAAAc,OAAA,EAAAw3B,EAAAt4B,EAAAvD,KAA4EA,GAAA,IAC5EmsB,EAAA5oB,EAAAvD,MACA67B,OAAA1P,EAAA2P,aAAAD,EAAAvD,WAAA8C,aAAAjP,EAAA0P,GACAA,EAAA1P,GAIA,OAAAvlB,MAEAywB,EAAA/mB,KAAA,SAAAyrB,GACAA,EAIA,SAAAA,GACA11B,UAAAhC,SAAA03B,EAAAhL,GACA,gBAAA1hB,EAAAwT,GACA,OAAAxT,GAAAwT,EAAAkZ,EAAA1sB,EAAAkpB,SAAA1V,EAAA0V,WAAAlpB,GAAAwT,IAPA7b,MAAAJ,KAAAP,WACA,QAAA2D,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GAASwG,KAAAoD,GAAAsG,KAAAyrB,GAC9C,OAAAn1B,KAAAsW,SAQAma,EAAA3lB,KAAA,SAAA7M,GACA,OAAA41B,GAAA7zB,KAAA,SAAAulB,EAAAnsB,EAAAgK,GACAnF,EAAA1E,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,MAWAqtB,EAAAl3B,KAAA,SAAA0E,GACA,IAAAm3B,EAAA5M,EAAA/oB,WAEA,OADAxB,EAAAmC,MAAAg1B,EAAA,GAAAp1B,KAAAo1B,GACAp1B,MAEAywB,EAAAxsB,MAAA,WACA,OAAAjE,KAAAulB,QAEAkL,EAAAlL,KAAA,WACA,QAAAniB,EAAA,EAAA5J,EAAAwG,KAAAvC,OAAoC2F,EAAA5J,EAAO4J,IAC3C,QAAAzG,EAAAqD,KAAAoD,GAAAhK,EAAA,EAAAyB,EAAA8B,EAAAc,OAAwDrE,EAAAyB,EAAOzB,IAAA,CAC/D,IAAAmsB,EAAA5oB,EAAAvD,GACA,GAAAmsB,EAAA,OAAAA,EAGA,aAEAkL,EAAA9tB,KAAA,WACA,IAAA9H,EAAA,EAIA,OAHAg5B,GAAA7zB,KAAA,aACAnF,IAEAA,GAMA,IAAAk5B,GAAA,GA0EA,SAAAsB,GAAAlF,EAAA7jB,EAAAgpB,GACA,IAAA37B,EAAA,OAAAw2B,EAAA/2B,EAAA+2B,EAAApzB,QAAA,KAAAw4B,EAAAC,GACAp8B,EAAA,IAAA+2B,IAAA5mB,MAAA,EAAAnQ,IACA,IAAAsH,EAAA+0B,GAAAx7B,IAAAk2B,GAEA,SAAAuF,IACA,IAAAr8B,EAAA2G,KAAArG,GACAN,IACA2G,KAAA21B,oBAAAxF,EAAA92B,IAAAu8B,UACA51B,KAAArG,IAmBA,OAxBA+G,IAAAyvB,EAAAzvB,EAAA60B,EAAAM,IAwBAz8B,EAAAkT,EAhBA,WACA,IAAAjT,EAAAk8B,EAAAjpB,EAAAkc,EAAA/oB,YACAi2B,EAAAn8B,KAAAyG,MACAA,KAAA81B,iBAAA3F,EAAAnwB,KAAArG,GAAAN,IAAAu8B,EAAAN,GACAj8B,EAAAmG,EAAA8M,GAYAopB,EAAAppB,EAAA6iB,EAVA,WACA,IAAA4G,EAAAjD,EAAA,IAAAL,OAAA,eAAAj3B,EAAA40B,QAAAD,GAAA,KACA,QAAAx2B,KAAAqG,KACA,GAAA+1B,EAAAp8B,EAAAo8B,MAAAjD,GAAA,CACA,IAAAz5B,EAAA2G,KAAArG,GACAqG,KAAA21B,oBAAAI,EAAA,GAAA18B,IAAAu8B,UACA51B,KAAArG,KAjGA6B,EAAA21B,UAAA1gB,MAAAqjB,GACAt4B,EAAA21B,UAAA1gB,MAAAzV,UAAA+4B,GACAA,GAAA7vB,OAAAusB,EAAAvsB,OACA6vB,GAAA9vB,MAAAwsB,EAAAxsB,MACA8vB,GAAAxO,KAAAkL,EAAAlL,KACAwO,GAAAx6B,KAAAk3B,EAAAl3B,KACAw6B,GAAApxB,KAAA8tB,EAAA9tB,KACAoxB,GAAA/vB,OAAA,SAAAqtB,GAEA,IADA,IAAAE,EAAAC,EAAAwE,EAAAr5B,EAAA4oB,EAAAkM,EAAA,GACAruB,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GAAS,CAC9Cw8B,GAAAr5B,EAAAqD,KAAAoD,IAAA4xB,OACAvD,EAAAx0B,KAAAs0B,EAAA,IACAA,EAAAG,WAAA/0B,EAAA+0B,WACA,QAAAt4B,GAAA,EAAAyB,EAAA8B,EAAAc,SAAwCrE,EAAAyB,IACxC0qB,EAAA5oB,EAAAvD,KACAm4B,EAAAt0B,KAAA+4B,EAAA58B,GAAAo4B,EAAAH,EAAA93B,KAAAoD,EAAA+0B,WAAAnM,EAAAoM,SAAAv4B,EAAAgK,IACAouB,EAAAG,SAAApM,EAAAoM,UAEAJ,EAAAt0B,KAAA,MAIA,OAAAuzB,EAAAiB,IAEAsC,GAAA5jB,OAAA,SAAAxW,EAAA46B,GAIA,IAAA9jB,EACAob,EAAAoK,EAHA,OADAx2B,UAAAhC,OAAA,IAGAgT,EAHAzQ,KAAAu0B,EAKA,SAAA76B,EAAAN,EAAAgK,GACA,IAAAmiB,EAAA5oB,EAAA8T,EAAArN,GAAA4xB,OAAAn6B,EAAA8B,EAAAc,OAGA,IAFA2F,GAAA6yB,MAAA7yB,EAAAyoB,EAAA,GACAzyB,GAAAyyB,MAAAzyB,EAAA,KACAmsB,EAAA5oB,EAAAkvB,SAAAhxB,IACA,OAAA0qB,IATAkL,EAAAtgB,OAAA5W,KAAAyG,KAAArG,EAAA46B,IAYA/4B,EAAAwI,OAAA,SAAAuhB,GACA,IAAA5oB,EAQA,MAPA,iBAAA4oB,GACA5oB,EAAA,CAAA+zB,EAAAnL,EAAAkD,KACAiJ,WAAAjJ,EAAAI,iBAEAlsB,EAAA,CAAA4oB,IACAmM,WAAA/I,EAAApD,GAEAiL,EAAA,CAAA7zB,KAEAnB,EAAAmO,UAAA,SAAAusB,GACA,IAAAv5B,EAQA,MAPA,iBAAAu5B,GACAv5B,EAAA6rB,EAAAoI,EAAAsF,EAAAzN,KACAiJ,WAAAjJ,EAAAI,iBAEAlsB,EAAA6rB,EAAA0N,IACAxE,WAAA,KAEAlB,EAAA,CAAA7zB,KAEA8zB,EAAApkB,GAAA,SAAA8jB,EAAA7jB,EAAAgpB,GACA,IAAAz6B,EAAA4E,UAAAhC,OACA,GAAA5C,EAAA,GACA,oBAAAs1B,EAAA,CAEA,IAAAmF,KADAz6B,EAAA,IAAAyR,GAAA,GACA6jB,EAAAnwB,KAAA8K,KAAAuqB,GAAAC,EAAAnF,EAAAmF,GAAAhpB,IACA,OAAAtM,KAEA,GAAAnF,EAAA,SAAAA,EAAAmF,KAAAulB,OAAA,OAAA4K,KAAAt1B,EAAA2E,EACA81B,GAAA,EAEA,OAAAt1B,KAAA8K,KAAAuqB,GAAAlF,EAAA7jB,EAAAgpB,KAgCA,IAAAG,GAAAj6B,EAAAoU,IAAA,CACAumB,WAAA,YACAC,WAAA,aAOA,SAAAZ,GAAAlpB,EAAA0jB,GACA,gBAAAlzB,GACA,IAAAjD,EAAA2B,EAAAqP,MACArP,EAAAqP,MAAA/N,EACAkzB,EAAA,GAAAhwB,KAAA2xB,SACA,IACArlB,EAAAlM,MAAAJ,KAAAgwB,GACO,QACPx0B,EAAAqP,MAAAhR,IAIA,SAAAg8B,GAAAvpB,EAAA0jB,GACA,IAAA32B,EAAAm8B,GAAAlpB,EAAA0jB,GACA,gBAAAlzB,GACA,IAAAu5B,EAAAv5B,EAAAw5B,cACAD,QADAr2B,MACA,EAAAq2B,EAAAE,wBADAv2B,QAEA3G,EAAAE,KAFAyG,KAEAlD,IAtBA2rB,GACAgN,GAAA3e,QAAA,SAAAhR,GACA,KAAAA,KAAA2iB,GAAAgN,GAAAvrB,OAAApE,KAwBA,IAAA0wB,GAAAC,GAAA,EACA,SAAAC,GAAAnR,GACA,IAAA5rB,EAAA,oBAAA88B,GAAAE,EAAA,QAAAh9B,EAAAoP,EAAAvN,EAAAwI,OAAA8kB,EAAAvD,IAAAlZ,GAAA,YAAA1S,EAAA81B,GAAApjB,GAAA,YAAA1S,EAAA81B,GAAApjB,GAAA,cAAA1S,EAAA81B,GAIA,GAHA,MAAA+G,KACAA,KAAA,kBAAAjR,IAAA8I,EAAA9I,EAAAjb,MAAA,eAEAksB,GAAA,CACA,IAAAlsB,EAAAqe,EAAApD,GAAAjb,MAAAtG,EAAAsG,EAAAksB,IACAlsB,EAAAksB,IAAA,OAEA,gBAAAI,GAGA,GAFA7tB,EAAAsD,GAAA1S,EAAA,MACA68B,KAAAlsB,EAAAksB,IAAAxyB,GACA4yB,EAAA,CACA,IAAAC,EAAA,WACA9tB,EAAAsD,GAAAsqB,EAAA,OAEA5tB,EAAAsD,GAAAsqB,EAAA,WACAlH,IACAoH,MACS,GACT/xB,WAAA+xB,EAAA,KAIAr7B,EAAA8pB,MAAA,SAAAwR,GACA,OAAAC,GAAAD,EAAAnH,MAEA,IAAAqH,GAAAh3B,KAAAi3B,WAAA,SAAAxgB,KAAAzW,KAAAi3B,UAAAC,YAAA,IACA,SAAAH,GAAAD,EAAAh6B,GACAA,EAAAq6B,iBAAAr6B,IAAAq6B,eAAA,IACA,IAAAntB,EAAA8sB,EAAAM,iBAAAN,EACA,GAAA9sB,EAAAqtB,eAAA,CACA,IAAAxS,EAAA7a,EAAAqtB,iBACA,GAAAL,GAAA,GACA,IAAAh+B,EAAA8vB,EAAAgO,GACA,GAAA99B,EAAAs+B,SAAAt+B,EAAAu+B,QAAA,CASA,IAAAC,GARAxtB,EAAAxO,EAAAwI,OAAA,QAAAE,OAAA,OAAAoG,MAAA,CACA+a,SAAA,WACA5Y,IAAA,EACAG,KAAA,EACA6qB,OAAA,EACAzjB,QAAA,EACA0jB,OAAA,QACW,cACX,MAAAC,eACAX,KAAAQ,EAAAvsB,GAAAusB,EAAA16B,GACAkN,EAAAE,UAMA,OAHA8sB,IAAAnS,EAAA1iB,EAAArF,EAAA86B,MAAA/S,EAAAziB,EAAAtF,EAAA+6B,QAAkEhT,EAAA1iB,EAAArF,EAAAg7B,QAClEjT,EAAAziB,EAAAtF,EAAAi7B,SAEA,EADAlT,IAAAmT,gBAAAlB,EAAAa,eAAAM,YACA91B,EAAA0iB,EAAAziB,GAEA,IAAA6jB,EAAA6Q,EAAAoB,wBACA,OAAAp7B,EAAAg7B,QAAA7R,EAAArZ,KAAAkqB,EAAAqB,WAAAr7B,EAAAi7B,QAAA9R,EAAAxZ,IAAAqqB,EAAAsB,WA2DA,SAAAC,KACA,OAAA78B,EAAAqP,MAAAssB,eAAA,GAAAmB,WA1DA98B,EAAA+8B,MAAA,SAAAzB,EAAA0B,EAAAF,GAEA,GADA74B,UAAAhC,OAAA,IAAA66B,EAAAE,IAAA7I,IAAAwH,gBACAqB,EAAA,QAAAD,EAAAn/B,EAAA,EAAAyB,EAAA29B,EAAA/6B,OAA2DrE,EAAAyB,IAAOzB,EAClE,IAAAm/B,EAAAC,EAAAp/B,IAAAk/B,eACA,OAAAvB,GAAAD,EAAAyB,IAIA/8B,EAAA0Y,SAAAukB,KAAA,WACA,IAAA5tB,EAAAglB,EAAA4I,EAAA,8BAAAC,EAAA,KAAAC,EAAAC,EAAAzJ,EAAA3zB,EAAA8pB,MAAAwD,EAAA,uBAAA+P,EAAAD,EAAAP,GAAA78B,EAAA+8B,MAAAvK,EAAA,wBACA,SAAAyK,IACAz4B,KAAAqM,GAAA,iBAAAssB,GAAAtsB,GAAA,kBAAAwsB,GAEA,SAAAD,EAAA7uB,EAAAsb,EAAAyT,EAAAC,EAAApb,GACA,kBACA,IAAAqb,EAAA9K,EAAA1yB,EAAAqP,MAAAqjB,OAAA+K,sBAAAz9B,EAAAqP,MAAAqjB,OAAApqB,EAAA9D,KAAA0xB,WAAApC,EAAAzkB,EAAAilB,GAAA9vB,KAAAP,WAAAy5B,EAAA,EAAAC,EAAApvB,IAAAqvB,EAAA,eAAAD,EAAA,OAAAA,GAAAE,EAAA79B,EAAAwI,OAAA80B,EAAA5K,IAAA7hB,GAAA0sB,EAAAK,EAUA,WACA,IAAAE,EAAAC,EAAAC,EAAAnU,EAAAvhB,EAAAq1B,GACA,IAAAK,EAAA,OACAF,EAAAE,EAAA,GAAAC,EAAA,GACAF,EAAAC,EAAA,GAAAC,EAAA,GACAP,GAAAI,EAAAC,EACAE,EAAAD,EACAlK,EAAA,CACAa,KAAA,OACAhuB,EAAAq3B,EAAA,GAAAR,EAAA,GACA52B,EAAAo3B,EAAA,GAAAR,EAAA,GACAM,KACAC,SAtBAltB,GAAAsR,EAAAyb,EAyBA,WACA,IAAA/T,EAAAvhB,EAAAq1B,GAAA,OACAE,EAAAhtB,GAAA0sB,EAAAK,EAAA,MAAA/sB,GAAAsR,EAAAyb,EAAA,MACAM,EAAAR,GACA5J,EAAA,CACAa,KAAA,cA9BAuJ,EAAAhD,GAAAxI,GAAAuL,EAAApU,EAAAvhB,EAAAq1B,GAGAH,EAFAN,EAEA,EADAM,EAAAN,EAAAt4B,MAFAJ,KAEAP,YACA0C,EAAAs3B,EAAA,GAAAT,EAAA52B,EAAAq3B,EAAA,IAEA,MAEAnK,EAAA,CACAa,KAAA,eAgCA,OALAsI,EAAAC,OAAA,SAAAv2B,GACA,OAAA1C,UAAAhC,QACAi7B,EAAAv2B,EACAs2B,GAFAC,GAIAl9B,EAAA0zB,OAAAuJ,EAAA5tB,EAAA,OAKArP,EAAAg9B,QAAA,SAAA1B,EAAA0B,GAEA,OADA/4B,UAAAhC,OAAA,IAAA+6B,EAAA7I,IAAA6I,SACAA,EAAAhQ,EAAAgQ,GAAA5oB,IAAA,SAAA2oB,GACA,IAAA1T,EAAAkS,GAAAD,EAAAyB,GAEA,OADA1T,EAAAyT,WAAAC,EAAAD,WACAzT,IACK,IAEL,IAAA8U,GAAA,KAAAC,GAAAD,MAAAE,GAAAx7B,KAAAy7B,GAAAC,GAAA,EAAAF,GAAAG,GAAAD,GAAAJ,GAAAM,GAAAJ,GAAA,EAAAK,GAAAL,GAAA,IAAAM,GAAA,IAAAN,GACA,SAAAO,GAAAj4B,GACA,OAAAA,EAAA,IAAAA,EAAA,OAEA,SAAAk4B,GAAA5xB,EAAAwT,EAAAxiB,GACA,OAAAwiB,EAAA,GAAAxT,EAAA,KAAAhP,EAAA,GAAAgP,EAAA,KAAAwT,EAAA,GAAAxT,EAAA,KAAAhP,EAAA,GAAAgP,EAAA,IAEA,SAAA6xB,GAAAn4B,GACA,OAAAA,EAAA,IAAAA,GAAA,EAAA03B,GAAAx7B,KAAAk8B,KAAAp4B,GAEA,SAAAq4B,GAAAr4B,GACA,OAAAA,EAAA,EAAA83B,GAAA93B,GAAA,GAAA83B,GAAA57B,KAAAo8B,KAAAt4B,GAKA,SAAAu4B,GAAAv4B,GACA,QAAAA,EAAA9D,KAAAs8B,IAAAx4B,IAAA,EAAAA,GAAA,EAKA,SAAAy4B,GAAAz4B,GACA,OAAAA,EAAA9D,KAAAw8B,IAAA14B,EAAA,IAAAA,EAEA,IAAA24B,GAAAz8B,KAAA08B,MACAv/B,EAAAw/B,gBAAA,SAAAC,EAAA7O,GACA,IAAAhzB,EAAA8hC,EAAAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAlP,EAAA,GAAAmP,EAAAnP,EAAA,GAAAoP,EAAApP,EAAA,GAAAkN,EAAAgC,EAAAH,EAAA5B,EAAAgC,EAAAH,EAAAK,EAAAnC,IAAAC,IACA,GAAAkC,EAAA7B,GACAsB,EAAA78B,KAAAq9B,IAAAF,EAAAH,GAAAP,GACA1hC,EAAA,SAAAkB,GACA,OAAA6gC,EAAA7gC,EAAAg/B,EAAA8B,EAAA9gC,EAAAi/B,EAAA8B,EAAAh9B,KAAAs8B,IAAAG,GAAAxgC,EAAA4gC,SAEK,CACL,IAAAS,EAAAt9B,KAAAgtB,KAAAoQ,GAAAG,GAAAJ,IAAAH,IATA,EASAI,IAAA,EAAAJ,EATA,EASAM,GAAAE,GAAAL,IAAAH,IATA,EASAI,IAAA,EAAAD,EATA,EASAG,GAAAG,EAAAz9B,KAAAq9B,IAAAr9B,KAAAgtB,KAAAuQ,IAAA,GAAAA,GAAAG,EAAA19B,KAAAq9B,IAAAr9B,KAAAgtB,KAAAwQ,IAAA,GAAAA,GACAX,GAAAa,EAAAD,GAAAhB,GACA1hC,EAAA,SAAAkB,GACA,IAlBA6H,EAkBAhH,EAAAb,EAAA4gC,EAAAc,EAAAtB,GAAAoB,GAAAG,EAAAZ,GAZA,EAYAM,IAAAK,GAlBA75B,EAkBA24B,GAAA3/B,EAAA2gC,IAjBA35B,EAAA9D,KAAAs8B,IAAA,EAAAx4B,IAAA,IAAAA,EAAA,IAPA,SAAAA,GACA,QAAAA,EAAA9D,KAAAs8B,IAAAx4B,IAAA,EAAAA,GAAA,EAuBA+5B,CAAAJ,IACA,OAAAX,EAAAc,EAAA3C,EAAA8B,EAAAa,EAAA1C,EAAA8B,EAAAW,EAAAtB,GAAAI,GAAA3/B,EAAA2gC,KAIA,OADA1iC,EAAA4E,SAAA,IAAAk9B,EACA9hC,GAEAoC,EAAA0Y,SAAAC,KAAA,WACA,IAIKgoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlW,EAAAmW,EAAA9kB,EAAA+kB,EAJLC,EAAA,CACAv6B,EAAA,EACAC,EAAA,EACA0D,EAAA,GACKnD,EAAA,UAAAyR,EAAAuoB,GAAA3+B,EAAA,IAAA4+B,EAAA,EAAAjE,EAAA,iBAAAkE,EAAA,iBAAAC,EAAA,eAAAjE,EAAA,kBAAAhuB,EAAAglB,EAAA1b,EAAA,8BAUL,SAAAA,EAAA7L,GACAA,EAAA+D,GAAAssB,EAAAoE,GAAA1wB,GAAA2wB,GAAA,QAAAC,GAAA5wB,GAAA,gBAAA6wB,GAAA7wB,GAAAwsB,EAAAsE,GAoGA,SAAAC,EAAAliC,GACA,QAAAA,EAAA,GAAAwhC,EAAAv6B,GAAAu6B,EAAA52B,GAAA5K,EAAA,GAAAwhC,EAAAt6B,GAAAs6B,EAAA52B,GAKA,SAAAu3B,EAAAliC,GACAuhC,EAAA52B,EAAAzH,KAAAiF,IAAA8Q,EAAA,GAAA/V,KAAAqF,IAAA0Q,EAAA,GAAAjZ,IAEA,SAAAmiC,EAAApiC,EAAA7B,GACAA,EAPA,SAAAA,GACA,OAAAA,EAAA,GAAAqjC,EAAA52B,EAAA42B,EAAAv6B,EAAA9I,EAAA,GAAAqjC,EAAA52B,EAAA42B,EAAAt6B,GAMAyiB,CAAAxrB,GACAqjC,EAAAv6B,GAAAjH,EAAA,GAAA7B,EAAA,GACAqjC,EAAAt6B,GAAAlH,EAAA,GAAA7B,EAAA,GAEA,SAAAkkC,EAAAC,EAAAtiC,EAAA7B,EAAAyM,GACA03B,EAAAC,UAAA,CACAt7B,EAAAu6B,EAAAv6B,EACAC,EAAAs6B,EAAAt6B,EACA0D,EAAA42B,EAAA52B,GAEAu3B,EAAAh/B,KAAAq/B,IAAA,EAAA53B,IACAw3B,EAAAlB,EAAAlhC,EAAA7B,GACAmkC,EAAAhiC,EAAAwI,OAAAw5B,GACAx/B,EAAA,IAAAw/B,IAAA1/B,aAAAE,aACAw/B,EAAAjkC,KAAA4a,EAAAtJ,OAEA,SAAAgH,IACA2qB,KAAAh+B,OAAA6nB,EAAAtW,QAAAH,IAAA,SAAAzN,GACA,OAAAA,EAAAu6B,EAAAv6B,GAAAu6B,EAAA52B,IACO8J,IAAAyW,EAAAsX,SACPlB,KAAAj+B,OAAAkZ,EAAA3H,QAAAH,IAAA,SAAAxN,GACA,OAAAA,EAAAs6B,EAAAt6B,GAAAs6B,EAAA52B,IACO8J,IAAA8H,EAAAimB,SAEP,SAAAC,EAAAtO,GACAsN,KAAAtN,EAAA,CACAa,KAAA,cAGA,SAAAnoB,EAAAsnB,GACAzd,IACAyd,EAAA,CACAa,KAAA,OACAziB,MAAAgvB,EAAA52B,EACA+3B,UAAA,CAAAnB,EAAAv6B,EAAAu6B,EAAAt6B,KAGA,SAAA07B,EAAAxO,KACAsN,IAAAtN,EAAA,CACAa,KAAA,YACOiM,EAAA,MAEP,SAAAW,IACA,IAAAS,EAAAx9B,KAAAsvB,EAAAzkB,EAAAilB,GAAA0N,EAAA/9B,WAAAy5B,EAAA,EAAAJ,EAAAt9B,EAAAwI,OAAA8kB,EAAA0U,IAAAnxB,GAAAwwB,EAGA,WACA3D,EAAA,EACAoE,EAAA9hC,EAAA8pB,MAAAkY,GAAAO,GACA/1B,EAAAsnB,KANAjjB,GAAAywB,EAQA,WACAhE,EAAAzsB,GAAAwwB,EAAA,MAAAxwB,GAAAywB,EAAA,MACApD,EAAAR,GACA4E,EAAAxO,KAXAyO,EAAAX,EAAA5hC,EAAA8pB,MAAAkY,IAAA9D,EAAAhD,GAAA8G,GACAQ,GAAAzkC,KAAAikC,GACAI,EAAAtO,GAYA,SAAA6N,IACA,IAA4Ec,EAA5ET,EAAAx9B,KAAAsvB,EAAAzkB,EAAAilB,GAAA0N,EAAA/9B,WAAAy+B,EAAA,GAA4EC,EAAA,EAAAC,EAAA,SAAA5iC,EAAAqP,MAAAssB,eAAA,GAAAmB,WAAA+F,EAAA,YAAAD,EAAAE,EAAA,WAAAF,EAAAG,EAAA,GAAAzF,EAAAt9B,EAAAwI,OAAAw5B,GAAA9D,EAAAhD,GAAA8G,GAI5E,SAAAgB,IACA,IAAAhG,EAAAh9B,EAAAg9B,QAAAgF,GAKA,OAJAS,EAAAvB,EAAA52B,EACA0yB,EAAA1hB,QAAA,SAAAxc,GACAA,EAAAg+B,cAAA4F,MAAA5jC,EAAAg+B,YAAA8E,EAAA9iC,MAEAk+B,EAEA,SAAAiG,IACA,IAAAvQ,EAAA1yB,EAAAqP,MAAAqjB,OACA1yB,EAAAwI,OAAAkqB,GAAA7hB,GAAAgyB,EAAAK,GAAAryB,GAAAiyB,EAAAK,GACAJ,EAAAthC,KAAAixB,GAEA,IADA,IAAA0Q,EAAApjC,EAAAqP,MAAAssB,eACA/9B,EAAA,EAAAyB,EAAA+jC,EAAAnhC,OAA2CrE,EAAAyB,IAAOzB,EAClD8kC,EAAAU,EAAAxlC,GAAAk/B,YAAA,KAEA,IAAAE,EAAAgG,IAAArV,EAAAtoB,KAAAsoB,MACA,OAAAqP,EAAA/6B,OAAA,CACA,GAAA0rB,EAAAoT,EAAA,KACA,IAAArhC,EAAAs9B,EAAA,GACA+E,EAAAC,EAAAtiC,EAAAgjC,EAAAhjC,EAAAo9B,YAAAj6B,KAAAU,MAAAV,KAAAq9B,IAAAgB,EAAA52B,GAAAzH,KAAAwgC,KAAA,GACApP,IAEA8M,EAAApT,OACS,GAAAqP,EAAA/6B,OAAA,GACTvC,EAAAs9B,EAAA,OAAAsG,EAAAtG,EAAA,GAAAc,EAAAp+B,EAAA,GAAA4jC,EAAA,GAAAvF,EAAAr+B,EAAA,GAAA4jC,EAAA,GACAX,EAAA7E,IAAAC,KAGA,SAAAmF,IACA,IAAAzD,EAAA8D,EAAA3S,EAAA4S,EAAAxG,EAAAh9B,EAAAg9B,QAAAgF,GACAQ,GAAAzkC,KAAAikC,GACA,QAAApkC,EAAA,EAAAyB,EAAA29B,EAAA/6B,OAA2CrE,EAAAyB,IAAOzB,EAAA4lC,EAAA,KAElD,GADA5S,EAAAoM,EAAAp/B,GACA4lC,EAAAd,EAAA9R,EAAAkM,YAAA,CACA,GAAAyG,EAAA,MACA9D,EAAA7O,EAAA2S,EAAAC,EAGA,GAAAA,EAAA,CACA,IAAAC,KAAA7S,EAAA,GAAA6O,EAAA,IAAAgE,KAAA7S,EAAA,GAAA6O,EAAA,IAAAgE,EAAAC,EAAAf,GAAA9/B,KAAAgtB,KAAA4T,EAAAd,GACAlD,EAAA,EAAAA,EAAA,GAAA7O,EAAA,OAAA6O,EAAA,GAAA7O,EAAA,OACA2S,EAAA,EAAAA,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA3B,EAAA6B,EAAAjB,GAEA1B,EAAA,KACAe,EAAArC,EAAA8D,GACA/2B,EAAAsnB,GAEA,SAAAqP,IACA,GAAAnjC,EAAAqP,MAAA2tB,QAAA/6B,OAAA,CAEA,IADA,IAAAmhC,EAAApjC,EAAAqP,MAAAssB,eACA/9B,EAAA,EAAAyB,EAAA+jC,EAAAnhC,OAA6CrE,EAAAyB,IAAOzB,SACpD8kC,EAAAU,EAAAxlC,GAAAk/B,YAEA,QAAAA,KAAA4F,EACA,YAAAM,IAGAhjC,EAAAmO,UAAA40B,GAAAlyB,GAAA+xB,EAAA,MACAtF,EAAAzsB,GAAAssB,EAAAoE,GAAA1wB,GAAAwsB,EAAAsE,GACAzD,IACAoE,EAAAxO,GAjEAmP,IACAb,EAAAtO,GACAwJ,EAAAzsB,GAAAssB,EAAA,MAAAtsB,GAAAwsB,EAAA4F,GAkEA,SAAAxB,IACA,IAAA3N,EAAAzkB,EAAAilB,GAAA9vB,KAAAP,WACA68B,EAAA6C,aAAA7C,IAAyD0B,GAAAzkC,KAAAyG,MACzDm8B,EAAAiB,EAAAhB,EAAAC,GAAA7gC,EAAA8pB,MAAAtlB,OAAA49B,EAAAtO,IACAgN,EAAAx3B,WAAA,WACAw3B,EAAA,KACAwB,EAAAxO,IACO,IACPG,IACA4N,EAAAh/B,KAAAq/B,IAAA,OAAA0B,MAAA1C,EAAA52B,GACAw3B,EAAAlB,EAAAD,GACAn0B,EAAAsnB,GAEA,SAAA4N,IACA,IAAAhiC,EAAAM,EAAA8pB,MAAAtlB,MAAA8F,EAAAzH,KAAAq9B,IAAAgB,EAAA52B,GAAAzH,KAAAwgC,IACAtB,EAAAv9B,KAAA9E,EAAAkiC,EAAAliC,GAAAM,EAAAqP,MAAAw0B,SAAAhhC,KAAAW,KAAA8G,GAAA,EAAAzH,KAAAU,MAAA+G,GAAA,GAEA,OAxQAk3B,KACAA,GAAA,YAAAvU,GAAA2W,GAAA,WACA,OAAA5jC,EAAAqP,MAAAy0B,QAAA9jC,EAAAqP,MAAA00B,UAAA,QACO,0BAAA9W,GAAA2W,GAAA,WACP,OAAA5jC,EAAAqP,MAAA20B,YACO,eAAAJ,GAAA,WACP,OAAA5jC,EAAAqP,MAAA40B,QACO,wBAKPtrB,EAAAtJ,MAAA,SAAAvC,GACAA,EAAAwC,KAAA,WACA,IAAAwkB,EAAAzkB,EAAAilB,GAAA9vB,KAAAP,WAAAigC,EAAAhD,EACAiD,GACAnkC,EAAAwI,OAAAhE,MAAAlC,aAAAgN,KAAA,wBACA4xB,EAAA18B,KAAAy9B,WAAA,CACAt7B,EAAA,EACAC,EAAA,EACA0D,EAAA,GAEA83B,EAAAtO,KACWrH,MAAA,uBACX,IAAAqR,EAAA32B,EAAA,GAAA42B,EAAA52B,EAAA,GAAA6Z,EAAA4f,IAAA,GAAA9C,EAAA,EAAA7c,EAAA2f,IAAA,GAAA7C,EAAA,EAAAngC,EAAAoC,EAAAw/B,gBAAA,EAAAxe,EAAAkgB,EAAAv6B,GAAAu6B,EAAA52B,GAAA2W,EAAAigB,EAAAt6B,GAAAs6B,EAAA52B,EAAAwzB,EAAAoD,EAAA52B,GAAA,EAAA0W,EAAAkjB,EAAAv9B,GAAAu9B,EAAA55B,GAAA2W,EAAAijB,EAAAt9B,GAAAs9B,EAAA55B,EAAAwzB,EAAAoG,EAAA55B,IACA,gBAAAxL,GACA,IAAAjB,EAAAD,EAAAkB,GAAAwL,EAAAwzB,EAAAjgC,EAAA,GACA2G,KAAAy9B,UAAAf,EAAA,CACAv6B,EAAAqa,EAAAnjB,EAAA,GAAAyM,EACA1D,EAAAqa,EAAApjB,EAAA,GAAAyM,EACAA,KAEAkC,EAAAsnB,MAEWxkB,KAAA,4BACXgzB,EAAAxO,KACWxkB,KAAA,sBACXgzB,EAAAxO,MAGAtvB,KAAAy9B,UAAAf,EACAkB,EAAAtO,GACAtnB,EAAAsnB,GACAwO,EAAAxO,OAIAnb,EAAA0pB,UAAA,SAAAr+B,GACA,OAAAC,UAAAhC,QACAi/B,EAAA,CACAv6B,GAAA3C,EAAA,GACA4C,GAAA5C,EAAA,GACAsG,EAAA42B,EAAA52B,GAEA+L,IACAsC,GAPA,CAAAuoB,EAAAv6B,EAAAu6B,EAAAt6B,IASA+R,EAAAzG,MAAA,SAAAlO,GACA,OAAAC,UAAAhC,QACAi/B,EAAA,CACAv6B,EAAAu6B,EAAAv6B,EACAC,EAAAs6B,EAAAt6B,EACA0D,EAAA,MAEAu3B,GAAA79B,GACAqS,IACAsC,GARAuoB,EAAA52B,GAUAqO,EAAAC,YAAA,SAAA5U,GACA,OAAAC,UAAAhC,QACA2W,EAAA,MAAA5U,EAAAm9B,GAAA,EAAAn9B,EAAA,IAAAA,EAAA,IACA2U,GAFAC,GAIAD,EAAAkoB,OAAA,SAAA78B,GACA,OAAAC,UAAAhC,QACA4+B,EAAA78B,GAAA,EAAAA,EAAA,IAAAA,EAAA,IACA2U,GAFAkoB,GAIAloB,EAAAxR,KAAA,SAAAnD,GACA,OAAAC,UAAAhC,QACAkF,EAAAnD,GAAA,EAAAA,EAAA,IAAAA,EAAA,IACA2U,GAFAxR,GAIAwR,EAAAnW,SAAA,SAAAwB,GACA,OAAAC,UAAAhC,QACAO,GAAAwB,EACA2U,GAFAnW,GAIAmW,EAAAhS,EAAA,SAAAkQ,GACA,OAAA5S,UAAAhC,QACA++B,EAAAnqB,EACAgU,EAAAhU,EAAAutB,OACAlD,EAAA,CACAv6B,EAAA,EACAC,EAAA,EACA0D,EAAA,GAEAqO,GARAqoB,GAUAroB,EAAA/R,EAAA,SAAAiQ,GACA,OAAA5S,UAAAhC,QACAg/B,EAAApqB,EACAqF,EAAArF,EAAAutB,OACAlD,EAAA,CACAv6B,EAAA,EACAC,EAAA,EACA0D,EAAA,GAEAqO,GARAsoB,GAoKAjhC,EAAA0zB,OAAA/a,EAAAtJ,EAAA,OAEA,IAAAu0B,GAAApC,GAAAL,GAAA,GAAArf,KAEA,SAAAuiB,MAKA,SAAAC,GAAA72B,EAAA9N,EAAA9B,GACA,OAAA2G,gBAAA8/B,IAAA9/B,KAAAiJ,KAAAjJ,KAAA7E,UAAA6E,KAAA3G,OAAAoG,UAAAhC,OAAA,EAAAwL,aAAA62B,GAAA,IAAAA,GAAA72B,MAAA9N,EAAA8N,EAAA5P,GAAA0mC,GAAA,GAAA92B,EAAA+2B,GAAAF,IAAA,IAAAA,GAAA72B,EAAA9N,EAAA9B,GAPAmC,EAAA+I,MAAAs7B,GAEAA,GAAA7kC,UAAAkF,SAAA,WACA,OAAAF,KAAAigC,MAAA,IAEAzkC,EAAA0kC,IAAAJ,GAIA,IAAAK,GAAAL,GAAA9kC,UAAA,IAAA6kC,GAYA,SAAAO,GAAAn3B,EAAA9N,EAAA9B,GACA,IAAAgnC,EAAAC,EAaA,SAAAC,EAAAt3B,GACA,OAAA5K,KAAAY,MAAA,IARA,SAAAgK,GAEA,OADAA,EAAA,IAAAA,GAAA,IAA4BA,EAAA,IAAAA,GAAA,KAC5BA,EAAA,GAAAo3B,GAAAC,EAAAD,GAAAp3B,EAAA,GACAA,EAAA,IAAAq3B,EACAr3B,EAAA,IAAAo3B,GAAAC,EAAAD,IAAA,IAAAp3B,GAAA,GACAo3B,EAGArV,CAAA/hB,IAEA,OAfAA,EAAAkM,MAAAlM,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACA9N,EAAAga,MAAAha,GAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EAGAklC,EAAA,GAFAhnC,IAAA,IAAAA,EAAA,IAAAA,IACAinC,EAAAjnC,GAAA,GAAAA,GAAA,EAAA8B,GAAA9B,EAAA8B,EAAA9B,EAAA8B,GAYA,IAAAqlC,GAAAD,EAAAt3B,EAAA,KAAAs3B,EAAAt3B,GAAAs3B,EAAAt3B,EAAA,MAGA,SAAAw3B,GAAAx3B,EAAAxP,EAAAJ,GACA,OAAA2G,gBAAAygC,IAAAzgC,KAAAiJ,KAAAjJ,KAAAvG,UAAAuG,KAAA3G,OAAAoG,UAAAhC,OAAA,EAAAwL,aAAAw3B,GAAA,IAAAA,GAAAx3B,MAAAxP,EAAAwP,EAAA5P,GAAAqnC,GAAAz3B,aAAA03B,GAAA13B,EAAA5P,GAAA4P,EAAA23B,IAAA33B,EAAAzN,EAAAykC,IAAAh3B,IAAA/O,EAAA+O,EAAAX,EAAAW,EAAAgT,IAAA5iB,EAAA4P,EAAAR,EAAAQ,EAAAgT,GAAA,IAAAwkB,GAAAx3B,EAAAxP,EAAAJ,GAhCA8mC,GAAAU,SAAA,SAAA/6B,GAEA,OADAA,EAAAzH,KAAAq/B,IAAA,GAAAj+B,UAAAhC,OAAAqI,EAAA,GACA,IAAAg6B,GAAA9/B,KAAAiJ,EAAAjJ,KAAA7E,EAAA6E,KAAA3G,EAAAyM,IAEAq6B,GAAAW,OAAA,SAAAh7B,GAEA,OADAA,EAAAzH,KAAAq/B,IAAA,GAAAj+B,UAAAhC,OAAAqI,EAAA,GACA,IAAAg6B,GAAA9/B,KAAAiJ,EAAAjJ,KAAA7E,EAAA2K,EAAA9F,KAAA3G,IAEA8mC,GAAAF,IAAA,WACA,OAAAG,GAAApgC,KAAAiJ,EAAAjJ,KAAA7E,EAAA6E,KAAA3G,IAqBAmC,EAAAulC,IAAAN,GAIA,IAAAO,GAAAP,GAAAzlC,UAAA,IAAA6kC,GAUA,SAAAoB,GAAAh4B,EAAAxP,EAAAJ,GAGA,OAFA8b,MAAAlM,OAAA,GACAkM,MAAA1b,OAAA,GACA,IAAAknC,GAAAtnC,EAAAgF,KAAA6iC,IAAAj4B,GAAAixB,IAAAzgC,EAAA4E,KAAAw8B,IAAA5xB,GAAAxP,GAGA,SAAAknC,GAAAtnC,EAAAoP,EAAAwT,GACA,OAAAjc,gBAAA2gC,IAAA3gC,KAAA3G,KAAA2G,KAAAyI,UAAAzI,KAAAic,OAAAxc,UAAAhC,OAAA,EAAApE,aAAAsnC,GAAA,IAAAA,GAAAtnC,MAAAoP,EAAApP,EAAA4iB,GAAA5iB,aAAAonC,GAAAQ,GAAA5nC,EAAA4P,EAAA5P,EAAAI,EAAAJ,KAAAunC,IAAAvnC,EAAAmnC,GAAAnnC,IAAAa,EAAAb,EAAAiP,EAAAjP,EAAA4iB,GAAA,IAAA0kB,GAAAtnC,EAAAoP,EAAAwT,GAhBA+kB,GAAAH,SAAA,SAAA/6B,GACA,WAAA26B,GAAAzgC,KAAAiJ,EAAAjJ,KAAAvG,EAAA4E,KAAAqF,IAAA,IAAA1D,KAAA3G,EAAA8nC,IAAA1hC,UAAAhC,OAAAqI,EAAA,MAEAk7B,GAAAF,OAAA,SAAAh7B,GACA,WAAA26B,GAAAzgC,KAAAiJ,EAAAjJ,KAAAvG,EAAA4E,KAAAiF,IAAA,EAAAtD,KAAA3G,EAAA8nC,IAAA1hC,UAAAhC,OAAAqI,EAAA,MAEAk7B,GAAAf,IAAA,WACA,OAAAgB,GAAAjhC,KAAAiJ,EAAAjJ,KAAAvG,EAAAuG,KAAA3G,GAAA4mC,OAOAzkC,EAAA4qB,IAAAua,GAIA,IAAAQ,GAAA,GACAC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACAC,GAAAZ,GAAA3lC,UAAA,IAAA6kC,GAUA,SAAA2B,GAAAnoC,EAAAoP,EAAAwT,GACA,IAAA7Z,GAAA/I,EAAA,QAAA8I,EAAAC,EAAAqG,EAAA,IAAA4J,EAAAjQ,EAAA6Z,EAAA,IAIA,WAAAukB,GAAAiB,GAAA,WAHAt/B,EAAAu/B,GAAAv/B,GAAAi/B,IAGA,WAFAh/B,EAAAs/B,GAAAt/B,GAAAi/B,IAEA,UADAhvB,EAAAqvB,GAAArvB,GAAAivB,KACAG,IAAA,QAAAt/B,EAAA,UAAAC,EAAA,QAAAiQ,GAAAovB,GAAA,SAAAt/B,EAAA,SAAAC,EAAA,UAAAiQ,IAEA,SAAAquB,GAAArnC,EAAAoP,EAAAwT,GACA,OAAA5iB,EAAA,MAAAonC,GAAApiC,KAAAsjC,MAAA1lB,EAAAxT,GAAA0xB,GAAA97B,KAAAgtB,KAAA5iB,IAAAwT,KAAA5iB,GAAA,IAAAonC,GAAArW,QAAA/wB,GAEA,SAAAqoC,GAAAv/B,GACA,OAAAA,EAAA,WAAAA,SAAA,eAEA,SAAAy/B,GAAAz/B,GACA,OAAAA,EAAA,QAAA9D,KAAAq/B,IAAAv7B,EAAA,cAAAA,EAAA,KAEA,SAAAs/B,GAAAvnC,GACA,OAAAmE,KAAAY,MAAA,KAAA/E,GAAA,aAAAA,EAAA,MAAAmE,KAAAq/B,IAAAxjC,EAAA,cAGA,SAAAsmC,GAAAtmC,EAAAoO,EAAA2T,GACA,OAAAjc,gBAAAwgC,IAAAxgC,KAAA9F,MAAA8F,KAAAsI,WAAAtI,KAAAic,QAAAxc,UAAAhC,OAAA,EAAAvD,aAAAsmC,GAAA,IAAAA,GAAAtmC,MAAAoO,EAAApO,EAAA+hB,GAAA8jB,GAAA,GAAA7lC,EAAAsmC,GAAAJ,IAAA,IAAAI,GAAAtmC,EAAAoO,EAAA2T,GAEA,SAAA4lB,GAAAxnC,GACA,WAAAmmC,GAAAnmC,GAAA,GAAAA,GAAA,UAAAA,GAEA,SAAAynC,GAAAznC,GACA,OAAAwnC,GAAAxnC,GAAA,GApCAknC,GAAAV,SAAA,SAAA/6B,GACA,WAAA66B,GAAAtiC,KAAAqF,IAAA,IAAA1D,KAAA3G,EAAA8nC,IAAA1hC,UAAAhC,OAAAqI,EAAA,IAAA9F,KAAAyI,EAAAzI,KAAAic,IAEAslB,GAAAT,OAAA,SAAAh7B,GACA,WAAA66B,GAAAtiC,KAAAiF,IAAA,EAAAtD,KAAA3G,EAAA8nC,IAAA1hC,UAAAhC,OAAAqI,EAAA,IAAA9F,KAAAyI,EAAAzI,KAAAic,IAEAslB,GAAAtB,IAAA,WACA,OAAAuB,GAAAxhC,KAAA3G,EAAA2G,KAAAyI,EAAAzI,KAAAic,IAqBAzgB,EAAAykC,IAAAO,GAUA,IAAAuB,GAAAvB,GAAAxlC,UAAA,IAAA6kC,GAoBA,SAAAmC,GAAAhX,GACA,OAAAA,EAAA,OAAA3sB,KAAAiF,IAAA,EAAA0nB,GAAA9qB,SAAA,IAAA7B,KAAAqF,IAAA,IAAAsnB,GAAA9qB,SAAA,IAEA,SAAA6/B,GAAAx/B,EAAA0/B,EAAAC,GACA,IAAAG,EAAAC,EAAA/7B,EAAArK,EAAA,EAAAoO,EAAA,EAAA2T,EAAA,EAEA,GADAokB,EAAA,mBAAA4B,KAAA1hC,IAAAqD,eAGA,OADA08B,EAAAD,EAAA,GAAA1N,MAAA,KACA0N,EAAA,IACA,UAEA,OAAAH,EAAAgC,WAAA5B,EAAA,IAAA4B,WAAA5B,EAAA,QAAA4B,WAAA5B,EAAA,SAGA,UAEA,OAAAL,EAAAkC,GAAA7B,EAAA,IAAA6B,GAAA7B,EAAA,IAAA6B,GAAA7B,EAAA,KAIA,OAAA/7B,EAAA69B,GAAAnoC,IAAAsG,IACA0/B,EAAA17B,EAAArK,EAAAqK,EAAA+D,EAAA/D,EAAA0X,IAEA,MAAA1b,GAAA,MAAAA,EAAA+tB,OAAA,IAAAnZ,MAAA5Q,EAAA89B,SAAA9hC,EAAAgJ,MAAA,UACA,IAAAhJ,EAAA9C,QACAvD,GAAA,KAAAqK,IAAA,EACArK,MAAA,EACAoO,EAAA,IAAA/D,EACA+D,MAAA,EACA2T,EAAA,GAAA1X,EACA0X,MAAA,GACO,IAAA1b,EAAA9C,SACPvD,GAAA,SAAAqK,IAAA,GACA+D,GAAA,MAAA/D,IAAA,EACA0X,EAAA,IAAA1X,IAGA07B,EAAA/lC,EAAAoO,EAAA2T,IAEA,SAAA+jB,GAAA9lC,EAAAoO,EAAA2T,GACA,IAAAhT,EAAA9N,EAAAuI,EAAArF,KAAAqF,IAAAxJ,GAAA,IAAAoO,GAAA,IAAA2T,GAAA,KAAA3Y,EAAAjF,KAAAiF,IAAApJ,EAAAoO,EAAA2T,GAAAviB,EAAA4J,EAAAI,EAAArK,GAAAiK,EAAAI,GAAA,EASA,OARAhK,GACAyB,EAAA9B,EAAA,GAAAK,GAAA4J,EAAAI,GAAAhK,GAAA,EAAA4J,EAAAI,GACAuF,EAAA/O,GAAAoJ,GAAAgF,EAAA2T,GAAAviB,GAAA4O,EAAA2T,EAAA,KAAsD3T,GAAAhF,GAAA2Y,EAAA/hB,GAAAR,EAAA,GAAwCQ,EAAAoO,GAAA5O,EAAA,EAC9FuP,GAAA,KAEAA,EAAAmhB,IACAjvB,EAAA9B,EAAA,GAAAA,EAAA,IAAA4P,GAEA,IAAA62B,GAAA72B,EAAA9N,EAAA9B,GAEA,SAAAunC,GAAA1mC,EAAAoO,EAAA2T,GAIA,IAAA9Z,EAAAy/B,IAAA,UAHA1nC,EAAAooC,GAAApoC,IAGA,UAFAoO,EAAAg6B,GAAAh6B,IAEA,UADA2T,EAAAqmB,GAAArmB,KACAmlB,IAAAh/B,EAAAw/B,IAAA,SAAA1nC,EAAA,SAAAoO,EAAA,QAAA2T,GAAAolB,IACA,OAAAV,GAAA,IAAAv+B,EAAA,QAAAD,EAAAC,GAAA,KAAAA,EADAw/B,IAAA,SAAA1nC,EAAA,QAAAoO,EAAA,SAAA2T,GAAAqlB,MAGA,SAAAgB,GAAApoC,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAmE,KAAAq/B,KAAAxjC,EAAA,iBAEA,SAAAioC,GAAA1oC,GACA,IAAAwR,EAAAi3B,WAAAzoC,GACA,YAAAA,EAAA60B,OAAA70B,EAAAgE,OAAA,GAAAY,KAAAY,MAAA,KAAAgM,KAlFA82B,GAAAlB,SAAA,SAAA/6B,GACAA,EAAAzH,KAAAq/B,IAAA,GAAAj+B,UAAAhC,OAAAqI,EAAA,GACA,IAAA5L,EAAA8F,KAAA9F,EAAAoO,EAAAtI,KAAAsI,EAAA2T,EAAAjc,KAAAic,EAAA7iB,EAAA,GACA,OAAAc,GAAAoO,GAAA2T,GACA/hB,KAAAd,IAAAc,EAAAd,GACAkP,KAAAlP,IAAAkP,EAAAlP,GACA6iB,KAAA7iB,IAAA6iB,EAAA7iB,GACA,IAAAonC,GAAAniC,KAAAqF,IAAA,IAAAxJ,EAAA4L,GAAAzH,KAAAqF,IAAA,IAAA4E,EAAAxC,GAAAzH,KAAAqF,IAAA,IAAAuY,EAAAnW,KAJA,IAAA06B,GAAApnC,QAMA2oC,GAAAjB,OAAA,SAAAh7B,GAEA,WAAA06B,IADA16B,EAAAzH,KAAAq/B,IAAA,GAAAj+B,UAAAhC,OAAAqI,EAAA,IACA9F,KAAA9F,EAAA4L,EAAA9F,KAAAsI,EAAAxC,EAAA9F,KAAAic,IAEA8lB,GAAA7B,IAAA,WACA,OAAAF,GAAAhgC,KAAA9F,EAAA8F,KAAAsI,EAAAtI,KAAAic,IAEA8lB,GAAA7hC,SAAA,WACA,UAAA8hC,GAAAhiC,KAAA9F,GAAA8nC,GAAAhiC,KAAAsI,GAAA05B,GAAAhiC,KAAAic,IAmEA,IAAAmmB,GAAA5mC,EAAAoU,IAAA,CACA2yB,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,WAKA,SAAAC,GAAA3gB,GACA,yBAAAA,IAAA,WACA,OAAAA,GAKA,SAAA4gB,GAAAC,GACA,gBAAAC,EAAAC,EAAA9tC,GAGA,OAFA,IAAAwB,UAAAhC,QAAA,mBAAAsuC,IAAA9tC,EAAA8tC,EACAA,EAAA,MACAC,GAAAF,EAAAC,EAAAF,EAAA5tC,IAGA,SAAA+tC,GAAAF,EAAAC,EAAAF,EAAA5tC,GACA,IAAAguC,EAAA,GAAgB3c,EAAA9zB,EAAA8zB,SAAA,wCAAA4c,EAAA,GAAiFC,EAAA,IAAAC,eAAAC,EAAA,KAKjG,SAAAC,IACA,IAAA5hC,EAAA6hC,EAAAJ,EAAAI,OACA,IAAAA,GAwEA,SAAAJ,GACA,IAAAhc,EAAAgc,EAAAE,aACA,OAAAlc,GAAA,SAAAA,EAAAgc,EAAAN,SAAAM,EAAAK,aA1EAC,CAAAN,IAAAI,GAAA,KAAAA,EAAA,WAAAA,EAAA,CACA,IACA7hC,EAAAmhC,EAAAtyC,KAAA0yC,EAAAE,GACS,MAAArvC,GAET,YADAwyB,EAAAhG,MAAA/vB,KAAA0yC,EAAAnvC,GAGAwyB,EAAAod,KAAAnzC,KAAA0yC,EAAAvhC,QAEA4kB,EAAAhG,MAAA/vB,KAAA0yC,EAAAE,GAwDA,OAvEAnsC,KAAA2sC,gBAAA,oBAAAR,IAAA,oBAAA11B,KAAAq1B,KAAAK,EAAA,IAAAQ,gBACA,WAAAR,IAAAS,OAAAT,EAAAU,QAAAP,EAAAH,EAAAW,mBAAA,WACAX,EAAAY,WAAA,GAAAT,KAgBAH,EAAAa,WAAA,SAAAniC,GACA,IAAAhR,EAAA2B,EAAAqP,MACArP,EAAAqP,QACA,IACAykB,EAAA2d,SAAA1zC,KAAA0yC,EAAAE,GACO,QACP3wC,EAAAqP,MAAAhR,IAGAoyC,EAAAiB,OAAA,SAAAvzC,EAAAU,GAEA,OADAV,KAAA,IAAAiK,cACAnE,UAAAhC,OAAA,EAAAyuC,EAAAvyC,IACA,MAAAU,SAAA6xC,EAAAvyC,GAA8CuyC,EAAAvyC,GAAAU,EAAA,GAC9C4xC,IAEAA,EAAAF,SAAA,SAAA1xC,GACA,OAAAoF,UAAAhC,QACAsuC,EAAA,MAAA1xC,EAAA,KAAAA,EAAA,GACA4xC,GAFAF,GAIAE,EAAAI,aAAA,SAAAhyC,GACA,OAAAoF,UAAAhC,QACA4uC,EAAAhyC,EACA4xC,GAFAI,GAIAJ,EAAAJ,SAAA,SAAAxxC,GAEA,OADAwxC,EAAAxxC,EACA4xC,GAEA,eAAAn1B,QAAA,SAAAsX,GACA6d,EAAA7d,GAAA,WACA,OAAA6d,EAAAkB,KAAA/sC,MAAA6rC,EAAA,CAAA7d,GAAArX,OAAAyR,EAAA/oB,gBAGAwsC,EAAAkB,KAAA,SAAA/e,EAAAnsB,EAAAhE,GAIA,GAHA,IAAAwB,UAAAhC,QAAA,mBAAAwE,IAAAhE,EAAAgE,IAAA,MACAkqC,EAAAiB,KAAAhf,EAAA0d,GAAA,GACA,MAAAC,GAAA,WAAAG,MAAA,OAAAH,EAAA,QACAI,EAAAkB,iBAAA,QAAA1zC,KAAAuyC,EAAAC,EAAAkB,iBAAA1zC,EAAAuyC,EAAAvyC,IAQA,OAPA,MAAAoyC,GAAAI,EAAAmB,kBAAAnB,EAAAmB,iBAAAvB,GACA,MAAAM,IAAAF,EAAAE,gBACA,MAAApuC,GAAAguC,EAAA5/B,GAAA,QAAApO,GAAAoO,GAAA,gBAAA8/B,GACAluC,EAAA,KAAAkuC,KAEA7c,EAAAie,WAAAh0C,KAAA0yC,EAAAE,GACAA,EAAAgB,KAAA,MAAAlrC,EAAA,KAAAA,GACAgqC,GAEAA,EAAAuB,MAAA,WAEA,OADArB,EAAAqB,QACAvB,GAEAzwC,EAAA0zB,OAAA+c,EAAA3c,EAAA,MACA,MAAArxB,EAAAguC,IAAAhyC,IAEA,SAAAgE,GACA,WAAAA,EAAAR,OAAA,SAAA6rB,EAAA6iB,GACAluC,EAAA,MAAAqrB,EAAA6iB,EAAA,OACKluC,EALLwvC,CAAAxvC,IA1FAmkC,GAAAtrB,QAAA,SAAAnc,EAAAN,GACA+nC,GAAAxrB,IAAAjc,EAAAknC,GAAAxnC,MAOAmB,EAAAkyC,QAAA/B,GACAnwC,EAAAywC,IAAAL,GAAA5d,GA4FAxyB,EAAAmyC,IAAA,SAAAC,EAAA7B,GACA,IAAA8B,EAAA,IAAApb,OAAA,KAAAmb,EAAA,OAAAE,EAAAF,EAAAG,WAAA,GACA,SAAAJ,EAAA7B,EAAAvf,EAAAtuB,GACAwB,UAAAhC,OAAA,IAAAQ,EAAAsuB,IAAA,MACA,IAAA0f,EAAAD,GAAAF,EAAAC,EAAA,MAAAxf,EAAAsf,EAAAmC,EAAAzhB,GAAAtuB,GAIA,OAHAguC,EAAA1f,IAAA,SAAA/sB,GACA,OAAAC,UAAAhC,OAAAwuC,EAAAJ,SAAA,OAAAtf,EAAA/sB,GAAAqsC,EAAAmC,EAAAxuC,IAAA+sB,GAEA0f,EAEA,SAAAJ,EAAAM,GACA,OAAAwB,EAAAM,MAAA9B,EAAAK,cAEA,SAAAwB,EAAA/iC,GACA,gBAAAkhC,GACA,OAAAwB,EAAAM,MAAA9B,EAAAK,aAAAvhC,IA+EA,SAAAijC,EAAA3hB,GACA,OAAAA,EAAA3c,IAAAu+B,GAAAC,KAAAR,GAEA,SAAAO,EAAA5jC,GACA,OAAAsjC,EAAAp3B,KAAAlM,GAAA,IAAAA,EAAArJ,QAAA,gBAAAqJ,EAEA,OAlFAojC,EAAAM,MAAA,SAAA1jC,EAAAU,GACA,IAAApR,EACA,OAAA8zC,EAAAU,UAAA9jC,EAAA,SAAAgiB,EAAAnzB,GACA,GAAAS,EAAA,OAAAA,EAAA0yB,EAAAnzB,EAAA,GACA,IAAAqP,EAAA,IAAAvK,SAAA,eAA2CquB,EAAA3c,IAAA,SAAAjW,EAAAP,GAC3C,OAAAk1C,KAAAC,UAAA50C,GAAA,OAAAP,EAAA,MACSg1C,KAAA,UACTv0C,EAAAoR,EAAA,SAAAshB,EAAAnzB,GACA,OAAA6R,EAAAxC,EAAA8jB,GAAAnzB,IACSqP,KAGTklC,EAAAU,UAAA,SAAA9jC,EAAAU,GACA,IAA4B3Q,EAAAk0C,EAA5BC,EAAA,GAAkBC,EAAA,GAAUhuB,EAAA,GAAAiuB,EAAApkC,EAAA9M,OAAAmxC,EAAA,EAAA/zC,EAAA,EAC5B,SAAAg0C,IACA,GAAAD,GAAAD,EAAA,OAAAD,EACA,GAAAF,EAAA,OAAAA,GAAA,EAAAC,EACA,IAAArrC,EAAAwrC,EACA,QAAArkC,EAAAwjC,WAAA3qC,GAAA,CAEA,IADA,IAAAhK,EAAAgK,EACAhK,IAAAu1C,GACA,QAAApkC,EAAAwjC,WAAA30C,GAAA,CACA,QAAAmR,EAAAwjC,WAAA30C,EAAA,WACAA,EAWA,OARAw1C,EAAAx1C,EAAA,EAEA,MADAK,EAAA8Q,EAAAwjC,WAAA30C,EAAA,KAEAo1C,GAAA,EACA,KAAAjkC,EAAAwjC,WAAA30C,EAAA,MAAAw1C,GACW,KAAAn1C,IACX+0C,GAAA,GAEAjkC,EAAAhB,MAAAnG,EAAA,EAAAhK,GAAA8H,QAAA,WAEA,KAAA0tC,EAAAD,GAAA,CACA,IAAAl1C,EAAAqM,EAAA,EACA,SADArM,EAAA8Q,EAAAwjC,WAAAa,MACAJ,GAAA,OAAmC,QAAA/0C,EACnC+0C,GAAA,EACA,KAAAjkC,EAAAwjC,WAAAa,WAAA9oC,QACW,GAAArM,IAAAq0C,EAAA,SACX,OAAAvjC,EAAAhB,MAAAnG,EAAAwrC,EAAA9oC,GAEA,OAAAyE,EAAAhB,MAAAnG,GAEA,MAAA9I,EAAAu0C,OAAAH,GAAA,CAEA,IADA,IAAAjmC,EAAA,GACAnO,IAAAm0C,GAAAn0C,IAAAo0C,GACAjmC,EAAAxL,KAAA3C,GACAA,EAAAu0C,IAEA5jC,GAAA,OAAAxC,EAAAwC,EAAAxC,EAAA5N,OACA6lB,EAAAzjB,KAAAwL,GAEA,OAAAiY,GAEAitB,EAAAptC,OAAA,SAAAmgB,GACA,GAAA/f,MAAA0sB,QAAA3M,EAAA,WAAAitB,EAAAmB,WAAApuB,GACA,IAAAquB,EAAA,IAAAhhB,EAAAihB,EAAA,GAQA,OAPAtuB,EAAA5J,QAAA,SAAAyV,GACA,QAAA0iB,KAAA1iB,EACAwiB,EAAAnyC,IAAAqyC,IACAD,EAAA/xC,KAAA8xC,EAAA9tC,IAAAguC,MAIA,CAAAD,EAAAp/B,IAAAu+B,GAAAC,KAAAR,IAAA72B,OAAA2J,EAAA9Q,IAAA,SAAA2c,GACA,OAAAyiB,EAAAp/B,IAAA,SAAAq/B,GACA,OAAAd,EAAA5hB,EAAA0iB,MACSb,KAAAR,MACFQ,KAAA,OAEPT,EAAAmB,WAAA,SAAApuB,GACA,OAAAA,EAAA9Q,IAAAs+B,GAAAE,KAAA,OAQAT,GAEAnyC,EAAA0zC,IAAA1zC,EAAAmyC,IAAA,gBACAnyC,EAAA2zC,IAAA3zC,EAAAmyC,IAAA,kCACA,IAAAyB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAxvC,KAAAquB,EAAAruB,KAAA,oCAAA/B,GACA6G,WAAA7G,EAAA,KAKA,SAAAwxC,GAAAxxC,EAAA4G,EAAA6qC,GACA,IAAA70C,EAAA4E,UAAAhC,OACA5C,EAAA,IAAAgK,EAAA,GACAhK,EAAA,IAAA60C,EAAA7uC,KAAAsoB,OACA,IAAAwmB,EAAA,CACAl2C,EAAAwE,EACA3D,EAFAo1C,EAAA7qC,EAGAhK,EAAA,MASA,OAPAw0C,MAAAx0C,EAAA80C,EAAyDP,GAAAO,EACzDN,GAAAM,EACAL,KACAC,GAAApQ,aAAAoQ,IACAD,GAAA,EACAE,GAAAI,KAEAD,EAEA,SAAAC,KACA,IAAAzmB,EAAA0mB,KAAAhrC,EAAAirC,KAAA3mB,EACAtkB,EAAA,IACAkrC,SAAAlrC,KACAs6B,aAAAoQ,IACAA,GAAAzqC,WAAA8qC,GAAA/qC,IAEAyqC,GAAA,IAEAA,GAAA,EACAE,GAAAI,KAOA,SAAAC,KAEA,IADA,IAAA1mB,EAAAtoB,KAAAsoB,MAAAwmB,EAAAP,GACAO,GACAxmB,GAAAwmB,EAAAr1C,GAAAq1C,EAAAl2C,EAAA0vB,EAAAwmB,EAAAr1C,KAAAq1C,EAAAl2C,EAAA,MACAk2C,IAAA90C,EAEA,OAAAsuB,EAEA,SAAA2mB,KAEA,IADA,IAAAE,EAAAC,EAAAb,GAAA9uC,EAAAgd,IACA2yB,GACAA,EAAAx2C,GACAw2C,EAAA31C,EAAAgG,MAAA2vC,EAAA31C,GACA21C,GAAAD,EAAAC,GAAAp1C,GAEAo1C,EAAAD,IAAAn1C,EAAAo1C,EAAAp1C,EAAAu0C,GAAAa,EAAAp1C,EAIA,OADAw0C,GAAAW,EACA1vC,EAEA,SAAA4vC,GAAA/tC,EAAAjH,GACA,OAAAA,GAAAiH,EAAA9D,KAAAW,KAAAX,KAAAq9B,IAAAv5B,GAAA9D,KAAA8xC,MAAA,GA5DA30C,EAAAm0C,MAAA,WACAF,GAAArvC,MAAAJ,KAAAP,YAiCAjE,EAAAm0C,MAAAS,MAAA,WACAP,KACAC,MA0BAt0C,EAAAyD,MAAA,SAAAkD,EAAAtH,GACA,OAAAA,EAAAwD,KAAAY,MAAAkD,GAAAtH,EAAAwD,KAAAq/B,IAAA,GAAA7iC,OAAAwD,KAAAY,MAAAkD,IAEA,IAAAkuC,GAAA,qEAAAzgC,IAWA,SAAAlW,EAAAN,GACA,IAAA0M,EAAAzH,KAAAq/B,IAAA,KAAAp/B,EAAA,EAAAlF,IACA,OACAsU,MAAAtU,EAAA,WAAAM,GACA,OAAAA,EAAAoM,GACO,SAAApM,GACP,OAAAA,EAAAoM,GAEAwqC,OAAA52C,KAGA,SAAA62C,GAAAC,GACA,IAAAC,EAAAD,EAAAE,QAAAC,EAAAH,EAAAI,UAAAC,EAAAL,EAAAM,SAAAC,EAAAP,EAAAQ,SAAAC,EAAAJ,GAAAF,EAAA,SAAAt2C,EAAAyO,GAEA,IADA,IAAA1P,EAAAiB,EAAAoD,OAAAnD,EAAA,GAAA8I,EAAA,EAAAkF,EAAAuoC,EAAA,GAAApzC,EAAA,EACArE,EAAA,GAAAkP,EAAA,IACA7K,EAAA6K,EAAA,EAAAQ,IAAAR,EAAAjK,KAAAiF,IAAA,EAAAwF,EAAArL,IACAnD,EAAA2C,KAAA5C,EAAA62C,UAAA93C,GAAAkP,EAAAlP,EAAAkP,OACA7K,GAAA6K,EAAA,GAAAQ,KACAR,EAAAuoC,EAAAztC,KAAA,GAAAytC,EAAApzC,QAEA,OAAAnD,EAAA62C,UAAA/C,KAAAuC,IACK3iB,EACL,gBAAAojB,GACA,IAAArb,EAAAsb,GAAApP,KAAAmP,GAAAE,EAAAvb,EAAA,QAAAwb,EAAAxb,EAAA,QAAAyb,EAAAzb,EAAA,QAAAua,EAAAva,EAAA,OAAA0b,EAAA1b,EAAA,GAAAjtB,GAAAitB,EAAA,GAAA2b,EAAA3b,EAAA,GAAAr3B,EAAAq3B,EAAA,GAAA5F,EAAA4F,EAAA,GAAAroB,EAAA,EAAAsmB,EAAA,GAAA2d,EAAA,GAAAC,GAAA,EAAAC,GAAA,EAMA,OALAnzC,SAAAwyC,UAAA,KACAO,GAAA,MAAAH,GAAA,MAAAC,KACAE,EAAAH,EAAA,IACAC,EAAA,KAEAphB,GACA,QACAuhB,GAAA,EACAvhB,EAAA,IACA,MAEA,QACAziB,EAAA,IACAikC,EAAA,IACAxhB,EAAA,IACA,MAEA,QACAziB,EAAA,IACAikC,EAAA,IACAxhB,EAAA,IACA,MAEA,QACA,QACA,QACA,QACA,MAAAmgB,IAAAtc,EAAA,IAAA7D,EAAAvsB,eAEA,QACAiuC,GAAA,EAEA,QACAD,GAAA,EACAlzC,EAAA,EACA,MAEA,QACAgP,GAAA,EACAyiB,EAAA,IAGA,MAAAmgB,IAAAtc,EAAA+c,EAAA,GAAAY,EAAAZ,EAAA,IACA,KAAA5gB,GAAAzxB,IAAAyxB,EAAA,KACA,MAAAzxB,IACA,KAAAyxB,EAAAzxB,EAAAL,KAAAiF,IAAA,EAAAjF,KAAAqF,IAAA,GAAAhF,IAA0E,KAAAyxB,GAAA,KAAAA,IAAAzxB,EAAAL,KAAAiF,IAAA,EAAAjF,KAAAqF,IAAA,GAAAhF,MAE1EyxB,EAAA2hB,GAAA73C,IAAAk2B,IAAA4hB,GACA,IAAAC,EAAAP,GAAAC,EACA,gBAAAr3C,GACA,IAAA43C,EAAAN,EACA,GAAAC,GAAAv3C,EAAA,WACA,IAAA63C,EAAA73C,EAAA,OAAAA,GAAA,EAAAA,EAAA,GAAAA,KAAA,WAAAm3C,EAAA,GAAAA,EACA,GAAA9jC,EAAA,GACA,IAAAykC,EAAA32C,EAAA42C,aAAA/3C,EAAAqE,GACArE,EAAA83C,EAAAzkC,MAAArT,GACA43C,EAAAE,EAAA7B,OAAAqB,OAEAt3C,GAAAqT,EAGA,IAAA6mB,EAAA8d,EAAAj5C,GADAiB,EAAA81B,EAAA91B,EAAAqE,IACA4zC,YAAA,KACA,GAAAl5C,EAAA,GACA,IAAAgK,EAAAyuC,EAAAx3C,EAAAi4C,YAAA,QACAlvC,EAAA,GAAAmxB,EAAAl6B,EAAAg4C,EAAA,KAAgD9d,EAAAl6B,EAAA62C,UAAA,EAAA9tC,GAAAivC,EAAAh4C,EAAA62C,UAAA9tC,SAEhDmxB,EAAAl6B,EAAA62C,UAAA,EAAA93C,GACAi5C,EAAA5B,EAAAp2C,EAAA62C,UAAA93C,EAAA,IAEAq4C,GAAAC,IAAAnd,EAAA0c,EAAA1c,EAAAjX,MACA,IAAA7f,EAAAu2B,EAAAv2B,OAAA82B,EAAA92B,OAAA40C,EAAA50C,QAAAu0C,EAAA,EAAAE,EAAAz0C,QAAAuW,EAAAvW,EAAAqL,EAAA,IAAAnI,MAAAlD,EAAAqL,EAAArL,EAAA,GAAA2wC,KAAAkD,GAAA,GAIA,OAHAU,IAAAzd,EAAA0c,EAAAj9B,EAAAugB,EAAAvgB,EAAAvW,OAAAqL,EAAAupC,EAAA50C,OAAA6f,MACA40B,GAAAle,EACA35B,EAAAk6B,EAAA8d,GACA,MAAAd,EAAAW,EAAA73C,EAAA2Z,EAAA,MAAAu9B,EAAAv9B,EAAAk+B,EAAA73C,EAAA,MAAAk3C,EAAAv9B,EAAAk9B,UAAA,EAAAzzC,IAAA,GAAAy0C,EAAA73C,EAAA2Z,EAAAk9B,UAAAzzC,GAAAy0C,GAAAF,EAAA33C,EAAA2Z,EAAA3Z,IAAA43C,IA5GAz2C,EAAA42C,aAAA,SAAA/3C,EAAAqE,GACA,IAAAtF,EAAA,EAOA,OANAiB,QACAA,EAAA,IAAAA,IAAA,GACAqE,IAAArE,EAAAmB,EAAAyD,MAAA5E,EAAA61C,GAAA71C,EAAAqE,KACAtF,EAAA,EAAAiF,KAAAU,MAAA,MAAAV,KAAAq9B,IAAArhC,GAAAgE,KAAA8xC,MACA/2C,EAAAiF,KAAAiF,KAAA,GAAAjF,KAAAqF,IAAA,KAAArF,KAAAU,OAAA3F,EAAA,SAEAi3C,GAAA,EAAAj3C,EAAA,IAwGA,IAAAi4C,GAAA,yEACAS,GAAAt2C,EAAAoU,IAAA,CACAqM,EAAA,SAAA9Z,GACA,OAAAA,EAAAjC,SAAA,IAEAzG,EAAA,SAAA0I,GACA,OAAAowC,OAAAC,aAAArwC,IAEAtI,EAAA,SAAAsI,GACA,OAAAA,EAAAjC,SAAA,IAEAiC,EAAA,SAAAA,GACA,OAAAA,EAAAjC,SAAA,KAEAuyC,EAAA,SAAAtwC,GACA,OAAAA,EAAAjC,SAAA,IAAAquB,eAEAjmB,EAAA,SAAAnG,EAAAjH,GACA,OAAAiH,EAAAuwC,YAAAx3C,IAEA4B,EAAA,SAAAqF,EAAAjH,GACA,OAAAiH,EAAAwwC,cAAAz3C,IAEA+P,EAAA,SAAA9I,EAAAjH,GACA,OAAAiH,EAAAywC,QAAA13C,IAEAhB,EAAA,SAAAiI,EAAAjH,GACA,OAAAiH,EAAA3G,EAAAyD,MAAAkD,EAAA+tC,GAAA/tC,EAAAjH,KAAA03C,QAAAv0C,KAAAiF,IAAA,EAAAjF,KAAAqF,IAAA,GAAAwsC,GAAA/tC,GAAA,SAAAjH,SAGA,SAAA62C,GAAA5vC,GACA,OAAAA,EAAA,GAEA,IAAA0wC,GAAAr3C,EAAA8E,KAAA,GAA4BwyC,GAAAjyC,KAC5B,SAAAkyC,KACA/yC,KAAAR,EAAA,IAAAqB,KAAApB,UAAAhC,OAAA,EAAAoD,KAAAmyC,IAAA5yC,MAAAJ,KAAAP,qBAAA,IAEAszC,GAAA/3C,UAAA,CACAsG,QAAA,WACA,OAAAtB,KAAAR,EAAAyzC,cAEAC,OAAA,WACA,OAAAlzC,KAAAR,EAAA2zC,aAEAC,YAAA,WACA,OAAApzC,KAAAR,EAAA6zC,kBAEAC,SAAA,WACA,OAAAtzC,KAAAR,EAAA+zC,eAEAC,gBAAA,WACA,OAAAxzC,KAAAR,EAAAi0C,sBAEAC,WAAA,WACA,OAAA1zC,KAAAR,EAAAm0C,iBAEAC,SAAA,WACA,OAAA5zC,KAAAR,EAAAq0C,eAEAC,WAAA,WACA,OAAA9zC,KAAAR,EAAAu0C,iBAEA3yC,QAAA,WACA,OAAApB,KAAAR,EAAA4B,WAEA4yC,kBAAA,WACA,UAEAC,QAAA,WACA,OAAAj0C,KAAAR,EAAAy0C,WAEA5yC,QAAA,WACA6yC,GAAAC,WAAA/zC,MAAAJ,KAAAR,EAAAC,YAEA20C,OAAA,WACAF,GAAAG,UAAAj0C,MAAAJ,KAAAR,EAAAC,YAEA60C,YAAA,WACAJ,GAAAK,eAAAn0C,MAAAJ,KAAAR,EAAAC,YAEA+0C,SAAA,WACAN,GAAAO,YAAAr0C,MAAAJ,KAAAR,EAAAC,YAEAi1C,gBAAA,WACAR,GAAAS,mBAAAv0C,MAAAJ,KAAAR,EAAAC,YAEAm1C,WAAA,WACAV,GAAAW,cAAAz0C,MAAAJ,KAAAR,EAAAC,YAEAq1C,SAAA,WACAZ,GAAAa,YAAA30C,MAAAJ,KAAAR,EAAAC,YAEAu1C,WAAA,WACAd,GAAAe,cAAA70C,MAAAJ,KAAAR,EAAAC,YAEA0B,QAAA,WACA+yC,GAAA/yC,QAAAf,MAAAJ,KAAAR,EAAAC,aAGA,IAAAy0C,GAAArzC,KAAA7F,UACA,SAAAk6C,GAAAjrB,EAAAiD,EAAAioB,GACA,SAAAl2C,EAAAm2C,GACA,IAAAC,EAAAprB,EAAAmrB,GAAAzZ,EAAAtlB,EAAAg/B,EAAA,GACA,OAAAD,EAAAC,EAAA1Z,EAAAyZ,EAAAC,EAAA1Z,EAEA,SAAA38B,EAAAo2C,GAEA,OADAloB,EAAAkoB,EAAAnrB,EAAA,IAAA6oB,GAAAsC,EAAA,OACAA,EAEA,SAAA/+B,EAAA++B,EAAAtvC,GAEA,OADAonB,EAAAkoB,EAAA,IAAAtC,IAAAsC,GAAAtvC,GACAsvC,EAEA,SAAArlC,EAAAigC,EAAAC,EAAAqF,GACA,IAAAh1C,EAAAtB,EAAAgxC,GAAAuF,EAAA,GACA,GAAAD,EAAA,EACA,KAAAh1C,EAAA2vC,GACAkF,EAAA70C,GAAAg1C,GAAAC,EAAAt4C,KAAA,IAAA4D,MAAAP,IACA4sB,EAAA5sB,EAAA,QAGA,KAAAA,EAAA2vC,GAAAsF,EAAAt4C,KAAA,IAAA4D,MAAAP,IAAA4sB,EAAA5sB,EAAA,GAEA,OAAAi1C,EAYAtrB,EAAAlrB,MAAAkrB,EACAA,EAAAhrB,QACAgrB,EAAAjrB,OACAirB,EAAA5T,SACA4T,EAAAla,QACA,IAAAylC,EAAAvrB,EAAAurB,IAAAC,GAAAxrB,GAMA,OALAurB,EAAAz2C,MAAAy2C,EACAA,EAAAv2C,MAAAw2C,GAAAx2C,GACAu2C,EAAAx2C,KAAAy2C,GAAAz2C,GACAw2C,EAAAn/B,OAAAo/B,GAAAp/B,GACAm/B,EAAAzlC,MApBA,SAAAigC,EAAAC,EAAAqF,GACA,IACAxC,GAAAC,GACA,IAAAyC,EAAA,IAAAzC,GAEA,OADAyC,EAAAh2C,EAAAwwC,EACAjgC,EAAAylC,EAAAvF,EAAAqF,GACO,QACPxC,GAAAjyC,OAcAopB,EAEA,SAAAwrB,GAAArnB,GACA,gBAAAgnB,EAAAtvC,GACA,IACAgtC,GAAAC,GACA,IAAAyC,EAAA,IAAAzC,GAEA,OADAyC,EAAAh2C,EAAA41C,EACAhnB,EAAAonB,EAAA1vC,GAAAtG,EACO,QACPszC,GAAAjyC,OAoDA,SAAA60C,GAAAlF,GACA,IAAAmF,EAAAnF,EAAAoF,SAAAC,EAAArF,EAAA4E,KAAAU,EAAAtF,EAAAlwC,KAAAy1C,EAAAvF,EAAAwF,QAAAC,EAAAzF,EAAA0F,KAAAC,EAAA3F,EAAA4F,UAAAC,EAAA7F,EAAA8F,OAAAC,EAAA/F,EAAAgG,YACA,SAAAC,EAAAC,GACA,IAAA77C,EAAA67C,EAAAj5C,OACA,SAAA8C,EAAA60C,GAEA,IADA,IAAA37C,EAAAyB,EAAA+P,EAAA0rC,EAAA,GAAAv9C,GAAA,EAAAgK,EAAA,IACAhK,EAAAyB,GACA,KAAA67C,EAAA3I,WAAA30C,KACAu9C,EAAA15C,KAAAy5C,EAAAntC,MAAAnG,EAAAhK,IACA,OAAA8B,EAAA07C,GAAAn9C,EAAAi9C,EAAApoB,SAAAl1B,OAAAK,EAAAi9C,EAAApoB,SAAAl1B,KACA6R,EAAA4rC,EAAAp9C,QAAAwR,EAAAmqC,EAAA,MAAAl6C,EAAA,MAAAzB,EAAA,QAAAyB,IACAy7C,EAAA15C,KAAAxD,GACA2J,EAAAhK,EAAA,GAIA,OADAu9C,EAAA15C,KAAAy5C,EAAAntC,MAAAnG,EAAAhK,IACAu9C,EAAAvI,KAAA,IA2BA,OAzBA7tC,EAAA0tC,MAAA,SAAA0I,GACA,IAAAj9C,EAAA,CACA0I,EAAA,KACA5I,EAAA,EACAE,EAAA,EACAqxB,EAAA,EACA+rB,EAAA,EACA5b,EAAA,EACA6b,EAAA,EACAC,EAAA,MAEA,GADSC,EAAAv9C,EAAAg9C,EAAAC,EAAA,IACTA,EAAAl5C,OAAA,YACA,MAAA/D,MAAAqxB,EAAArxB,EAAAqxB,EAAA,MAAArxB,EAAAwB,GACA,IAAAg8C,EAAA,MAAAx9C,EAAAs9C,GAAAlE,KAAAC,GAAAqC,EAAA,IAAA8B,EAAAnE,GAAAD,IAOA,MANA,MAAAp5C,EAAA07C,EAAAd,YAAA56C,EAAA0I,EAAA,EAAA1I,EAAA0J,GAAoD,MAAA1J,GAAA,MAAAA,GACpD,MAAAA,MAAAqP,EAAA,MAAArP,EAAA,KACA07C,EAAAd,YAAA56C,EAAA0I,EAAA,KACAgzC,EAAAd,YAAA56C,EAAA0I,EAAA,QAAA1I,KAAAqP,EAAA,OAAArP,EAAAy9C,GAAA/B,EAAAlC,SAAA,KAAAx5C,EAAAqP,EAAA,EAAArP,EAAA09C,GAAAhC,EAAAlC,SAAA,OACSkC,EAAAd,YAAA56C,EAAA0I,EAAA1I,EAAAF,EAAAE,KACT07C,EAAAZ,SAAA96C,EAAAqxB,GAAArxB,EAAAs9C,EAAA,OAAAt9C,EAAAo9C,EAAAp9C,EAAAs9C,EAAA,IAAAt9C,EAAAwhC,EAAAxhC,EAAAq9C,GACAG,EAAA9B,EAAA51C,EAAA41C,GAEA70C,EAAAL,SAAA,WACA,OAAAw2C,GAEAn2C,EAEA,SAAA02C,EAAA7B,EAAAsB,EAAAC,EAAAvzC,GAEA,IADA,IAAA3J,EAAAyB,EAAAZ,EAAAlB,EAAA,EAAAyB,EAAA67C,EAAAj5C,OAAAjE,EAAAm9C,EAAAl5C,OACArE,EAAAyB,GAAA,CACA,GAAAuI,GAAA5J,EAAA,SAEA,SADAC,EAAAi9C,EAAA3I,WAAA30C,OAIA,GAFAkB,EAAAo8C,EAAApoB,OAAAl1B,OACA8B,EAAAm8C,EAAA/8C,KAAAs8C,GAAAF,EAAApoB,OAAAl1B,KAAAkB,MACA8I,EAAAlI,EAAAk6C,EAAAuB,EAAAvzC,IAAA,gBACS,GAAA3J,GAAAk9C,EAAA5I,WAAA3qC,KACT,SAGA,OAAAA,EAEAqzC,EAAAjB,IAAA,SAAAkB,GACA,IAAAzsB,EAAAwsB,EAAAC,GACA,SAAAn2C,EAAA60C,GACA,IAEA,IAAAI,EAAA,IADA1C,GAAAC,IAGA,OADAyC,EAAAh2C,EAAA41C,EACAnrB,EAAAurB,GACS,QACT1C,GAAAjyC,MAaA,OAVAN,EAAA0tC,MAAA,SAAA0I,GACA,IACA7D,GAAAC,GACA,IAAAqC,EAAAnrB,EAAAgkB,MAAA0I,GACA,OAAAvB,KAAA51C,EACS,QACTszC,GAAAjyC,OAGAN,EAAAL,SAAA+pB,EAAA/pB,SACAK,GAEAk2C,EAAAa,MAAAb,EAAAjB,IAAA8B,MAAAC,GACA,IAAAC,EAAAh8C,EAAAoU,MAAA6nC,EAAAC,GAAAzB,GAAA0B,EAAAC,GAAA3B,GAAA4B,EAAAH,GAAAvB,GAAA2B,EAAAF,GAAAzB,GAAA4B,EAAAL,GAAArB,GAAA2B,EAAAJ,GAAAvB,GAAA4B,EAAAP,GAAAnB,GAAA2B,EAAAN,GAAArB,GACAR,EAAAj/B,QAAA,SAAA5b,EAAA9B,GACAo+C,EAAA5gC,IAAA1b,EAAA0I,cAAAxK,KAEA,IAAAy9C,EAAA,CACApuC,EAAA,SAAA/O,GACA,OAAAy8C,EAAAz8C,EAAAw5C,WAEAiF,EAAA,SAAAz+C,GACA,OAAAu8C,EAAAv8C,EAAAw5C,WAEAj3B,EAAA,SAAAviB,GACA,OAAA68C,EAAA78C,EAAAk6C,aAEAwE,EAAA,SAAA1+C,GACA,OAAA28C,EAAA38C,EAAAk6C,aAEAn6C,EAAAg9C,EAAAd,GACAj8C,EAAA,SAAAA,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA4H,UAAApG,EAAA,IAEA4B,EAAA,SAAApD,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA4H,UAAApG,EAAA,IAEA6vB,EAAA,SAAArxB,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA45C,WAAAp4C,EAAA,IAEA0zC,EAAA,SAAAl1C,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA45C,WAAA,OAAAp4C,EAAA,IAEAkI,EAAA,SAAA1J,EAAAwB,GACA,OAAAm9C,GAAA,EAAAxF,GAAAyF,UAAA5+C,GAAAwB,EAAA,IAEA67C,EAAA,SAAAr9C,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA85C,kBAAAt4C,EAAA,IAEA1B,EAAA,SAAAE,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAAk6C,WAAA,EAAA14C,EAAA,IAEA47C,EAAA,SAAAp9C,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAAg6C,aAAAx4C,EAAA,IAEAA,EAAA,SAAAxB,GACA,OAAAq8C,IAAAr8C,EAAA45C,YAAA,MAEApY,EAAA,SAAAxhC,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAAo6C,aAAA54C,EAAA,IAEAk8C,EAAA,SAAA19C,EAAAwB,GACA,OAAAm9C,GAAAxF,GAAA0F,aAAA7+C,GAAAwB,EAAA,IAEA6N,EAAA,SAAArP,GACA,OAAAA,EAAAw5C,UAEAiE,EAAA,SAAAz9C,EAAAwB,GACA,OAAAm9C,GAAAxF,GAAA2F,aAAA9+C,GAAAwB,EAAA,IAEAiH,EAAAs0C,EAAAZ,GACApD,EAAAgE,EAAAX,GACA1zC,EAAA,SAAA1I,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA05C,cAAA,IAAAl4C,EAAA,IAEAu9C,EAAA,SAAA/+C,EAAAwB,GACA,OAAAm9C,GAAA3+C,EAAA05C,cAAA,IAAAl4C,EAAA,IAEA87C,EAAA0B,GACAC,IAAA,WACA,YAGAtB,EAAA,CACA5uC,EAyBA,SAAA2sC,EAAAuB,EAAAv9C,GACAy+C,EAAA5kB,UAAA,EACA,IAAAp4B,EAAAg9C,EAAA5V,KAAA0U,EAAAptC,MAAAnQ,IACA,OAAAyB,GAAAu6C,EAAArsC,EAAA+uC,EAAA79C,IAAAY,EAAA,GAAA+I,eAAAxK,EAAAyB,EAAA,GAAA4C,SAAA,GA3BA06C,EA6BA,SAAA/C,EAAAuB,EAAAv9C,GACAq+C,EAAAxkB,UAAA,EACA,IAAAp4B,EAAA48C,EAAAxV,KAAA0U,EAAAptC,MAAAnQ,IACA,OAAAyB,GAAAu6C,EAAArsC,EAAA4uC,EAAA19C,IAAAY,EAAA,GAAA+I,eAAAxK,EAAAyB,EAAA,GAAA4C,SAAA,GA/BAwe,EAiCA,SAAAm5B,EAAAuB,EAAAv9C,GACA6+C,EAAAhlB,UAAA,EACA,IAAAp4B,EAAAo9C,EAAAhW,KAAA0U,EAAAptC,MAAAnQ,IACA,OAAAyB,GAAAu6C,EAAA57C,EAAA0+C,EAAAj+C,IAAAY,EAAA,GAAA+I,eAAAxK,EAAAyB,EAAA,GAAA4C,SAAA,GAnCA26C,EAqCA,SAAAhD,EAAAuB,EAAAv9C,GACA2+C,EAAA9kB,UAAA,EACA,IAAAp4B,EAAAk9C,EAAA9V,KAAA0U,EAAAptC,MAAAnQ,IACA,OAAAyB,GAAAu6C,EAAA57C,EAAAw+C,EAAA/9C,IAAAY,EAAA,GAAA+I,eAAAxK,EAAAyB,EAAA,GAAA4C,SAAA,GAvCAhE,EAyCA,SAAA27C,EAAAuB,EAAAv9C,GACA,OAAA69C,EAAA7B,EAAAyB,EAAAp9C,EAAAyG,WAAAy2C,EAAAv9C,IAzCAM,EAAAk/C,GACA97C,EAAA87C,GACA7tB,EAAA8tB,GACAjK,EAAAiK,GACAz1C,EAAA01C,GACA/B,EAAAgC,GACAv/C,EAAAw/C,GACAlC,EAAAmC,GACA/9C,EAyCA,SAAAk6C,EAAAuB,EAAAv9C,GACA,IAAAyB,EAAA28C,EAAAv9C,IAAA08C,EAAAptC,MAAAnQ,KAAA,GAAAwK,eACA,aAAA/I,GAAA,GAAAu6C,EAAAl6C,EAAAL,EAAAzB,IA1CA8hC,EAAAge,GACA9B,EAAA+B,GACApwC,EAAAqwC,GACAjC,EAAAkC,GACAl3C,EA8BA,SAAAizC,EAAAuB,EAAAv9C,GACA,OAAA69C,EAAA7B,EAAAyB,EAAA10C,EAAAjC,WAAAy2C,EAAAv9C,IA9BAq5C,EAgCA,SAAA2C,EAAAuB,EAAAv9C,GACA,OAAA69C,EAAA7B,EAAAyB,EAAApE,EAAAvyC,WAAAy2C,EAAAv9C,IAhCAgJ,EAAAk3C,GACAb,EAAAc,GACAvC,EAAAwC,GACAb,IAAAc,IAmCA,OAAAhD,EAtQA5D,GAAA6G,KAAAxE,GAAA,SAAAE,GAGA,OAFAA,EAAAvC,GAAA8G,IAAAvE,IACAN,SAAA,KACAM,GACG,SAAAA,EAAA/+B,GACH++B,EAAAd,YAAAc,EAAAhC,cAAA/8B,IACG,SAAA++B,GACH,OAAAA,EAAAhC,gBAEAP,GAAA+G,MAAA/G,GAAA6G,KAAA3pC,MACA8iC,GAAA+G,MAAApE,IAAA3C,GAAA6G,KAAAlE,IAAAzlC,MACA8iC,GAAA8G,IAAAzE,GAAA,SAAAE,GACA,IAAAuE,EAAA,IAAA7G,GAAA,OAEA,OADA6G,EAAArF,YAAAc,EAAAhC,cAAAgC,EAAAxB,WAAAwB,EAAA9zC,WACAq4C,GACG,SAAAvE,EAAA/+B,GACH++B,EAAA/zC,QAAA+zC,EAAA9zC,UAAA+U,IACG,SAAA++B,GACH,OAAAA,EAAA9zC,UAAA,IAEAuxC,GAAAqD,KAAArD,GAAA8G,IAAA5pC,MACA8iC,GAAAqD,KAAAV,IAAA3C,GAAA8G,IAAAnE,IAAAzlC,MACA8iC,GAAAyF,UAAA,SAAAlD,GACA,IAAAsE,EAAA7G,GAAA6G,KAAAtE,GACA,OAAA/2C,KAAAU,OAAAq2C,EAAAsE,EAAA,KAAAtE,EAAApB,oBAAA0F,EAAA1F,sBAAA,QAEA,yEAAAl9B,QAAA,SAAA6iC,EAAAvgD,GACAA,EAAA,EAAAA,EACA,IAAAygD,EAAAhH,GAAA8G,GAAAzE,GAAA,SAAAE,GAEA,OADAA,EAAAvC,GAAA8G,IAAAvE,IAAA/zC,QAAA+zC,EAAA9zC,WAAA8zC,EAAAlC,SAAA95C,GAAA,GACAg8C,GACK,SAAAA,EAAA/+B,GACL++B,EAAA/zC,QAAA+zC,EAAA9zC,UAAA,EAAAjD,KAAAU,MAAAsX,KACK,SAAA++B,GACL,IAAAuE,EAAA9G,GAAA6G,KAAAtE,GAAAlC,SACA,OAAA70C,KAAAU,OAAA8zC,GAAAyF,UAAAlD,IAAAuE,EAAAvgD,GAAA,OAAAugD,IAAAvgD,KAEAy5C,GAAA8G,EAAA,KAAAE,EAAA9pC,MACA8iC,GAAA8G,EAAA,KAAAnE,IAAAqE,EAAArE,IAAAzlC,MACA8iC,GAAA8G,EAAA,mBAAAvE,GACA,IAAAuE,EAAA9G,GAAA6G,KAAAtE,GAAAlC,SACA,OAAA70C,KAAAU,OAAA8zC,GAAAyF,UAAAlD,IAAAuE,EAAAvgD,GAAA,SAGAy5C,GAAAiH,KAAAjH,GAAAkH,OACAlH,GAAAmH,MAAAnH,GAAAkH,OAAAhqC,MACA8iC,GAAAmH,MAAAxE,IAAA3C,GAAAkH,OAAAvE,IAAAzlC,MACA8iC,GAAAoH,WAAApH,GAAA0F,aAyNA,IAAA3B,GAAA,CACAsD,IAAA,GACA16C,EAAA,IACA26C,EAAA,KACGC,GAAA,UAAAC,GAAA,KACH,SAAAhC,GAAAh+C,EAAAi3C,EAAAxoC,GACA,IAAA0oC,EAAAn3C,EAAA,SAAAs8C,GAAAnF,GAAAn3C,KAAA,GAAAoD,EAAAk5C,EAAAl5C,OACA,OAAA+zC,GAAA/zC,EAAAqL,EAAA,IAAAnI,MAAAmI,EAAArL,EAAA,GAAA2wC,KAAAkD,GAAAqF,KAEA,SAAAe,GAAA4C,GACA,WAAA7nB,OAAA,OAAA6nB,EAAA1qC,IAAApU,EAAA40B,SAAAge,KAAA,cAEA,SAAAwJ,GAAA0C,GAEA,IADA,IAAA1qC,EAAA,IAAAod,EAAA5zB,GAAA,EAAAyB,EAAAy/C,EAAA78C,SACArE,EAAAyB,GAAA+U,EAAAgH,IAAA0jC,EAAAlhD,GAAAwK,cAAAxK,GACA,OAAAwW,EAEA,SAAAwpC,GAAAhE,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAArsC,GAAAlO,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAA07C,GAAA/D,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IACA,OAAAyB,GAAAu6C,EAAAgC,GAAAv8C,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAA47C,GAAAjE,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IACA,OAAAyB,GAAAu6C,EAAA+B,GAAAt8C,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAA87C,GAAAnE,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAAhzC,GAAAvH,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAA67C,GAAAlE,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAOAv5B,EAPAmB,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAAhzC,GAMA1I,GANAmB,EAAA,KAOAnB,EAAA,aAPAN,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAA+7C,GAAApE,EAAAuB,EAAAv9C,GACA,oBAAsBqd,KAAAkgC,IAAAptC,MAAAnQ,IAAA,KAAAg8C,EAAA4B,GAAAL,EACtBv9C,EAAA,MAKA,SAAA4/C,GAAA5D,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAA57C,EAAAqB,EAAA,KAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAm7C,GAAAxD,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAA17C,GAAAmB,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAq7C,GAAA1D,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAAhyC,GAAAvI,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAo7C,GAAAzD,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAArqB,GAAAlwB,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAw7C,GAAA7D,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAA0B,GAAAj8C,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAy7C,GAAA9D,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAAla,GAAArgC,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAs7C,GAAA3D,EAAAuB,EAAAv9C,GACAghD,GAAAnnB,UAAA,EACA,IAAAp4B,EAAAu/C,GAAAnY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,GAAAu6C,EAAA2B,GAAAl8C,EAAA,GAAAzB,EAAAyB,EAAA,GAAA4C,SAAA,EAEA,SAAAi7C,GAAAh/C,GACA,IAAA2Y,EAAA3Y,EAAAs6C,oBAAAuG,EAAAloC,EAAA,UAAAmoC,EAAAl8C,EAAA+T,GAAA,KAAAooC,EAAAn8C,EAAA+T,GAAA,GACA,OAAAkoC,EAAAlC,GAAAmC,EAAA,OAAAnC,GAAAoC,EAAA,OAEA,SAAAhB,GAAArE,EAAAuB,EAAAv9C,GACAihD,GAAApnB,UAAA,EACA,IAAAp4B,EAAAw/C,GAAApY,KAAA0U,EAAAptC,MAAAnQ,IAAA,IACA,OAAAyB,EAAAzB,EAAAyB,EAAA,GAAA4C,QAAA,EAEA,SAAA85C,GAAAmD,GAEA,IADA,IAAA7/C,EAAA6/C,EAAAj9C,OAAArE,GAAA,IACAA,EAAAyB,GAAA6/C,EAAAthD,GAAA,GAAA4G,KAAA06C,EAAAthD,GAAA,IACA,gBAAAg8C,GAEA,IADA,IAAAh8C,EAAA,EAAA6R,EAAAyvC,EAAAthD,IACA6R,EAAA,GAAAmqC,IAAAnqC,EAAAyvC,IAAAthD,GACA,OAAA6R,EAAA,GAAAmqC,IAGA55C,EAAAg1C,OAAA,SAAAA,GACA,OACAmK,aAAApK,GAAAC,GACAoK,WAAAlF,GAAAlF,KAGA,IAAAqK,GAAAr/C,EAAAg1C,OAAA,CACAE,QAAA,IACAE,UAAA,IACAE,SAAA,IACAE,SAAA,SACA4E,SAAA,iBACAR,KAAA,WACA90C,KAAA,WACA01C,QAAA,YACAE,KAAA,yEACAE,UAAA,4CACAE,OAAA,gHACAE,YAAA,4EAIA,SAAAsE,MAFAt/C,EAAA+E,OAAAs6C,GAAAF,aACAn/C,EAAAwnB,IAAA,GAEA83B,GAAA9/C,UAAA,CACAG,EAAA,EACAb,EAAA,EACA2G,IAAA,SAAAmB,GACA24C,GAAA34C,EAAApC,KAAA1F,EAAA0gD,IACAD,GAAAC,GAAA7/C,EAAA6E,KAAA7E,EAAA6E,MACAA,KAAA7E,EAAA6E,KAAA1F,GAAA0gD,GAAA1gD,EAA2C0F,KAAA7E,EAAA6/C,GAAA1gD,GAE3C2gD,MAAA,WACAj7C,KAAA7E,EAAA6E,KAAA1F,EAAA,GAEA25C,QAAA,WACA,OAAAj0C,KAAA7E,IAGA,IAAA6/C,GAAA,IAAAF,GACA,SAAAC,GAAAtyC,EAAAwT,EAAApiB,GACA,IAAAsI,EAAAtI,EAAAsB,EAAAsN,EAAAwT,EAAAi/B,EAAA/4C,EAAAsG,EAAA0yC,EAAAh5C,EAAA+4C,EACArhD,EAAAS,EAAAmO,EAAA0yC,GAAAl/B,EAAAi/B,GASA,SAAAE,GAAAC,EAAA/uC,GACA+uC,GAAAC,GAAArgD,eAAAogD,EAAAlrB,OACAmrB,GAAAD,EAAAlrB,MAAAkrB,EAAA/uC,GATA9Q,EAAAwnB,IAAAu4B,OAAA,SAAAzgD,EAAAwR,GACAxR,GAAA0gD,GAAAvgD,eAAAH,EAAAq1B,MACAqrB,GAAA1gD,EAAAq1B,MAAAr1B,EAAAwR,GAEA8uC,GAAAtgD,EAAAwR,IAQA,IAAAkvC,GAAA,CACAC,QAAA,SAAAC,EAAApvC,GACA8uC,GAAAM,EAAAL,SAAA/uC,IAEAqvC,kBAAA,SAAA7gD,EAAAwR,GAEA,IADA,IAAAsvC,EAAA9gD,EAAA8gD,SAAAxiD,GAAA,EAAAyB,EAAA+gD,EAAAn+C,SACArE,EAAAyB,GAAAugD,GAAAQ,EAAAxiD,GAAAiiD,SAAA/uC,KAGAgvC,GAAA,CACAO,OAAA,SAAA/gD,EAAAwR,GACAA,EAAAwvC,UAEAC,MAAA,SAAAjhD,EAAAwR,GACAxR,IAAAkhD,YACA1vC,EAAAuY,MAAA/pB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAmhD,WAAA,SAAAnhD,EAAAwR,GAEA,IADA,IAAA0vC,EAAAlhD,EAAAkhD,YAAA5iD,GAAA,EAAAyB,EAAAmhD,EAAAv+C,SACArE,EAAAyB,GAAAC,EAAAkhD,EAAA5iD,GAAAkT,EAAAuY,MAAA/pB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAohD,WAAA,SAAAphD,EAAAwR,GACA6vC,GAAArhD,EAAAkhD,YAAA1vC,EAAA,IAEA8vC,gBAAA,SAAAthD,EAAAwR,GAEA,IADA,IAAA0vC,EAAAlhD,EAAAkhD,YAAA5iD,GAAA,EAAAyB,EAAAmhD,EAAAv+C,SACArE,EAAAyB,GAAAshD,GAAAH,EAAA5iD,GAAAkT,EAAA,IAEA+vC,QAAA,SAAAvhD,EAAAwR,GACAgwC,GAAAxhD,EAAAkhD,YAAA1vC,IAEAiwC,aAAA,SAAAzhD,EAAAwR,GAEA,IADA,IAAA0vC,EAAAlhD,EAAAkhD,YAAA5iD,GAAA,EAAAyB,EAAAmhD,EAAAv+C,SACArE,EAAAyB,GAAAyhD,GAAAN,EAAA5iD,GAAAkT,IAEAkwC,mBAAA,SAAA1hD,EAAAwR,GAEA,IADA,IAAAmwC,EAAA3hD,EAAA2hD,WAAArjD,GAAA,EAAAyB,EAAA4hD,EAAAh/C,SACArE,EAAAyB,GAAAugD,GAAAqB,EAAArjD,GAAAkT,KAGA,SAAA6vC,GAAAH,EAAA1vC,EAAAowC,GACA,IAAAC,EAAAvjD,GAAA,EAAAyB,EAAAmhD,EAAAv+C,OAAAi/C,EAEA,IADApwC,EAAAswC,cACAxjD,EAAAyB,GAAA8hD,EAAAX,EAAA5iD,GAAAkT,EAAAuY,MAAA83B,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACArwC,EAAAuwC,UAEA,SAAAP,GAAAN,EAAA1vC,GACA,IAAAlT,GAAA,EAAAyB,EAAAmhD,EAAAv+C,OAEA,IADA6O,EAAAwwC,iBACA1jD,EAAAyB,GAAAshD,GAAAH,EAAA5iD,GAAAkT,EAAA,GACAA,EAAAywC,aAEAvhD,EAAAwnB,IAAAjE,KAAA,SAAAjkB,GAGA,OAFAkiD,GAAA,EACAxhD,EAAAwnB,IAAAu4B,OAAAzgD,EAAAmiD,IACAD,IAEA,IAAAA,GA8MAE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GA9MAC,GAAA,IAAA/C,GACAmC,GAAA,CACAnB,OAAA,WACAkB,IAAA,EAAAnjB,IAEAhV,MAAAsK,EACAytB,UAAAztB,EACA0tB,QAAA1tB,EACA2tB,aAAA,WACAe,GAAA5C,QACAgC,GAAAL,UAAAkB,IAEAf,WAAA,WACA,IAAAh+B,EAAA,EAAA8+B,GACAb,IAAAj+B,EAAA,IAAA8a,GAAA9a,IACAk+B,GAAAL,UAAAK,GAAAJ,QAAAI,GAAAp4B,MAAAsK,IAGA,SAAA2uB,KACA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAMA,SAAAC,EAAAC,EAAAC,GAEAA,IAAApkB,GAAA,EAAAL,GAAA,EACA,IAAA0kB,GAFAF,GAAAnkB,IAEA+jB,EAAAO,EAAAD,GAAA,OAAAE,EAAAD,EAAAD,EAAAG,EAAArgD,KAAA6iC,IAAAod,GAAAK,EAAAtgD,KAAAw8B,IAAAyjB,GAAAx4C,EAAAq4C,EAAAQ,EAAA1iB,EAAAiiB,EAAAQ,EAAA54C,EAAAzH,KAAA6iC,IAAAud,GAAAzzB,EAAAllB,EAAA04C,EAAAngD,KAAAw8B,IAAA4jB,GACAZ,GAAA58C,IAAA5C,KAAAsjC,MAAA3W,EAAAiR,IACAgiB,EAAAI,EAAAH,EAAAQ,EAAAP,EAAAQ,EAVA1B,GAAAp4B,MAAA,SAAAw5B,EAAAC,GACArB,GAAAp4B,MAAAu5B,EACAH,GAAAF,EAAAM,GAAAnkB,GAAAgkB,EAAA7/C,KAAA6iC,IAAAod,GAAAN,EAAAM,GAAApkB,GAAA,EAAAL,GAAA,GACAskB,EAAA9/C,KAAAw8B,IAAAyjB,IASArB,GAAAJ,QAAA,WACAuB,EAAAL,EAAAC,IAGA,SAAAY,GAAAC,GACA,IAAAR,EAAAQ,EAAA,GAAAP,EAAAO,EAAA,GAAAH,EAAArgD,KAAA6iC,IAAAod,GACA,OAAAI,EAAArgD,KAAA6iC,IAAAmd,GAAAK,EAAArgD,KAAAw8B,IAAAwjB,GAAAhgD,KAAAw8B,IAAAyjB,IAEA,SAAAQ,GAAAr2C,EAAAwT,GACA,OAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAEA,SAAA8iC,GAAAt2C,EAAAwT,GACA,OAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,IAEA,SAAA+iC,GAAAv2C,EAAAwT,GACAxT,EAAA,IAAAwT,EAAA,GACAxT,EAAA,IAAAwT,EAAA,GACAxT,EAAA,IAAAwT,EAAA,GAEA,SAAAgjC,GAAAC,EAAAp5C,GACA,OAAAo5C,EAAA,GAAAp5C,EAAAo5C,EAAA,GAAAp5C,EAAAo5C,EAAA,GAAAp5C,GAEA,SAAAq5C,GAAAzlD,GACA,IAAAL,EAAAgF,KAAAgtB,KAAA3xB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAL,EACAK,EAAA,IAAAL,EACAK,EAAA,IAAAL,EAEA,SAAA+lD,GAAAC,GACA,OAAAhhD,KAAAsjC,MAAA0d,EAAA,GAAAA,EAAA,IAAA7kB,GAAA6kB,EAAA,KAEA,SAAAC,GAAA72C,EAAAwT,GACA,OAAA3d,EAAAmK,EAAA,GAAAwT,EAAA,IAAA0d,IAAAr7B,EAAAmK,EAAA,GAAAwT,EAAA,IAAA0d,GAEAn+B,EAAAwnB,IAAAu8B,OAAA,WACA,IAAAtB,EAAAuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5kB,EAAA6kB,EAAAC,EAAAhwC,EACAiwC,EAAA,CACAn7B,QACA+3B,YACAC,UACAC,aAAA,WACAkD,EAAAn7B,MAAAo7B,EACAD,EAAApD,UAAAsD,EACAF,EAAAnD,QAAAsD,EACAL,EAAA,EACA7C,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAiD,EAAAn7B,QACAm7B,EAAApD,YACAoD,EAAAnD,UACAgB,GAAA,GAAAI,IAAAwB,EAAA,KAAAD,IAAAE,EAAA,KAAsEI,EAAAnmB,GAAA+lB,EAAA,GAA6BI,GAAAnmB,KAAA6lB,GAAA,IACnGzvC,EAAA,GAAAkuC,EAAAluC,EAAA,GAAA0vC,IAGA,SAAA56B,EAAAw5B,EAAAC,GACAyB,EAAA9iD,KAAA8S,EAAA,CAAAkuC,EAAAI,EAAAoB,EAAApB,IACAC,EAAAkB,MAAAlB,GACAA,EAAAoB,MAAApB,GAEA,SAAA8B,EAAA/B,EAAAC,GACA,IAAApjD,EAAA0jD,GAAA,CAAAP,EAAAnkB,GAAAokB,EAAApkB,KACA,GAAAe,EAAA,CACA,IAAAolB,EAAAtB,GAAA9jB,EAAA//B,GAAAolD,EAAAvB,GAAA,CAAAsB,EAAA,IAAAA,EAAA,MAAAA,GACAlB,GAAAmB,GACAA,EAAAlB,GAAAkB,GACA,IAAA/B,EAAAF,EAAAsB,EAAAxkD,EAAAojD,EAAA,OAAAgC,EAAAD,EAAA,GAAAnmB,GAAAh/B,EAAAqlD,EAAAliD,EAAAigD,GAAA,IACA,GAAAiC,GAAArlD,EAAAwkD,EAAAY,KAAAplD,EAAAkjD,IACAoC,EAAAH,EAAA,GAAAnmB,IACAulB,MAAAe,QACS,GAAAD,GAAArlD,EAAAwkD,GAAAY,KAAA,eAAAA,EAAAplD,EAAAkjD,GAAA,CACT,IAAAoC,MAAAH,EAAA,GAAAnmB,IACAqlB,MAAAiB,QAEAnC,EAAAkB,MAAAlB,GACAA,EAAAoB,MAAApB,GAEAkC,EACAnC,EAAAsB,EACA7jC,EAAAmiC,EAAAI,GAAAviC,EAAAmiC,EAAAwB,OAAApB,GAEAviC,EAAAuiC,EAAAoB,GAAA3jC,EAAAmiC,EAAAwB,KAAAxB,EAAAI,GAGAoB,GAAAxB,GACAI,EAAAJ,MAAAI,GACAA,EAAAoB,MAAApB,IAEAA,EAAAsB,EACA7jC,EAAAmiC,EAAAI,GAAAviC,EAAAmiC,EAAAwB,OAAApB,GAEAviC,EAAAuiC,EAAAoB,GAAA3jC,EAAAmiC,EAAAwB,KAAAxB,EAAAI,QAKAx5B,EAAAw5B,EAAAC,GAEArjB,EAAA//B,EAAAykD,EAAAtB,EAEA,SAAAzB,IACAoD,EAAAn7B,MAAAu7B,EAEA,SAAAvD,IACA9sC,EAAA,GAAAkuC,EAAAluC,EAAA,GAAA0vC,EACAO,EAAAn7B,QACAoW,EAAA,KAEA,SAAAglB,EAAA5B,EAAAC,GACA,GAAArjB,EAAA,CACA,IAAAsjB,EAAAF,EAAAsB,EACAG,GAAAxhD,EAAAigD,GAAA,IAAAA,KAAA,YAAAA,OACOqB,EAAAvB,EAAAwB,EAAAvB,EACPrB,GAAAp4B,MAAAw5B,EAAAC,GACA8B,EAAA/B,EAAAC,GAEA,SAAA4B,IACAjD,GAAAL,YAEA,SAAAuD,IACAF,EAAAL,EAAAC,GACA5C,GAAAJ,UACAv+C,EAAAwhD,GAAAnmB,KAAAskB,IAAAwB,EAAA,MACA1vC,EAAA,GAAAkuC,EAAAluC,EAAA,GAAA0vC,EACAxkB,EAAA,KAEA,SAAAnf,EAAAmiC,EAAAwB,GACA,OAAAA,GAAAxB,GAAA,EAAAwB,EAAA,IAAAA,EAEA,SAAAiB,EAAAj4C,EAAAwT,GACA,OAAAxT,EAAA,GAAAwT,EAAA,GAEA,SAAA0kC,EAAAx+C,EAAA4N,GACA,OAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA5N,MAAA4N,EAAA,GAAA5N,EAAA4N,EAAA,IAAAA,EAAA,GAAA5N,EAEA,gBAAAu5C,GAKA,GAJAgE,EAAAD,IAAAxB,EAAAuB,EAAAliC,KACAyiC,EAAA,GACAvkD,EAAAwnB,IAAAu4B,OAAAG,EAAAsE,GACAnlD,EAAAklD,EAAAtiD,OACA,CACAsiD,EAAAr2C,KAAAg3C,GACA,QAAAtnD,EAAA,EAAAwzB,EAAA,CAAAnkB,EAAAs3C,EAAA,IAAyD3mD,EAAAyB,IAAOzB,EAEhEunD,GADA1kC,EAAA8jC,EAAA3mD,IACA,GAAAqP,IAAAk4C,EAAA1kC,EAAA,GAAAxT,IACAqT,EAAArT,EAAA,GAAAwT,EAAA,IAAAH,EAAArT,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAwT,EAAA,IACAH,EAAAG,EAAA,GAAAxT,EAAA,IAAAqT,EAAArT,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAwT,EAAA,KAEA2Q,EAAA3vB,KAAAwL,EAAAwT,GAIA,IADA,IAAAsiC,EACA1jD,EAAAohB,EADA2kC,GAAAtjC,IACA7U,GAAArP,EAAA,EAAAwzB,EAAA/xB,EAAA+xB,EAAAnvB,OAAA,IAAgErE,GAAAyB,EAAQ4N,EAAAwT,IAAA7iB,EACxE6iB,EAAA2Q,EAAAxzB,IACAmlD,EAAAziC,EAAArT,EAAA,GAAAwT,EAAA,KAAA2kC,MAAArC,EAAAN,EAAAhiC,EAAA,GAAAwjC,EAAAh3C,EAAA,IAIA,OADAs3C,EAAAhwC,EAAA,KACAkuC,IAAA3gC,KAAAkiC,IAAAliC,IAAA,EAAA8M,SAAA,CAAAA,UAAA,EAAA6zB,EAAAuB,GAAA,CAAAC,EAAAC,KA7HA,GAgIAlkD,EAAAwnB,IAAA9H,SAAA,SAAApgB,GACAoiD,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,EACApiD,EAAAwnB,IAAAu4B,OAAAzgD,EAAA+lD,IACA,IAAA1+C,EAAAu7C,GAAAt7C,EAAAu7C,GAAAtrC,EAAAurC,GAAApkD,EAAA2I,IAAAC,IAAAiQ,IACA,OAAA7Y,EAAAogC,KACAz3B,EAAAo7C,GAAAn7C,EAAAo7C,GAAAnrC,EAAAorC,GACAN,GAAAxjB,KAAAx3B,EAAAi7C,GAAAh7C,EAAAi7C,GAAAhrC,EAAAirC,KACA9jD,EAAA2I,IAAAC,IAAAiQ,KACAunB,IAAA,CAAAxP,SAEA,CAAA/rB,KAAAsjC,MAAAv/B,EAAAD,GAAAg4B,GAAAK,GAAAnoB,EAAAhU,KAAAgtB,KAAA7xB,IAAA2gC,KAGA,IAAA0mB,GAAA,CACA/E,OAAA3sB,EACAtK,MAAAi8B,GACAlE,UAAAmE,GACAlE,QAAAmE,GACAlE,aAAA,WACA+D,GAAAjE,UAAAqE,IAEAlE,WAAA,WACA8D,GAAAjE,UAAAmE,KAGA,SAAAD,GAAAzC,EAAAC,GACAD,GAAAnkB,GACA,IAAAwkB,EAAArgD,KAAA6iC,IAAAod,GAAApkB,IACAgnB,GAAAxC,EAAArgD,KAAA6iC,IAAAmd,GAAAK,EAAArgD,KAAAw8B,IAAAwjB,GAAAhgD,KAAAw8B,IAAAyjB,IAEA,SAAA4C,GAAA/+C,EAAAC,EAAAiQ,GAEA+qC,KAAAj7C,EAAAi7C,MADAF,GAEAG,KAAAj7C,EAAAi7C,IAAAH,GACAI,KAAAjrC,EAAAirC,IAAAJ,GAEA,SAAA6D,KACA,IAAA16B,EAAA3O,EAAAypC,EAUA,SAAA/C,EAAAC,EAAAC,GACAD,GAAAnkB,GACA,IAAAwkB,EAAArgD,KAAA6iC,IAAAod,GAAApkB,IAAA/3B,EAAAu8C,EAAArgD,KAAA6iC,IAAAmd,GAAAj8C,EAAAs8C,EAAArgD,KAAAw8B,IAAAwjB,GAAAhsC,EAAAhU,KAAAw8B,IAAAyjB,GAAAv1C,EAAA1K,KAAAsjC,MAAAtjC,KAAAgtB,MAAAtiB,EAAA2O,EAAArF,EAAA8uC,EAAA/+C,GAAA2G,KAAAo4C,EAAAh/C,EAAAkkB,EAAAhU,GAAAtJ,KAAAsd,EAAAjkB,EAAAsV,EAAAvV,GAAA4G,GAAAsd,EAAAlkB,EAAAuV,EAAAtV,EAAA++C,EAAA9uC,GACA8qC,IAAAp0C,EACAw0C,IAAAx0C,GAAAsd,KAAAlkB,IACAq7C,IAAAz0C,GAAA2O,KAAAtV,IACAq7C,IAAA10C,GAAAo4C,KAAA9uC,IACA6uC,GAAA76B,EAAA3O,EAAAypC,GAhBAN,GAAAh8B,MAAA,SAAAw5B,EAAAC,GACAD,GAAAnkB,GACA,IAAAwkB,EAAArgD,KAAA6iC,IAAAod,GAAApkB,IACA7T,EAAAq4B,EAAArgD,KAAA6iC,IAAAmd,GACA3mC,EAAAgnC,EAAArgD,KAAAw8B,IAAAwjB,GACA8C,EAAA9iD,KAAAw8B,IAAAyjB,GACAuC,GAAAh8B,MAAAu5B,EACA8C,GAAA76B,EAAA3O,EAAAypC,IAYA,SAAAH,KACAH,GAAAh8B,MAAAi8B,GAEA,SAAAG,KACA,IAAAlD,EAAAC,EAAA33B,EAAA3O,EAAAypC,EAgBA,SAAA/C,EAAAC,EAAAC,GACAD,GAAAnkB,GACA,IAAAwkB,EAAArgD,KAAA6iC,IAAAod,GAAApkB,IAAA/3B,EAAAu8C,EAAArgD,KAAA6iC,IAAAmd,GAAAj8C,EAAAs8C,EAAArgD,KAAAw8B,IAAAwjB,GAAAhsC,EAAAhU,KAAAw8B,IAAAyjB,GAAA9hC,EAAA9E,EAAArF,EAAA8uC,EAAA/+C,EAAAqa,EAAA0kC,EAAAh/C,EAAAkkB,EAAAhU,EAAA+uC,EAAA/6B,EAAAjkB,EAAAsV,EAAAvV,EAAA3I,EAAA6E,KAAAgtB,KAAA7O,IAAAC,IAAA2kC,KAAAnlB,EAAA5V,EAAAlkB,EAAAuV,EAAAtV,EAAA++C,EAAA9uC,EAAA2Y,EAAAxxB,IAAA8gC,GAAA2B,GAAAziC,EAAAuP,EAAA1K,KAAAsjC,MAAAnoC,EAAAyiC,GACAyhB,IAAA1yB,EAAAxO,EACAmhC,IAAA3yB,EAAAvO,EACAmhC,IAAA5yB,EAAAo2B,EACAjE,IAAAp0C,EACAw0C,IAAAx0C,GAAAsd,KAAAlkB,IACAq7C,IAAAz0C,GAAA2O,KAAAtV,IACAq7C,IAAA10C,GAAAo4C,KAAA9uC,IACA6uC,GAAA76B,EAAA3O,EAAAypC,GAzBAN,GAAAh8B,MAAA,SAAAw5B,EAAAC,GACAP,EAAAM,EAAAL,EAAAM,EACAuC,GAAAh8B,MAAAu5B,EACAC,GAAAnkB,GACA,IAAAwkB,EAAArgD,KAAA6iC,IAAAod,GAAApkB,IACA7T,EAAAq4B,EAAArgD,KAAA6iC,IAAAmd,GACA3mC,EAAAgnC,EAAArgD,KAAAw8B,IAAAwjB,GACA8C,EAAA9iD,KAAAw8B,IAAAyjB,GACA4C,GAAA76B,EAAA3O,EAAAypC,IAEAN,GAAAhE,QAAA,WACAuB,EAAAL,EAAAC,GACA6C,GAAAhE,QAAAmE,GACAH,GAAAh8B,MAAAi8B,IAeA,SAAAO,GAAA54C,EAAAwT,GACA,SAAAkG,EAAAhgB,EAAAC,GACA,OAAAD,EAAAsG,EAAAtG,EAAAC,GAAA6Z,EAAA9Z,EAAA,GAAAA,EAAA,IAKA,OAHAsG,EAAAk1B,QAAA1hB,EAAA0hB,SAAAxb,EAAAwb,OAAA,SAAAx7B,EAAAC,GACA,OAAAD,EAAA8Z,EAAA0hB,OAAAx7B,EAAAC,KAAAqG,EAAAk1B,OAAAx7B,EAAA,GAAAA,EAAA,MAEAggB,EAEA,SAAAm/B,KACA,SAEA,SAAAC,GAAAC,EAAAh3B,EAAAi3B,EAAArlC,EAAA9P,GACA,IAAAwsB,EAAA,GAAA4oB,EAAA,GAuBA,GAtBAF,EAAA1qC,QAAA,SAAA6qC,GACA,MAAA9mD,EAAA8mD,EAAAlkD,OAAA,QACA,IAAA5C,EAAAogC,EAAA0mB,EAAA,GAAAv1B,EAAAu1B,EAAA9mD,GACA,GAAAykD,GAAArkB,EAAA7O,GAAA,CACA9f,EAAAswC,YACA,QAAAxjD,EAAA,EAAuBA,EAAAyB,IAAOzB,EAAAkT,EAAAuY,OAAAoW,EAAA0mB,EAAAvoD,IAAA,GAAA6hC,EAAA,IAC9B3uB,EAAAuwC,cAHA,CAMA,IAAAp0C,EAAA,IAAAm5C,GAAA3mB,EAAA0mB,EAAA,SAAA1lC,EAAA,IAAA2lC,GAAA3mB,EAAA,KAAAxyB,GAAA,GACAA,EAAA5O,EAAAoiB,EACA6c,EAAA77B,KAAAwL,GACAi5C,EAAAzkD,KAAAgf,GACAxT,EAAA,IAAAm5C,GAAAx1B,EAAAu1B,EAAA,SACA1lC,EAAA,IAAA2lC,GAAAx1B,EAAA,KAAA3jB,GAAA,GACAA,EAAA5O,EAAAoiB,EACA6c,EAAA77B,KAAAwL,GACAi5C,EAAAzkD,KAAAgf,OAEAylC,EAAAh4C,KAAA8gB,GACAq3B,GAAA/oB,GACA+oB,GAAAH,GACA5oB,EAAAr7B,OAAA,CACA,QAAArE,EAAA,EAAA0oD,EAAAL,EAAA5mD,EAAA6mD,EAAAjkD,OAA6DrE,EAAAyB,IAAOzB,EACpEsoD,EAAAtoD,GAAA0D,EAAAglD,KAGA,IADA,IAAA5+C,EAAA2hB,EAAAnH,EAAAob,EAAA,KACA,CAEA,IADA,IAAAp0B,EAAAgZ,EAAAqkC,GAAA,EACAr9C,EAAAsmB,GAAA,IAAAtmB,IAAA7J,KAAA6iB,EAAA,OACAxa,EAAAwB,EAAA2N,EACA/F,EAAAswC,YACA,GAEA,GADAl4C,EAAAsmB,EAAAtmB,EAAA7K,EAAAmxB,GAAA,EACAtmB,EAAA5H,EAAA,CACA,GAAAilD,EACA,IAAA3oD,EAAA,EAAAyB,EAAAqI,EAAAzF,OAA8CrE,EAAAyB,IAAOzB,EAAAkT,EAAAuY,SAAA3hB,EAAA9J,IAAA,GAAAyrB,EAAA,SAErDzI,EAAA1X,EAAAvC,EAAAuC,EAAA7J,EAAAsH,EAAA,EAAAmK,GAEA5H,IAAA7J,MACS,CACT,GAAAknD,EAEA,IAAA3oD,GADA8J,EAAAwB,EAAAxJ,EAAAmX,GACA5U,OAAA,EAA2CrE,GAAA,IAAQA,EAAAkT,EAAAuY,SAAA3hB,EAAA9J,IAAA,GAAAyrB,EAAA,SAEnDzI,EAAA1X,EAAAvC,EAAAuC,EAAAxJ,EAAAiH,GAAA,EAAAmK,GAEA5H,IAAAxJ,EAGAgI,GADAwB,IAAA7K,GACAwY,EACA0vC,YACOr9C,EAAAsmB,GACP1e,EAAAuwC,YAGA,SAAAgF,GAAA34B,GACA,GAAAruB,EAAAquB,EAAAzrB,OAAA,CAEA,IADA,IAAA5C,EAAAohB,EAAA7iB,EAAA,EAAAqP,EAAAygB,EAAA,KACA9vB,EAAAyB,GACA4N,EAAA5N,EAAAohB,EAAAiN,EAAA9vB,GACA6iB,EAAA/gB,EAAAuN,EACAA,EAAAwT,EAEAxT,EAAA5N,EAAAohB,EAAAiN,EAAA,GACAjN,EAAA/gB,EAAAuN,GAEA,SAAAm5C,GAAA/8B,EAAA3hB,EAAA8+C,EAAAF,GACA9hD,KAAAmC,EAAA0iB,EACA7kB,KAAAqS,EAAAnP,EACAlD,KAAAnG,EAAAmoD,EACAhiD,KAAAlD,EAAAglD,EACA9hD,KAAAgrB,GAAA,EACAhrB,KAAAnF,EAAAmF,KAAA9E,EAAA,KAEA,SAAA+mD,GAAAC,EAAAC,EAAA/lC,EAAAgmC,GACA,gBAAAC,EAAA/1C,GACA,IAsDAk1C,EAtDA7iC,EAAAwjC,EAAA71C,GAAAg2C,EAAAD,EAAA1kB,OAAAykB,EAAA,GAAAA,EAAA,IACAV,EAAA,CACA78B,QACA+3B,YACAC,UACAC,aAAA,WACA4E,EAAA78B,MAAA09B,EACAb,EAAA9E,UAAAsD,EACAwB,EAAA7E,QAAAsD,EACAqB,EAAA,GACAgB,EAAA,IAEAzF,WAAA,WACA2E,EAAA78B,QACA68B,EAAA9E,YACA8E,EAAA7E,UACA2E,EAAAhmD,EAAAkxB,MAAA80B,GACA,IAAAC,EAuKA,SAAA58B,EAAA29B,GACA,IAAAC,EAAA59B,EAAA,GAAA69B,EAAA79B,EAAA,GAAA89B,EAAA,CAAAtkD,KAAAw8B,IAAA4nB,IAAApkD,KAAA6iC,IAAAuhB,GAAA,GAAAG,EAAA,EAAAC,EAAA,EACAhF,GAAA5C,QACA,QAAA7hD,EAAA,EAAAyB,EAAA2nD,EAAA/kD,OAAuCrE,EAAAyB,IAAOzB,EAAA,CAC9C,IAAA0pD,EAAAN,EAAAppD,GAAAI,EAAAspD,EAAArlD,OACA,GAAAjE,EAEA,IADA,IAAAupD,EAAAD,EAAA,GAAA7E,EAAA8E,EAAA,GAAAvD,EAAAuD,EAAA,KAAAlpB,GAAA,EAAAskB,EAAA9/C,KAAAw8B,IAAA2kB,GAAAtB,EAAA7/C,KAAA6iC,IAAAse,GAAAp8C,EAAA,IACA,CACAA,IAAA5J,IAAA4J,EAAA,GAEA,IAAAi7C,GADAx5B,EAAAi+B,EAAA1/C,IACA,GAAAk7C,EAAAz5B,EAAA,KAAAgV,GAAA,EAAA8kB,EAAAtgD,KAAAw8B,IAAAyjB,GAAAI,EAAArgD,KAAA6iC,IAAAod,GAAAC,EAAAF,EAAAJ,EAAAO,EAAAD,GAAA,OAAAE,EAAAD,EAAAD,EAAAiC,EAAA/B,EAAA5kB,GAAA/zB,EAAAq4C,EAAAQ,EAGA,GAFAd,GAAA58C,IAAA5C,KAAAsjC,MAAA77B,EAAA04C,EAAAngD,KAAAw8B,IAAA4jB,GAAAP,EAAAQ,EAAA54C,EAAAzH,KAAA6iC,IAAAud,KACAmE,GAAApC,EAAAjC,EAAAC,EAAAzkB,GAAAwkB,EACAiC,EAAAvC,GAAAwE,EAAApE,GAAAoE,EAAA,CACA,IAAAtoC,EAAA4kC,GAAAH,GAAAmE,GAAAnE,GAAA/5B,IACAs6B,GAAAhlC,GACA,IAAA6oC,EAAAjE,GAAA4D,EAAAxoC,GACAglC,GAAA6D,GACA,IAAAC,GAAAzC,EAAAjC,GAAA,QAAA/jB,GAAAwoB,EAAA,KACAN,EAAAO,GAAAP,IAAAO,IAAA9oC,EAAA,IAAAA,EAAA,OACA0oC,GAAArC,EAAAjC,GAAA,QAGA,IAAAn7C,IAAA,MACA66C,EAAAI,EAAAF,EAAAQ,EAAAT,EAAAQ,EAAAqE,EAAAl+B,GAGA,OAAA+9B,GAAAjpB,IAAAipB,EAAAjpB,IAAAkkB,GAAA,KAAAgF,EAlMAK,CAAAZ,EAAAE,GACAhB,EAAA/jD,QACA0lD,IAAA72C,EAAAwwC,eAAAqG,GAAA,GACA5B,GAAAC,EAAA4B,GAAA3B,EAAArlC,EAAA9P,IACWm1C,IACX0B,IAAA72C,EAAAwwC,eAAAqG,GAAA,GACA72C,EAAAswC,YACAxgC,EAAA,YAAA9P,GACAA,EAAAuwC,WAEAsG,IAAA72C,EAAAywC,aAAAoG,GAAA,GACA3B,EAAAgB,EAAA,MAEA1G,OAAA,WACAxvC,EAAAwwC,eACAxwC,EAAAswC,YACAxgC,EAAA,YAAA9P,GACAA,EAAAuwC,UACAvwC,EAAAywC,eAGA,SAAAl4B,EAAAw5B,EAAAC,GACA,IAAAz5B,EAAAw9B,EAAAhE,EAAAC,GACA4D,EAAA7D,EAAAx5B,EAAA,GAAAy5B,EAAAz5B,EAAA,KAAAvY,EAAAuY,MAAAw5B,EAAAC,GAEA,SAAA+E,EAAAhF,EAAAC,GACA,IAAAz5B,EAAAw9B,EAAAhE,EAAAC,GACA3/B,EAAAkG,QAAA,GAAAA,EAAA,IAEA,SAAA+3B,IACA8E,EAAA78B,MAAAw+B,EACA1kC,EAAAi+B,YAEA,SAAAC,IACA6E,EAAA78B,QACAlG,EAAAk+B,UAGA,IAAA2F,EAAAM,EAAAQ,EAAAC,KAAAC,EAAArB,EAAAmB,GAAAH,GAAA,EACA,SAAAZ,EAAAlE,EAAAC,GACAwE,EAAA7lD,KAAA,CAAAohD,EAAAC,IACA,IAAAz5B,EAAAw9B,EAAAhE,EAAAC,GACAkF,EAAA3+B,QAAA,GAAAA,EAAA,IAEA,SAAAq7B,IACAsD,EAAA5G,YACAkG,EAAA,GAEA,SAAA3C,IACAoC,EAAAO,EAAA,MAAAA,EAAA,OACAU,EAAA3G,UACA,IAAA8E,EAAA8B,EAAAD,EAAAC,QAAAC,EAAAJ,WAAAzoD,EAAA6oD,EAAAjmD,OAIA,GAHAqlD,EAAAa,MACAnB,EAAAvlD,KAAA6lD,GACAA,EAAA,KACAjoD,EACA,KAAA4oD,EAAA,CAEA,IAAA5+B,EAAAzrB,GAAA,EACA,IADAyB,GADA8mD,EAAA+B,EAAA,IACAjmD,OAAA,GACA,GAGA,IAFA0lD,IAAA72C,EAAAwwC,eAAAqG,GAAA,GACA72C,EAAAswC,cACAxjD,EAAAyB,GAAAyR,EAAAuY,SAAA88B,EAAAvoD,IAAA,GAAAyrB,EAAA,IACAvY,EAAAuwC,gBAIAhiD,EAAA,KAAA4oD,GAAAC,EAAAzmD,KAAAymD,EAAAC,MAAA5sC,OAAA2sC,EAAAE,UACApC,EAAAvkD,KAAAymD,EAAAhjD,OAAAmjD,KAEA,OAAAnC,GAGA,SAAAmC,GAAAlC,GACA,OAAAA,EAAAlkD,OAAA,EAEA,SAAA8lD,KACA,IAAA5kC,EAAApO,EAAA,GACA,OACAqsC,UAAA,WACArsC,EAAAtT,KAAA0hB,EAAA,KAEAkG,MAAA,SAAAw5B,EAAAC,GACA3/B,EAAA1hB,KAAA,CAAAohD,EAAAC,KAEAzB,QAAA1tB,EACAm0B,OAAA,WACA,IAAAA,EAAA/yC,EAGA,OAFAA,EAAA,GACAoO,EAAA,KACA2kC,GAEAQ,OAAA,WACAvzC,EAAA9S,OAAA,GAAA8S,EAAAtT,KAAAsT,EAAAozC,MAAA5sC,OAAAxG,EAAAqzC,YAIA,SAAAR,GAAA36C,EAAAwT,GACA,QAAAxT,IAAAtG,GAAA,KAAAsG,EAAA,GAAAwxB,GAAAN,GAAAM,GAAAxxB,EAAA,MAAAwT,IAAA9Z,GAAA,KAAA8Z,EAAA,GAAAge,GAAAN,GAAAM,GAAAhe,EAAA,IAEA,IAAA8nC,GAAA9B,GAAAX,GACA,SAAAh1C,GACA,IAAAm3C,EAAAxF,EAAA7zB,IAAAo1B,EAAAp1B,IAAA45B,EAAA55B,IACA,OACAwyB,UAAA,WACAtwC,EAAAswC,YACA6G,EAAA,GAEA5+B,MAAA,SAAA46B,EAAAC,GACA,IAAAuE,EAAAxE,EAAA,EAAA5lB,OAAA0kB,EAAAjgD,EAAAmhD,EAAAxB,GACA3/C,EAAAigD,EAAA1kB,IAAAF,IACArtB,EAAAuY,MAAAo5B,EAAAuB,KAAAE,GAAA,IAAAzlB,QACA3tB,EAAAuY,MAAAm/B,EAAAxE,GACAlzC,EAAAuwC,UACAvwC,EAAAswC,YACAtwC,EAAAuY,MAAAo/B,EAAAzE,GACAlzC,EAAAuY,MAAA46B,EAAAD,GACAiE,EAAA,GACSO,IAAAC,GAAA1F,GAAA1kB,KACTv7B,EAAA2/C,EAAA+F,GAAArqB,KAAAskB,GAAA+F,EAAArqB,IACAr7B,EAAAmhD,EAAAwE,GAAAtqB,KAAA8lB,GAAAwE,EAAAtqB,IACA6lB,EAmBA,SAAAvB,EAAAuB,EAAAC,EAAAC,GACA,IAAAxB,EAAAgG,EAAAC,EAAA9lD,KAAAw8B,IAAAojB,EAAAwB,GACA,OAAAnhD,EAAA6lD,GAAAxqB,GAAAt7B,KAAA+lD,MAAA/lD,KAAAw8B,IAAA2kB,IAAA0E,EAAA7lD,KAAA6iC,IAAAwe,IAAArhD,KAAAw8B,IAAA4kB,GAAAphD,KAAAw8B,IAAA6kB,IAAAxB,EAAA7/C,KAAA6iC,IAAAse,IAAAnhD,KAAAw8B,IAAAojB,KAAAC,EAAAgG,EAAAC,KAAA3E,EAAAE,GAAA,EArBA2E,CAAApG,EAAAuB,EAAAC,EAAAC,GACApzC,EAAAuY,MAAAm/B,EAAAxE,GACAlzC,EAAAuwC,UACAvwC,EAAAswC,YACAtwC,EAAAuY,MAAAo/B,EAAAzE,GACAiE,EAAA,GAEAn3C,EAAAuY,MAAAo5B,EAAAwB,EAAAD,EAAAE,GACAsE,EAAAC,GAEApH,QAAA,WACAvwC,EAAAuwC,UACAoB,EAAAuB,EAAAp1B,KAEAq5B,MAAA,WACA,SAAAA,KAQA,SAAAa,EAAAC,EAAAC,EAAAl4C,GACA,IAAAgyC,EACA,SAAAgG,EACAhG,EAAAkG,EAAAvqB,GACA3tB,EAAAuY,OAAAgV,GAAAykB,GACAhyC,EAAAuY,MAAA,EAAAy5B,GACAhyC,EAAAuY,MAAAgV,GAAAykB,GACAhyC,EAAAuY,MAAAgV,GAAA,GACAvtB,EAAAuY,MAAAgV,IAAAykB,GACAhyC,EAAAuY,MAAA,GAAAy5B,GACAhyC,EAAAuY,OAAAgV,IAAAykB,GACAhyC,EAAAuY,OAAAgV,GAAA,GACAvtB,EAAAuY,OAAAgV,GAAAykB,QACK,GAAAhgD,EAAAgmD,EAAA,GAAAC,EAAA,IAAA5qB,GAAA,CACL,IAAAx+B,EAAAmpD,EAAA,GAAAC,EAAA,GAAA1qB,OACAykB,EAAAkG,EAAArpD,EAAA,EACAmR,EAAAuY,OAAA1pB,EAAAmjD,GACAhyC,EAAAuY,MAAA,EAAAy5B,GACAhyC,EAAAuY,MAAA1pB,EAAAmjD,QAEAhyC,EAAAuY,MAAA0/B,EAAA,GAAAA,EAAA,KAhEA,EAAA1qB,OAAA,IAgMA,SAAA4qB,GAAAp+B,EAAA3O,EAAA8kB,EAAAC,GACA,gBAAA9d,GACA,IAAAzkB,EAAAuO,EAAAkW,EAAAlW,EAAAwT,EAAA0C,EAAA1C,EAAAyoC,EAAAj8C,EAAAtG,EAAAwiD,EAAAl8C,EAAArG,EAAA4tC,EAAA,EAAAC,EAAA,EAAA3W,EAAArd,EAAA9Z,EAAAuiD,EAAAnrB,EAAAtd,EAAA7Z,EAAAuiD,EAEA,GADAzqD,EAAAmsB,EAAAq+B,EACAprB,KAAAp/B,EAAA,IAEA,GADAA,GAAAo/B,EACAA,EAAA,GACA,GAAAp/B,EAAA81C,EAAA,OACA91C,EAAA+1C,MAAA/1C,QACO,GAAAo/B,EAAA,GACP,GAAAp/B,EAAA+1C,EAAA,OACA/1C,EAAA81C,MAAA91C,GAGA,GADAA,EAAAsiC,EAAAkoB,EACAprB,KAAAp/B,EAAA,IAEA,GADAA,GAAAo/B,EACAA,EAAA,GACA,GAAAp/B,EAAA+1C,EAAA,OACA/1C,EAAA81C,MAAA91C,QACO,GAAAo/B,EAAA,GACP,GAAAp/B,EAAA81C,EAAA,OACA91C,EAAA+1C,MAAA/1C,GAGA,GADAA,EAAAwd,EAAAitC,EACAprB,KAAAr/B,EAAA,IAEA,GADAA,GAAAq/B,EACAA,EAAA,GACA,GAAAr/B,EAAA81C,EAAA,OACA91C,EAAA+1C,MAAA/1C,QACO,GAAAq/B,EAAA,GACP,GAAAr/B,EAAA+1C,EAAA,OACA/1C,EAAA81C,MAAA91C,GAGA,GADAA,EAAAuiC,EAAAkoB,EACAprB,KAAAr/B,EAAA,IAEA,GADAA,GAAAq/B,EACAA,EAAA,GACA,GAAAr/B,EAAA+1C,EAAA,OACA/1C,EAAA81C,MAAA91C,QACO,GAAAq/B,EAAA,GACP,GAAAr/B,EAAA81C,EAAA,OACA91C,EAAA+1C,MAAA/1C,GAUA,OARA81C,EAAA,IAAArxB,EAAAlW,EAAA,CACAtG,EAAAuiD,EAAA1U,EAAA1W,EACAl3B,EAAAuiD,EAAA3U,EAAAzW,IAEA0W,EAAA,IAAAtxB,EAAA1C,EAAA,CACA9Z,EAAAuiD,EAAAzU,EAAA3W,EACAl3B,EAAAuiD,EAAA1U,EAAA1W,IAEA5a,OAGA,IAAAimC,GAAA,IAkBA,SAAAC,GAAAx+B,EAAA3O,EAAA8kB,EAAAC,GACA,gBAAAnwB,GACA,IAAAk1C,EAAAgB,EAAAM,EA6DAgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3B,EA7DA4B,EAAA/4C,EAAAg5C,EAAA/B,KAAApB,EAAAsC,GAAAp+B,EAAA3O,EAAA8kB,EAAAC,GACAilB,EAAA,CACA78B,QACA+3B,UA2DA,WACA8E,EAAA78B,MAAAu7B,EACAoC,KAAAvlD,KAAA6lD,EAAA,IACAsC,GAAA,EACAD,GAAA,EACAF,EAAAC,EAAA96B,KA/DAyyB,QAiEA,WACA2E,IACApB,EAAA0E,EAAAC,GACAC,GAAAG,GAAAG,EAAAxB,SACAtC,EAAAvkD,KAAAqoD,EAAAhC,WAEA5B,EAAA78B,QACAsgC,GAAA74C,EAAAuwC,WAvEAC,aAAA,WACAxwC,EAAAg5C,EACA9D,EAAA,GACAgB,EAAA,GACAiB,GAAA,GAEA1G,WAAA,WACAzwC,EAAA+4C,EACA7D,EAAAhmD,EAAAkxB,MAAA80B,GACA,IAAAC,EAgBA,SAAAvmD,GAEA,IADA,IAAAqqD,EAAA,EAAA1qD,EAAA2nD,EAAA/kD,OAAA2E,EAAAlH,EAAA,GACA9B,EAAA,EAAuBA,EAAAyB,IAAOzB,EAC9B,QAAA6iB,EAAA7Y,EAAA,EAAA4nB,EAAAw3B,EAAAppD,GAAAI,EAAAwxB,EAAAvtB,OAAAgL,EAAAuiB,EAAA,GAAoE5nB,EAAA5J,IAAO4J,EAC3E6Y,EAAA+O,EAAA5nB,GACAqF,EAAA,IAAArG,EACA6Z,EAAA,GAAA7Z,GAAAi4B,GAAA5xB,EAAAwT,EAAA/gB,GAAA,KAAAqqD,EAEAtpC,EAAA,IAAA7Z,GAAAi4B,GAAA5xB,EAAAwT,EAAA/gB,GAAA,KAAAqqD,EAEA98C,EAAAwT,EAGA,WAAAspC,EA7BAC,CAAA,CAAAn/B,EAAAoW,IAAAgpB,EAAAhC,GAAAhC,EAAAiE,EAAAlE,EAAA/jD,QACAgoD,GAAAC,KACAp5C,EAAAwwC,eACA2I,IACAn5C,EAAAswC,YACAxgC,EAAA,YAAA9P,GACAA,EAAAuwC,WAEA6I,GACAnE,GAAAC,EAAAh3B,EAAAi3B,EAAArlC,EAAA9P,GAEAA,EAAAywC,cAEAyE,EAAAgB,EAAAM,EAAA,OAkBA,SAAA1mC,EAAAkoC,EAAAC,EAAAC,EAAAl4C,GACA,IAAA7D,EAAA,EAAAk9C,EAAA,EACA,SAAArB,IAAA77C,EAAAm9C,EAAAtB,EAAAE,OAAAmB,EAAAC,EAAArB,EAAAC,KAAAqB,EAAAvB,EAAAC,GAAA,EAAAC,EAAA,EACA,GACAl4C,EAAAuY,MAAA,IAAApc,GAAA,IAAAA,EAAA4d,EAAAmW,EAAA/zB,EAAA,EAAAg0B,EAAA/kB,UACWjP,KAAA+7C,EAAA,QAAAmB,QAEXr5C,EAAAuY,MAAA0/B,EAAA,GAAAA,EAAA,IAGA,SAAArC,EAAA//C,EAAAC,GACA,OAAAikB,GAAAlkB,MAAAq6B,GAAA9kB,GAAAtV,MAAAq6B,EAEA,SAAA5X,EAAA1iB,EAAAC,GACA8/C,EAAA//C,EAAAC,IAAAkK,EAAAuY,MAAA1iB,EAAAC,GAmBA,SAAAg+C,EAAAj+C,EAAAC,GAGA,IAAA4oB,EAAAk3B,EAFA//C,EAAA9D,KAAAiF,KAAAshD,GAAAvmD,KAAAqF,IAAAkhD,GAAAziD,IACAC,EAAA/D,KAAAiF,KAAAshD,GAAAvmD,KAAAqF,IAAAkhD,GAAAxiD,KAGA,GADAogD,GAAAM,EAAA7lD,KAAA,CAAAkF,EAAAC,IACAgjD,EACAN,EAAA3iD,EAAA4iD,EAAA3iD,EAAA4iD,EAAAh6B,EACAo6B,GAAA,EACAp6B,IACA1e,EAAAswC,YACAtwC,EAAAuY,MAAA1iB,EAAAC,SAGA,GAAA4oB,GAAAm6B,EAAA74C,EAAAuY,MAAA1iB,EAAAC,OAA4C,CAC5C,IAAA/I,EAAA,CACAoP,EAAA,CACAtG,EAAA8iD,EACA7iD,EAAA8iD,GAEAjpC,EAAA,CACA9Z,IACAC,MAGA+/C,EAAA9oD,IACA8rD,IACA74C,EAAAswC,YACAtwC,EAAAuY,MAAAxrB,EAAAoP,EAAAtG,EAAA9I,EAAAoP,EAAArG,IAEAkK,EAAAuY,MAAAxrB,EAAA4iB,EAAA9Z,EAAA9I,EAAA4iB,EAAA7Z,GACA4oB,GAAA1e,EAAAuwC,UACA4G,GAAA,GACaz4B,IACb1e,EAAAswC,YACAtwC,EAAAuY,MAAA1iB,EAAAC,GACAqhD,GAAA,GAIAwB,EAAA9iD,EAAA+iD,EAAA9iD,EAAA+iD,EAAAn6B,EAEA,OAAA02B,GAEA,SAAAkE,EAAA1qD,EAAAspD,GACA,OAAAlmD,EAAApD,EAAA,GAAAmrB,GAAAsT,GAAA6qB,EAAA,MAAAlmD,EAAApD,EAAA,GAAAshC,GAAA7C,GAAA6qB,EAAA,MAAAlmD,EAAApD,EAAA,GAAAwc,GAAAiiB,GAAA6qB,EAAA,MAAAA,EAAA,MAEA,SAAAh6B,EAAA/hB,EAAAwT,GACA,OAAA4pC,EAAAp9C,EAAAtG,EAAA8Z,EAAA9Z,GAEA,SAAA0jD,EAAAp9C,EAAAwT,GACA,IAAA6pC,EAAAF,EAAAn9C,EAAA,GAAAs9C,EAAAH,EAAA3pC,EAAA,GACA,OAAA6pC,IAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAA7pC,EAAA,GAAAxT,EAAA,OAAAq9C,EAAAr9C,EAAA,GAAAwT,EAAA,OAAA6pC,EAAAr9C,EAAA,GAAAwT,EAAA,GAAAA,EAAA,GAAAxT,EAAA,IAGA,SAAAu9C,GAAAC,GACA,IAAAzG,EAAA,EAAAE,EAAA7lB,GAAA,EAAArgC,EAAA0sD,GAAAD,GAAA/qD,EAAA1B,EAAAgmD,EAAAE,GAKA,OAJAxkD,EAAAirD,UAAA,SAAA3mD,GACA,OAAAC,UAAAhC,OACAjE,EAAAgmD,EAAAhgD,EAAA,GAAAq6B,GAAA,IAAA6lB,EAAAlgD,EAAA,GAAAq6B,GAAA,KADA,CAAA2lB,EAAA3lB,GAAA,IAAA6lB,EAAA7lB,GAAA,MAGA3+B,EAEA,SAAAkrD,GAAA5G,EAAAE,GACA,IAAAvB,EAAA9/C,KAAAw8B,IAAA2kB,GAAA3kD,GAAAsjD,EAAA9/C,KAAAw8B,IAAA6kB,IAAA,EAAA2G,EAAA,EAAAlI,GAAA,EAAAtjD,EAAAsjD,GAAAmI,EAAAjoD,KAAAgtB,KAAAg7B,GAAAxrD,EACA,SAAA0rD,EAAAlI,EAAAC,GACA,IAAAxjB,EAAAz8B,KAAAgtB,KAAAg7B,EAAA,EAAAxrD,EAAAwD,KAAAw8B,IAAAyjB,IAAAzjD,EACA,OAAAigC,EAAAz8B,KAAAw8B,IAAAwjB,GAAAxjD,GAAAyrD,EAAAxrB,EAAAz8B,KAAA6iC,IAAAmd,IAMA,OAJAkI,EAAA5oB,OAAA,SAAAx7B,EAAAC,GACA,IAAAokD,EAAAF,EAAAlkD,EACA,OAAA/D,KAAAsjC,MAAAx/B,EAAAqkD,GAAA3rD,EAAA2/B,IAAA6rB,GAAAlkD,IAAAqkD,KAAA3rD,MAAA,EAAAA,MAEA0rD,EAzKA/qD,EAAAwnB,IAAAyjC,WAAA,WACA,IAAApgC,EAAA3O,EAAA8kB,EAAAC,EAAA8e,EAAAmG,EAAA+E,EAAA,CACAlL,OAAA,SAAAmL,GAIA,OAHAnL,MAAAoL,OAAA,IACApL,EAAAmG,EAAAgF,IACAC,OAAA,EACApL,GAEAhqC,OAAA,SAAA/R,GACA,OAAAC,UAAAhC,QACAikD,EAAAmD,GAAAx+B,GAAA7mB,EAAA,MAAAkY,GAAAlY,EAAA,MAAAg9B,GAAAh9B,EAAA,MAAAi9B,GAAAj9B,EAAA,OACA+7C,MAAAoL,OAAA,EAAApL,EAAA,MACAkL,GAHA,EAAApgC,EAAA3O,GAAA,CAAA8kB,EAAAC,MAMA,OAAAgqB,EAAAl1C,OAAA,qBA4JA/V,EAAAwnB,IAAA4jC,eAAA,WACA,OAAAZ,GAAAI,MACGS,IAAAT,GACH5qD,EAAAwnB,IAAA8jC,OAAA,WACA,OAAAtrD,EAAAwnB,IAAA4jC,iBAAAvE,OAAA,QAAAhmB,OAAA,YAAA8pB,UAAA,aAAAz4C,MAAA,OAEAlS,EAAAwnB,IAAA+jC,UAAA,WACA,IAGAliC,EAIKmiC,EAAAC,EAAAC,EAPLC,EAAA3rD,EAAAwnB,IAAA8jC,SACAM,EAAA5rD,EAAAwnB,IAAA4jC,iBAAAvE,OAAA,SAAAhmB,OAAA,WAAA8pB,UAAA,SACAkB,EAAA7rD,EAAAwnB,IAAA4jC,iBAAAvE,OAAA,SAAAhmB,OAAA,WAAA8pB,UAAA,QACAmB,EAAA,CACAziC,MAAA,SAAA1iB,EAAAC,GACAyiB,EAAA,CAAA1iB,EAAAC,KAGA,SAAA2kD,EAAA/K,GACA,IAAA75C,EAAA65C,EAAA,GAAA55C,EAAA45C,EAAA,GAGA,OAFAn3B,EAAA,KACAmiC,EAAA7kD,EAAAC,GAAAyiB,IAAAoiC,EAAA9kD,EAAAC,GAAAyiB,IAAAqiC,EAAA/kD,EAAAC,GACAyiB,EA+DA,OA7DAkiC,EAAAppB,OAAA,SAAAqe,GACA,IAAAl2C,EAAAqhD,EAAAz5C,QAAApT,EAAA6sD,EAAAtpB,YAAA17B,GAAA65C,EAAA,GAAA1hD,EAAA,IAAAwL,EAAA1D,GAAA45C,EAAA,GAAA1hD,EAAA,IAAAwL,EACA,OAAA1D,GAAA,KAAAA,EAAA,MAAAD,IAAA,MAAAA,GAAA,KAAAilD,EAAAhlD,GAAA,MAAAA,EAAA,MAAAD,IAAA,MAAAA,GAAA,KAAAklD,EAAAF,GAAAxpB,OAAAqe,IAEA+K,EAAAxL,OAAA,SAAAA,GACA,IAAAgM,EAAAJ,EAAA5L,UAAAiM,EAAAJ,EAAA7L,UAAAkM,EAAAJ,EAAA9L,UACA,OACA12B,MAAA,SAAA1iB,EAAAC,GACAmlD,EAAA1iC,MAAA1iB,EAAAC,GACAolD,EAAA3iC,MAAA1iB,EAAAC,GACAqlD,EAAA5iC,MAAA1iB,EAAAC,IAEA05C,OAAA,WACAyL,EAAAzL,SACA0L,EAAA1L,SACA2L,EAAA3L,UAEAc,UAAA,WACA2K,EAAA3K,YACA4K,EAAA5K,YACA6K,EAAA7K,aAEAC,QAAA,WACA0K,EAAA1K,UACA2K,EAAA3K,UACA4K,EAAA5K,WAEAC,aAAA,WACAyK,EAAAzK,eACA0K,EAAA1K,eACA2K,EAAA3K,gBAEAC,WAAA,WACAwK,EAAAxK,aACAyK,EAAAzK,aACA0K,EAAA1K,gBAIAgK,EAAAroD,UAAA,SAAAc,GACA,OAAAC,UAAAhC,QACA0pD,EAAAzoD,UAAAc,GACA4nD,EAAA1oD,UAAAc,GACA6nD,EAAA3oD,UAAAc,GACAunD,GAJAI,EAAAzoD,aAMAqoD,EAAAr5C,MAAA,SAAAlO,GACA,OAAAC,UAAAhC,QACA0pD,EAAAz5C,MAAAlO,GACA4nD,EAAA15C,MAAA,IAAAlO,GACA6nD,EAAA35C,MAAAlO,GACAunD,EAAAlpB,UAAAspB,EAAAtpB,cAJAspB,EAAAz5C,SAMAq5C,EAAAlpB,UAAA,SAAAr+B,GACA,IAAAC,UAAAhC,OAAA,OAAA0pD,EAAAtpB,YACA,IAAA/3B,EAAAqhD,EAAAz5C,QAAAvL,GAAA3C,EAAA,GAAA4C,GAAA5C,EAAA,GAIA,OAHAwnD,EAAAG,EAAAtpB,UAAAr+B,GAAAinD,WAAA,EAAAtkD,EAAA,KAAA2D,EAAA1D,EAAA,KAAA0D,GAAA,CAAA3D,EAAA,KAAA2D,EAAA1D,EAAA,KAAA0D,KAAAy1C,OAAA+L,GAAAziC,MACAoiC,EAAAG,EAAAvpB,UAAA,CAAA17B,EAAA,KAAA2D,EAAA1D,EAAA,KAAA0D,IAAA2gD,WAAA,EAAAtkD,EAAA,KAAA2D,EAAA6zB,GAAAv3B,EAAA,IAAA0D,EAAA6zB,IAAA,CAAAx3B,EAAA,KAAA2D,EAAA6zB,GAAAv3B,EAAA,KAAA0D,EAAA6zB,MAAA4hB,OAAA+L,GAAAziC,MACAqiC,EAAAG,EAAAxpB,UAAA,CAAA17B,EAAA,KAAA2D,EAAA1D,EAAA,KAAA0D,IAAA2gD,WAAA,EAAAtkD,EAAA,KAAA2D,EAAA6zB,GAAAv3B,EAAA,KAAA0D,EAAA6zB,IAAA,CAAAx3B,EAAA,KAAA2D,EAAA6zB,GAAAv3B,EAAA,KAAA0D,EAAA6zB,MAAA4hB,OAAA+L,GAAAziC,MACAkiC,GAEAA,EAAAr5C,MAAA,OAEA,IAAAg6C,GAAAC,GA2BAC,GAAAC,GAAAC,GAAAC,GA3BAC,GAAA,CACAnjC,MAAAsK,EACAytB,UAAAztB,EACA0tB,QAAA1tB,EACA2tB,aAAA,WACA6K,GAAA,EACAK,GAAApL,UAAAqL,IAEAlL,WAAA,WACAiL,GAAApL,UAAAoL,GAAAnL,QAAAmL,GAAAnjC,MAAAsK,EACAu4B,IAAAppD,EAAAqpD,GAAA,KAGA,SAAAM,KACA,IAAAC,EAAAC,EAAA9hC,EAAA3O,EAKA,SAAA0mC,EAAAj8C,EAAAC,GACAulD,IAAAjwC,EAAAvV,EAAAkkB,EAAAjkB,EACAikB,EAAAlkB,EAAAuV,EAAAtV,EANA4lD,GAAAnjC,MAAA,SAAA1iB,EAAAC,GACA4lD,GAAAnjC,MAAAu5B,EACA8J,EAAA7hC,EAAAlkB,EAAAgmD,EAAAzwC,EAAAtV,GAMA4lD,GAAAnL,QAAA,WACAuB,EAAA8J,EAAAC,IAIA,IAAAC,GAAA,CACAvjC,MAMA,SAAA1iB,EAAAC,GACAD,EAAAylD,QAAAzlD,GACAA,EAAA2lD,QAAA3lD,GACAC,EAAAylD,QAAAzlD,GACAA,EAAA2lD,QAAA3lD,IATAw6C,UAAAztB,EACA0tB,QAAA1tB,EACA2tB,aAAA3tB,EACA4tB,WAAA5tB,GAQA,SAAAk5B,KACA,IAAAC,EAAAC,GAAA,KAAAjF,EAAA,GACA/H,EAAA,CACA12B,QACA+3B,UAAA,WACArB,EAAA12B,MAAA2jC,GAEA3L,UACAC,aAAA,WACAvB,EAAAsB,QAAA4L,GAEA1L,WAAA,WACAxB,EAAAsB,UACAtB,EAAA12B,SAEA6jC,YAAA,SAAAlpD,GAEA,OADA8oD,EAAAC,GAAA/oD,GACA+7C,GAEA7wC,OAAA,WACA,GAAA44C,EAAA7lD,OAAA,CACA,IAAAiN,EAAA44C,EAAAlV,KAAA,IAEA,OADAkV,EAAA,GACA54C,KAIA,SAAAma,EAAA1iB,EAAAC,GACAkhD,EAAArmD,KAAA,IAAAkF,EAAA,IAAAC,EAAAkmD,GAEA,SAAAE,EAAArmD,EAAAC,GACAkhD,EAAArmD,KAAA,IAAAkF,EAAA,IAAAC,GACAm5C,EAAA12B,MAAAw+B,EAEA,SAAAA,EAAAlhD,EAAAC,GACAkhD,EAAArmD,KAAA,IAAAkF,EAAA,IAAAC,GAEA,SAAAy6C,IACAtB,EAAA12B,QAEA,SAAA4jC,IACAnF,EAAArmD,KAAA,KAEA,OAAAs+C,EAEA,SAAAgN,GAAA7rC,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAEA,IAqmBAisC,GArmBAC,GAAA,CACA/jC,MAAAgkC,GACAjM,UAAAkM,GACAjM,QAAAkM,GACAjM,aAAA,WACA8L,GAAAhM,UAAAoM,IAEAjM,WAAA,WACA6L,GAAA/jC,MAAAgkC,GACAD,GAAAhM,UAAAkM,GACAF,GAAA/L,QAAAkM,KAGA,SAAAF,GAAA1mD,EAAAC,GACAg7C,IAAAj7C,EACAk7C,IAAAj7C,IACAk7C,GAEA,SAAAwL,KACA,IAAAziC,EAAA3O,EAKA,SAAA0mC,EAAAj8C,EAAAC,GACA,IAAAk3B,EAAAn3B,EAAAkkB,EAAAkT,EAAAn3B,EAAAsV,EAAArF,EAAAhU,KAAAgtB,KAAAiO,IAAAC,KACAgkB,IAAAlrC,GAAAgU,EAAAlkB,GAAA,EACAq7C,IAAAnrC,GAAAqF,EAAAtV,GAAA,EACAq7C,IAAAprC,EACAw2C,GAAAxiC,EAAAlkB,EAAAuV,EAAAtV,GATAwmD,GAAA/jC,MAAA,SAAA1iB,EAAAC,GACAwmD,GAAA/jC,MAAAu5B,EACAyK,GAAAxiC,EAAAlkB,EAAAuV,EAAAtV,IAUA,SAAA2mD,KACAH,GAAA/jC,MAAAgkC,GAEA,SAAAG,KACA,IAAAd,EAAAC,EAAA9hC,EAAA3O,EAKA,SAAA0mC,EAAAj8C,EAAAC,GACA,IAAAk3B,EAAAn3B,EAAAkkB,EAAAkT,EAAAn3B,EAAAsV,EAAArF,EAAAhU,KAAAgtB,KAAAiO,IAAAC,KACAgkB,IAAAlrC,GAAAgU,EAAAlkB,GAAA,EACAq7C,IAAAnrC,GAAAqF,EAAAtV,GAAA,EACAq7C,IAAAprC,EAEAqrC,KADArrC,EAAAqF,EAAAvV,EAAAkkB,EAAAjkB,IACAikB,EAAAlkB,GACAw7C,IAAAtrC,GAAAqF,EAAAtV,GACAw7C,IAAA,EAAAvrC,EACAw2C,GAAAxiC,EAAAlkB,EAAAuV,EAAAtV,GAbAwmD,GAAA/jC,MAAA,SAAA1iB,EAAAC,GACAwmD,GAAA/jC,MAAAu5B,EACAyK,GAAAX,EAAA7hC,EAAAlkB,EAAAgmD,EAAAzwC,EAAAtV,IAaAwmD,GAAA/L,QAAA,WACAuB,EAAA8J,EAAAC,IAGA,SAAAc,GAAAC,GACA,IAAAR,EAAA,IACAnN,EAAA,CACA12B,QACA+3B,UAAA,WACArB,EAAA12B,MAAA2jC,GAEA3L,UACAC,aAAA,WACAvB,EAAAsB,QAAA4L,GAEA1L,WAAA,WACAxB,EAAAsB,UACAtB,EAAA12B,SAEA6jC,YAAA,SAAAlpD,GAEA,OADAkpD,EAAAlpD,EACA+7C,GAEA7wC,OAAAykB,GAEA,SAAAtK,EAAA1iB,EAAAC,GACA8mD,EAAAC,OAAAhnD,EAAAumD,EAAAtmD,GACA8mD,EAAA/uC,IAAAhY,EAAAC,EAAAsmD,EAAA,EAAA3uB,IAEA,SAAAyuB,EAAArmD,EAAAC,GACA8mD,EAAAC,OAAAhnD,EAAAC,GACAm5C,EAAA12B,MAAAw+B,EAEA,SAAAA,EAAAlhD,EAAAC,GACA8mD,EAAAE,OAAAjnD,EAAAC,GAEA,SAAAy6C,IACAtB,EAAA12B,QAEA,SAAA4jC,IACAS,EAAAG,YAEA,OAAA9N,EAEA,SAAA+N,GAAAC,GACA,IAAAC,EAAA,GAAAC,EAAAprD,KAAA6iC,IAAA,GAAAhH,IAAAwvB,EAAA,GACA,SAAAC,EAAApO,GACA,OAAAmO,EAQA,SAAAnO,GACA,IAAAwC,EAAAmK,EAAAC,EAAAyB,EAAAC,EAAAC,EAAA7L,EAAA53B,EAAA3O,EAAAqyC,EAAAnuB,EAAAouB,EACAL,EAAA,CACA9kC,QACA+3B,YACAC,UACAC,aAAA,WACAvB,EAAAuB,eACA6M,EAAA/M,UAAAsD,GAEAnD,WAAA,WACAxB,EAAAwB,aACA4M,EAAA/M,cAGA,SAAA/3B,EAAA1iB,EAAAC,GACAD,EAAAonD,EAAApnD,EAAAC,GACAm5C,EAAA12B,MAAA1iB,EAAA,GAAAA,EAAA,IAEA,SAAAy6C,IACAv2B,EAAA+D,IACAu/B,EAAA9kC,MAAAu7B,EACA7E,EAAAqB,YAEA,SAAAwD,EAAA/B,EAAAC,GACA,IAAA7kD,EAAAmlD,GAAA,CAAAP,EAAAC,IAAApjD,EAAAquD,EAAAlL,EAAAC,GACA2L,EAAA5jC,EAAA3O,EAAAumC,EAAA8L,EAAAnuB,EAAAouB,EAAA3jC,EAAAnrB,EAAA,GAAAwc,EAAAxc,EAAA,GAAA+iD,EAAAI,EAAA0L,EAAAtwD,EAAA,GAAAmiC,EAAAniC,EAAA,GAAAuwD,EAAAvwD,EAAA,GAAAiwD,EAAAnO,GACAA,EAAA12B,MAAAwB,EAAA3O,GAEA,SAAAmlC,IACA8M,EAAA9kC,QACA02B,EAAAsB,UAEA,SAAAqD,IACAtD,IACA+M,EAAA9kC,MAAAo7B,EACA0J,EAAA9M,QAAAsD,EAEA,SAAAF,EAAA5B,EAAAC,GACA8B,EAAArC,EAAAM,EAAAC,GAAA4J,EAAA7hC,EAAA8hC,EAAAzwC,EAAAkyC,EAAAG,EAAAF,EAAAjuB,EAAAkuB,EAAAE,EACAL,EAAA9kC,MAAAu7B,EAEA,SAAAD,IACA8J,EAAA5jC,EAAA3O,EAAAumC,EAAA8L,EAAAnuB,EAAAouB,EAAA9B,EAAAC,EAAApK,EAAA6L,EAAAC,EAAAC,EAAAJ,EAAAnO,GACAoO,EAAA9M,UACAA,IAEA,OAAA8M,GArDA,SAAApO,GACA,OAAA2O,GAAA3O,EAAA,SAAAp5C,EAAAC,GACAD,EAAAonD,EAAApnD,EAAAC,GACAm5C,EAAA12B,MAAA1iB,EAAA,GAAAA,EAAA,QALAo5C,GAyDA,SAAA0O,EAAA5jC,EAAA3O,EAAAumC,EAAA8L,EAAAnuB,EAAAouB,EAAAxtB,EAAAC,EAAAgjB,EAAAkG,EAAA9pB,EAAAsuB,EAAAv7B,EAAA2sB,GACA,IAAAjiB,EAAAkD,EAAAnW,EAAAkT,EAAAkD,EAAA/kB,EAAA+jB,EAAAnC,IAAAC,IACA,GAAAkC,EAAA,EAAA+tB,GAAA56B,IAAA,CACA,IAAAnmB,EAAAshD,EAAApE,EAAA1pC,EAAA2f,EAAAC,EAAApiC,EAAAuwD,EAAAG,EAAA3wD,EAAA6E,KAAAgtB,KAAA5iB,IAAAwT,IAAAxiB,KAAA2wD,EAAA/rD,KAAAo8B,KAAAhhC,GAAAD,GAAA6wD,EAAA/rD,IAAA7E,GAAA,GAAAkgC,IAAAr7B,EAAA2/C,EAAAwB,GAAA9lB,IAAAskB,EAAAwB,GAAA,EAAAphD,KAAAsjC,MAAA1lB,EAAAxT,GAAAvN,EAAAquD,EAAAc,EAAAD,GAAAE,EAAApvD,EAAA,GAAAqvD,EAAArvD,EAAA,GAAAsvD,EAAAF,EAAAjkC,EAAAokC,EAAAF,EAAA7yC,EAAAgzC,EAAAnxB,EAAAixB,EAAAlxB,EAAAmxB,GACAC,IAAAjvB,EAAA+tB,GAAAlrD,GAAAg7B,EAAAkxB,EAAAjxB,EAAAkxB,GAAAhvB,EAAA,QAAAsuB,EAAApE,EAAA/pB,EAAAC,EAAAmuB,EAAAG,EAAAV,KACAQ,EAAA5jC,EAAA3O,EAAAumC,EAAA8L,EAAAnuB,EAAAouB,EAAAM,EAAAC,EAAAF,EAAA5hD,GAAAjP,EAAAyiB,GAAAziB,EAAAC,EAAAm1B,EAAA2sB,GACAA,EAAA12B,MAAAylC,EAAAC,GACAN,EAAAK,EAAAC,EAAAF,EAAA5hD,EAAAwT,EAAAxiB,EAAA+iC,EAAAC,EAAAgjB,EAAAkG,EAAA9pB,EAAAsuB,EAAAv7B,EAAA2sB,KASA,OALAoO,EAAAjrD,UAAA,SAAAc,GACA,OAAAC,UAAAhC,QACAisD,GAAAF,EAAAhqD,KAAA,MACAmqD,GAFAtrD,KAAAgtB,KAAAm+B,IAIAG,EAkEA,SAAAgB,GAAApP,GACAv7C,KAAAu7C,SAsBA,SAAA2O,GAAA3O,EAAA12B,GACA,OACAA,QACAi3B,OAAA,WACAP,EAAAO,UAEAc,UAAA,WACArB,EAAAqB,aAEAC,QAAA,WACAtB,EAAAsB,WAEAC,aAAA,WACAvB,EAAAuB,gBAEAC,WAAA,WACAxB,EAAAwB,eAMA,SAAA6N,GAAArB,GACA,OAAArD,GAAA,WACA,OAAAqD,GADArD,GAIA,SAAAA,GAAAD,GACA,IAAAsD,EAAAlH,EAAAwI,EAGKC,EAAAC,EAAAxP,EAHLyP,EAAA1B,GAAA,SAAAnnD,EAAAC,GAEA,QADAD,EAAAonD,EAAApnD,EAAAC,IACA,GAAA0D,EAAAglD,EAAAC,EAAA5oD,EAAA,GAAA2D,KACKA,EAAA,IAAA3D,EAAA,IAAAC,EAAA,IAAAi8C,EAAA,EAAAC,EAAA,EAAA2M,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAArH,GAAAsH,EAAAr9B,EAAAs9B,EAAA,KAAA7E,EAAA,KACL,SAAApiC,EAAAQ,GAEA,QADAA,EAAAgmC,EAAAhmC,EAAA,GAAAqV,GAAArV,EAAA,GAAAqV,KACA,GAAAp0B,EAAAglD,EAAAC,EAAAlmC,EAAA,GAAA/e,GAEA,SAAA63B,EAAA9Y,GAEA,OADAA,EAAAgmC,EAAAltB,QAAA9Y,EAAA,GAAAimC,GAAAhlD,GAAAilD,EAAAlmC,EAAA,IAAA/e,KACA,CAAA+e,EAAA,GAAAsV,GAAAtV,EAAA,GAAAsV,IA4CA,SAAA8gB,IACA4P,EAAAxJ,GAAAgB,EAAAkJ,GAAAN,EAAAC,EAAAC,GAAA5B,GACA,IAAAltB,EAAAktB,EAAAlL,EAAAC,GAGA,OAFAwM,EAAA3oD,EAAAk6B,EAAA,GAAAv2B,EACAilD,EAAA3oD,EAAAi6B,EAAA,GAAAv2B,EACA0lD,IAEA,SAAAA,IAEA,OADAjQ,MAAAoL,OAAA,EAAApL,EAAA,MACAl3B,EAEA,OArDAA,EAAAk3B,OAAA,SAAAmL,GAIA,OAHAnL,MAAAoL,OAAA,IACApL,EAAAkQ,GAAAL,EAAA/I,EAAA2I,EAAAK,EAAA3E,OACAC,OAAA,EACApL,GAEAl3B,EAAAinC,UAAA,SAAA9rD,GACA,OAAAC,UAAAhC,QACA2tD,EAAA,MAAA5rD,GAAA8rD,EAAA9rD,EAAAukD,IApyBA,SAAArnC,GACA,IAAAgvC,EAAArtD,KAAA6iC,IAAAxkB,GAAAivC,EAAAD,EAAA,EAAAE,EAAAttD,EAAAotD,GAAA/xB,GACA,OAAAsoB,GAAAyD,EAIA,SAAAp5C,GACA,IAAAy2C,EAAAiH,EAAA6B,EAAAC,EAAArI,EACA,OACA7G,UAAA,WACAkP,EAAAD,GAAA,EACApI,EAAA,GAEA5+B,MAAA,SAAAw5B,EAAAC,GACA,IAAAyN,EAAAC,EAAA,CAAA3N,EAAAC,GAAAtzB,EAAA06B,EAAArH,EAAAC,GAAA7kD,EAAAkyD,EAAA3gC,EAAA,EAAAihC,EAAA5N,EAAAC,GAAAtzB,EAAAihC,EAAA5N,KAAA,EAAAxkB,QAAAykB,GAAA,EAUA,IATAyE,IAAA+I,EAAAD,EAAA7gC,IAAA1e,EAAAswC,YACA5xB,IAAA6gC,IACAE,EAAAG,EAAAnJ,EAAAiJ,IACA1M,GAAAyD,EAAAgJ,IAAAzM,GAAA0M,EAAAD,MACAC,EAAA,IAAAryB,GACAqyB,EAAA,IAAAryB,GACA3O,EAAA06B,EAAAsG,EAAA,GAAAA,EAAA,MAGAhhC,IAAA6gC,EACApI,EAAA,EACAz4B,GACA1e,EAAAswC,YACAmP,EAAAG,EAAAF,EAAAjJ,GACAz2C,EAAAuY,MAAAknC,EAAA,GAAAA,EAAA,MAEAA,EAAAG,EAAAnJ,EAAAiJ,GACA1/C,EAAAuY,MAAAknC,EAAA,GAAAA,EAAA,IACAz/C,EAAAuwC,WAEAkG,EAAAgJ,OACW,GAAAH,GAAA7I,GAAA4I,EAAA3gC,EAAA,CACX,IAAA1wB,EACAb,EAAAuwD,KAAA1vD,EAAA4xD,EAAAF,EAAAjJ,GAAA,MACAU,EAAA,EACAkI,GACAr/C,EAAAswC,YACAtwC,EAAAuY,MAAAvqB,EAAA,MAAAA,EAAA,OACAgS,EAAAuY,MAAAvqB,EAAA,MAAAA,EAAA,OACAgS,EAAAuwC,YAEAvwC,EAAAuY,MAAAvqB,EAAA,MAAAA,EAAA,OACAgS,EAAAuwC,UACAvwC,EAAAswC,YACAtwC,EAAAuY,MAAAvqB,EAAA,MAAAA,EAAA,UAIA0wB,GAAA+3B,GAAAzD,GAAAyD,EAAAiJ,IACA1/C,EAAAuY,MAAAmnC,EAAA,GAAAA,EAAA,IAEAjJ,EAAAiJ,EAAAH,EAAA7gC,EAAAg/B,EAAAvwD,GAEAojD,QAAA,WACAgP,GAAAv/C,EAAAuwC,UACAkG,EAAA,MAEAU,MAAA,WACA,OAAAA,GAAAqI,GAAAD,IAAA,KA9DAM,GAAAzvC,EAAA,EAAAwd,IACAyxB,EAAA,IAAAjvC,GAAA,EAAAmd,GAAAnd,EAAAmd,KACA,SAAA6rB,EAAArH,EAAAC,GACA,OAAAjgD,KAAA6iC,IAAAmd,GAAAhgD,KAAA6iC,IAAAod,GAAAoN,EA+DA,SAAAQ,EAAAzjD,EAAAwT,EAAAmwC,GACA,IACAC,EAAA,QAAAC,EAAAvN,GADAH,GAAAn2C,GAAAm2C,GAAA3iC,IACAswC,EAAAzN,GAAAwN,KAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,IACA,IAAAC,EAAA,OAAAL,GAAA3jD,EACA,IAAA0hD,EAAAuB,EAAAa,EAAAE,EAAAC,GAAAhB,EAAAc,EAAAC,EAAAE,EAAA5N,GAAAsN,EAAAC,GAAAnU,EAAA8G,GAAAoN,EAAAlC,GACAnL,GAAA7G,EADA8G,GAAAqN,EAAAI,IAEA,IAAAzwB,EAAA0wB,EAAA5jD,EAAA+1C,GAAA3G,EAAAlc,GAAA2wB,EAAA9N,GAAA7iB,KAAA4wB,EAAA9jD,IAAA6jD,GAAA9N,GAAA3G,KAAA,GACA,KAAA0U,EAAA,IACA,IAAAvyD,EAAA+D,KAAAgtB,KAAAwhC,GAAA/tB,EAAAmgB,GAAAhjB,IAAAlzB,EAAAzO,GAAAsyD,GAGA,GAFA5N,GAAAlgB,EAAAqZ,GACArZ,EAAAsgB,GAAAtgB,IACAstB,EAAA,OAAAttB,EACA,IAAAzsB,EAAA4rC,EAAAx1C,EAAA,GAAAg3C,EAAAxjC,EAAA,GAAAujC,EAAA/2C,EAAA,GAAAi3C,EAAAzjC,EAAA,GACAwjC,EAAAxB,IAAA5rC,EAAA4rC,IAAAwB,IAAAptC,GACA,IAAA44C,EAAAxL,EAAAxB,EAAA6O,EAAAxuD,EAAA2sD,EAAApxB,IAAAF,GAEA,IADAmzB,GAAApN,EAAAF,IAAAntC,EAAAmtC,IAAAE,IAAArtC,GADAy6C,GAAA7B,EAAAtxB,GAEAmzB,EAAAtN,EAAAE,EAAA,EAAA5gB,EAAA,IAAAxgC,EAAAwgC,EAAA,GAAAmf,GAAAtkB,GAAA6lB,EAAAE,GAAAF,GAAA1gB,EAAA,IAAAA,EAAA,IAAA4gB,EAAAuL,EAAApxB,IAAAokB,GAAAnf,EAAA,IAAAA,EAAA,IAAA2gB,GAAA,CACA,IAAAsN,EAAA9N,GAAAhjB,IAAAlzB,EAAAzO,GAAAsyD,GAEA,OADA5N,GAAA+N,EAAA5U,GACA,CAAArZ,EAAAsgB,GAAA2N,MAGA,SAAAd,EAAA5N,EAAAC,GACA,IAAApkD,EAAAyxD,EAAAjvC,EAAAmd,GAAAnd,EAAAuvC,EAAA,EAGA,OAFA5N,GAAAnkD,EAAA+xD,GAAA,EAA4B5N,EAAAnkD,IAAA+xD,GAAA,GAC5B3N,GAAApkD,EAAA+xD,GAAA,EAA4B3N,EAAApkD,IAAA+xD,GAAA,GAC5BA,GAusBAe,EAAA1B,GAAA9rD,GAAA06B,IACAsxB,KAFAF,GAIAjnC,EAAAoiC,WAAA,SAAAjnD,GACA,OAAAC,UAAAhC,QACAgpD,EAAAjnD,EACA6rD,EAAA7rD,EAAAqlD,GAAArlD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAwuB,EACAw9B,KAHA/E,GAKApiC,EAAA3W,MAAA,SAAAlO,GACA,OAAAC,UAAAhC,QACAqI,GAAAtG,EACAy7C,KAFAn1C,GAIAue,EAAAwZ,UAAA,SAAAr+B,GACA,OAAAC,UAAAhC,QACA0E,GAAA3C,EAAA,GACA4C,GAAA5C,EAAA,GACAy7C,KAHA,CAAA94C,EAAAC,IAKAiiB,EAAAgY,OAAA,SAAA78B,GACA,OAAAC,UAAAhC,QACA4gD,EAAA7+C,EAAA,OAAA06B,GACAokB,EAAA9+C,EAAA,OAAA06B,GACA+gB,KAHA,CAAAoD,EAAAlkB,GAAAmkB,EAAAnkB,KAKA9V,EAAAg+B,OAAA,SAAA7iD,GACA,OAAAC,UAAAhC,QACAwtD,EAAAzrD,EAAA,OAAA06B,GACAgxB,EAAA1rD,EAAA,OAAA06B,GACAixB,EAAA3rD,EAAA/B,OAAA,EAAA+B,EAAA,OAAA06B,GAAA,EACA+gB,KAJA,CAAAgQ,EAAA9wB,GAAA+wB,EAAA/wB,GAAAgxB,EAAAhxB,KAMA3+B,EAAA0zB,OAAA7K,EAAA2mC,EAAA,aAYA,WAGA,OAFAzB,EAAAtD,EAAA7lD,MAAAJ,KAAAP,WACA4kB,EAAAsZ,OAAA4rB,EAAA5rB,UACAsd,KAGA,SAAAwQ,GAAAlQ,GACA,OAAA2O,GAAA3O,EAAA,SAAAp5C,EAAAC,GACAm5C,EAAA12B,MAAA1iB,EAAA+3B,GAAA93B,EAAA83B,MAGA,SAAA+yB,GAAA5O,EAAAC,GACA,OAAAD,EAAAC,GAiBA,SAAA4O,GAAA7O,EAAAC,GACA,OAAAD,EAAAxkB,GAAAwkB,EAAAtkB,GAAAskB,GAAAxkB,GAAAwkB,EAAAtkB,GAAAskB,EAAAC,GAGA,SAAAiN,GAAAN,EAAAC,EAAAC,GACA,OAAAF,EAAAC,GAAAC,EAAA9J,GAAA8L,GAAAlC,GAAAmC,GAAAlC,EAAAC,IAAAgC,GAAAlC,GAAAC,GAAAC,EAAAiC,GAAAlC,EAAAC,GAAA+B,GAEA,SAAAG,GAAApC,GACA,gBAAA5M,EAAAC,GACA,QAAAD,GAAA4M,GAAApxB,GAAAwkB,EAAAtkB,GAAAskB,GAAAxkB,GAAAwkB,EAAAtkB,GAAAskB,EAAAC,IAGA,SAAA6O,GAAAlC,GACA,IAAAqC,EAAAD,GAAApC,GAEA,OADAqC,EAAA3vB,OAAA0vB,IAAApC,GACAqC,EAEA,SAAAF,GAAAlC,EAAAC,GACA,IAAAoC,EAAAlvD,KAAA6iC,IAAAgqB,GAAAsC,EAAAnvD,KAAAw8B,IAAAqwB,GAAAuC,EAAApvD,KAAA6iC,IAAAiqB,GAAAuC,EAAArvD,KAAAw8B,IAAAswB,GACA,SAAAmC,EAAAjP,EAAAC,GACA,IAAAI,EAAArgD,KAAA6iC,IAAAod,GAAAn8C,EAAA9D,KAAA6iC,IAAAmd,GAAAK,EAAAt8C,EAAA/D,KAAAw8B,IAAAwjB,GAAAK,EAAArsC,EAAAhU,KAAAw8B,IAAAyjB,GAAAx4C,EAAAuM,EAAAk7C,EAAAprD,EAAAqrD,EACA,OAAAnvD,KAAAsjC,MAAAv/B,EAAAqrD,EAAA3nD,EAAA4nD,EAAAvrD,EAAAorD,EAAAl7C,EAAAm7C,GAAAhzB,GAAA10B,EAAA2nD,EAAArrD,EAAAsrD,IAMA,OAJAJ,EAAA3vB,OAAA,SAAA0gB,EAAAC,GACA,IAAAI,EAAArgD,KAAA6iC,IAAAod,GAAAn8C,EAAA9D,KAAA6iC,IAAAmd,GAAAK,EAAAt8C,EAAA/D,KAAAw8B,IAAAwjB,GAAAK,EAAArsC,EAAAhU,KAAAw8B,IAAAyjB,GAAAx4C,EAAAuM,EAAAo7C,EAAArrD,EAAAsrD,EACA,OAAArvD,KAAAsjC,MAAAv/B,EAAAqrD,EAAAp7C,EAAAq7C,EAAAvrD,EAAAorD,EAAAznD,EAAA0nD,GAAAhzB,GAAA10B,EAAAynD,EAAAprD,EAAAqrD,KAEAF,EAkCA,SAAAnB,GAAAzvC,EAAAhe,GACA,IAAAgtD,EAAArtD,KAAA6iC,IAAAxkB,GAAAixC,EAAAtvD,KAAAw8B,IAAAne,GACA,gBAAA4nC,EAAAC,EAAAC,EAAAl4C,GACA,IAAA4gB,EAAAs3B,EAAA9lD,EACA,MAAA4lD,GACAA,EAAAsJ,GAAAlC,EAAApH,GACAC,EAAAqJ,GAAAlC,EAAAnH,IACAC,EAAA,EAAAF,EAAAC,EAAAD,EAAAC,KAAAD,GAAAE,EAAAzqB,MAEAuqB,EAAA5nC,EAAA8nC,EAAAzqB,GACAwqB,EAAA7nC,EAAA,GAAAwQ,GAEA,QAAArI,EAAAvqB,EAAAgqD,EAA+BE,EAAA,EAAAlqD,EAAAiqD,EAAAjqD,EAAAiqD,EAAiCjqD,GAAA4yB,EAChE5gB,EAAAuY,SAAAu6B,GAAA,CAAAsM,GAAAiC,EAAAtvD,KAAA6iC,IAAA5mC,IAAAqzD,EAAAtvD,KAAAw8B,IAAAvgC,MAAA,GAAAuqB,EAAA,KAIA,SAAA+oC,GAAAlC,EAAA7mC,GACA,IAAApc,EAAAm2C,GAAA/5B,GACApc,EAAA,IAAAijD,EACAvM,GAAA12C,GACA,IAAAqT,EAAAwe,IAAA7xB,EAAA,IACA,SAAAA,EAAA,MAAAqT,KAAA,EAAAzd,KAAAy7B,GAAAH,KAAA,EAAAt7B,KAAAy7B,IAgFA,SAAA+zB,GAAAn2C,EAAA+kB,EAAAlD,GACA,IAAAn3B,EAAA5G,EAAAuU,MAAA2H,EAAA+kB,EAAA9C,GAAAJ,GAAAxiB,OAAA0lB,GACA,gBAAAt6B,GACA,OAAAC,EAAAwN,IAAA,SAAAxN,GACA,OAAAD,EAAAC,MAIA,SAAA0rD,GAAAznC,EAAAmW,EAAAlD,GACA,IAAAn3B,EAAA3G,EAAAuU,MAAAsW,EAAAmW,EAAA7C,GAAAL,GAAAviB,OAAAylB,GACA,gBAAAp6B,GACA,OAAAD,EAAAyN,IAAA,SAAAzN,GACA,OAAAA,EAAAC,MAIA,SAAA2rD,GAAAr0D,GACA,OAAAA,EAAAy0B,OAEA,SAAA6/B,GAAAt0D,GACA,OAAAA,EAAAw0B,OAxYA1yB,EAAAwnB,IAAA3G,KAAA,WACA,IAAAgI,EAAA6kC,EAAA+E,EAAAC,EAAAC,EAAAzF,EAAA,IACA,SAAArsC,EAAAvhB,GAMA,OALAA,IACA,mBAAA4tD,GAAAwF,EAAAxF,eAAAtoD,MAAAJ,KAAAP,YACA0uD,KAAAxH,QAAAwH,EAAAF,EAAAC,IACA1yD,EAAAwnB,IAAAu4B,OAAAzgD,EAAAqzD,IAEAD,EAAAxjD,SAiCA,SAAAuwC,IAEA,OADAkT,EAAA,KACA9xC,EAEA,OAnCAA,EAAA0C,KAAA,SAAAjkB,GAGA,OAFA4sD,GAAA,EACAlsD,EAAAwnB,IAAAu4B,OAAAzgD,EAAAmzD,EAAAjG,KACAN,IAEArrC,EAAAnB,SAAA,SAAApgB,GAGA,OAFAsiD,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,EACApiD,EAAAwnB,IAAAu4B,OAAAzgD,EAAAmzD,EAAArF,KACAhL,GAAA,CAAAF,GAAAE,GAAAD,GAAAC,IAAAH,GAAA,CAAAF,GAAAE,GAAAD,GAAAC,IAAAH,GAAA,CAAAF,GAAAE,GAAAD,GAAAC,IAAA,CAAAlzB,UAEA/N,EAAAkjC,OAAA,SAAAzkD,GAGA,OAFAgtD,GAAAC,KAAAH,GAAAC,GAAAvqC,KACA9hB,EAAAwnB,IAAAu4B,OAAAzgD,EAAAmzD,EAAA7F,KACA,EAAAR,GAAAC,IAAA,CAAAC,GAAAC,MAEA1rC,EAAAgI,WAAA,SAAA7kB,GACA,OAAAC,UAAAhC,QACAwwD,GAAA5pC,EAAA7kB,KAAA+7C,SAoBAgO,EApBA/pD,EAqBAmqD,EAAAL,GAAA,SAAAnnD,EAAAC,GACA,OAAAmnD,EAAA,CAAApnD,EAAAg4B,GAAA/3B,EAAA+3B,OAEA,SAAAohB,GACA,OAAAkQ,GAAA9B,EAAApO,MAzBAvtB,EACAitB,KAFA52B,EAqBA,IAAAklC,EACAI,GAlBAttC,EAAA6sC,QAAA,SAAA1pD,GACA,OAAAC,UAAAhC,QACAywD,EAAA,OAAAhF,EAAA1pD,GAAA,IAAA6oD,GAAA,IAAAY,GAAAzpD,GACA,mBAAAkpD,GAAAwF,EAAAxF,eACAzN,KAHAiO,GAKA7sC,EAAAqsC,YAAA,SAAAlpD,GACA,OAAAC,UAAAhC,QACAirD,EAAA,mBAAAlpD,KAAA0uD,EAAAxF,aAAAlpD,OACA6c,GAFAqsC,GAQArsC,EAAAgI,WAAA7oB,EAAAwnB,IAAA+jC,aAAAmC,QAAA,OAUA1tD,EAAAwnB,IAAAorC,UAAA,SAAAC,GACA,OACA9S,OAAA,SAAAA,GACA,IAAA6S,EAAA,IAAAzD,GAAApP,GACA,QAAAz1C,KAAAuoD,EAAAD,EAAAtoD,GAAAuoD,EAAAvoD,GACA,OAAAsoD,KAOAzD,GAAA3vD,UAAA,CACA6pB,MAAA,SAAA1iB,EAAAC,GACApC,KAAAu7C,OAAA12B,MAAA1iB,EAAAC,IAEA05C,OAAA,WACA97C,KAAAu7C,OAAAO,UAEAc,UAAA,WACA58C,KAAAu7C,OAAAqB,aAEAC,QAAA,WACA78C,KAAAu7C,OAAAsB,WAEAC,aAAA,WACA98C,KAAAu7C,OAAAuB,gBAEAC,WAAA,WACA/8C,KAAAu7C,OAAAwB,eAuBAvhD,EAAAwnB,IAAAqB,WAAAumC,GACApvD,EAAAwnB,IAAAsrC,kBAAApI,IAsFA1qD,EAAAwnB,IAAAurC,gBAAA,WACA,OAAA3D,GAAAqC,MACGpG,IAAAoG,GAAAtvB,OAAAsvB,GACHzxD,EAAAwnB,IAAAsqC,SAAA,SAAAjL,GAEA,SAAAkE,EAAAvK,GAEA,OADAA,EAAAqG,EAAArG,EAAA,GAAA9hB,GAAA8hB,EAAA,GAAA9hB,KACA,IAAAC,GAAA6hB,EAAA,IAAA7hB,GAAA6hB,EAMA,OATAqG,EAAAkJ,GAAAlJ,EAAA,OAAAnoB,GAAAmoB,EAAA,GAAAnoB,GAAAmoB,EAAA5kD,OAAA,EAAA4kD,EAAA,GAAAnoB,GAAA,GAKAqsB,EAAA5oB,OAAA,SAAAqe,GAEA,OADAA,EAAAqG,EAAA1kB,OAAAqe,EAAA,GAAA9hB,GAAA8hB,EAAA,GAAA9hB,KACA,IAAAC,GAAA6hB,EAAA,IAAA7hB,GAAA6hB,GAEAuK,GAKA2G,GAAAvvB,OAAAsvB,GA0BAzxD,EAAAwnB,IAAAgC,OAAA,WACA,IAAAlJ,EAAAM,EAAAsc,EAAA,MAAAh6B,EAAA,EACA,SAAAsmB,IACA,IAAAqX,EAAA,mBAAA3D,IAAAt4B,MAAAJ,KAAAP,WAAAi5B,EAAA2pB,EAAAkJ,IAAAlvB,EAAA,GAAAnC,IAAAmC,EAAA,GAAAnC,GAAA,GAAAyD,OAAAmlB,EAAA,GAOA,OANA1mC,EAAA,aACAyI,MAAA,SAAA1iB,EAAAC,GACA0gD,EAAA7lD,KAAAkF,EAAAkgD,EAAAlgD,EAAAC,IACAD,EAAA,IAAAg4B,GAAAh4B,EAAA,IAAAg4B,MAGA,CACAhK,KAAA,UACA6rB,YAAA,CAAA8G,IAkBA,OAfA99B,EAAA0T,OAAA,SAAAv2B,GACA,OAAA1C,UAAAhC,QACAi7B,EAAAv2B,EACA6iB,GAFA0T,GAIA1T,EAAAlJ,MAAA,SAAA3Z,GACA,OAAA1C,UAAAhC,QACA2e,EAAA+vC,IAAArwC,GAAA3Z,GAAA+3B,GAAAx7B,EAAAw7B,IACAlV,GAFAlJ,GAIAkJ,EAAAtmB,UAAA,SAAAc,GACA,OAAAC,UAAAhC,QACA2e,EAAA+vC,GAAArwC,EAAAoe,IAAAx7B,GAAAc,GAAA06B,IACAlV,GAFAtmB,GAIAsmB,EAAAlJ,MAAA,KA0BAtgB,EAAAwnB,IAAAwrC,SAAA,SAAA/lD,EAAAwT,GACA,IAAA3hB,EAAAm0D,GAAAxyC,EAAA,GAAAxT,EAAA,IAAAyxB,GAAAslB,EAAA/2C,EAAA,GAAAyxB,GAAAwlB,EAAAzjC,EAAA,GAAAie,GAAAw0B,EAAArwD,KAAAw8B,IAAA4zB,GAAAE,EAAAtwD,KAAA6iC,IAAAutB,GAAAtQ,EAAA9/C,KAAAw8B,IAAA2kB,GAAAtB,EAAA7/C,KAAA6iC,IAAAse,GAAAoP,EAAAvwD,KAAAw8B,IAAA6kB,GAAAwE,EAAA7lD,KAAA6iC,IAAAwe,GACA,OAAArhD,KAAAsjC,MAAAtjC,KAAAgtB,MAAA/wB,EAAA4pD,EAAAwK,GAAAp0D,KAAA4jD,EAAA0Q,EAAAzQ,EAAA+F,EAAAyK,GAAAr0D,GAAA6jD,EAAAyQ,EAAA1Q,EAAAgG,EAAAyK,IAEAnzD,EAAAwnB,IAAA6rC,UAAA,WACA,IAAAryB,EAAAnW,EAAAyoC,EAAAC,EAAAtyB,EAAA/kB,EAAAs3C,EAAAC,EAAA9sD,EAAAC,EAAAqwC,EAAAgG,EAAAnf,EAAA,GAAAC,EAAAD,EAAA41B,EAAA,GAAAC,EAAA,IAAAzwD,EAAA,IACA,SAAAmwD,IACA,OACA1+B,KAAA,kBACA6rB,YAAAzrC,KAGA,SAAAA,IACA,OAAA/U,EAAAuU,MAAA1R,KAAAW,KAAA+vD,EAAAG,KAAAJ,EAAAI,GAAAt/C,IAAA6iC,GAAA17B,OAAAvb,EAAAuU,MAAA1R,KAAAW,KAAAiwD,EAAAE,KAAAH,EAAAG,GAAAv/C,IAAA6oC,IAAA1hC,OAAAvb,EAAAuU,MAAA1R,KAAAW,KAAAqnB,EAAAiT,KAAAkD,EAAAlD,GAAA54B,OAAA,SAAAyB,GACA,OAAA7D,EAAA6D,EAAA+sD,GAAAv1B,KACO/pB,IAAAzN,IAAA4U,OAAAvb,EAAAuU,MAAA1R,KAAAW,KAAA0Y,EAAA6hB,KAAAkD,EAAAlD,GAAA74B,OAAA,SAAA0B,GACP,OAAA9D,EAAA8D,EAAA+sD,GAAAx1B,KACO/pB,IAAAxN,IA2DP,OAzDAysD,EAAAt+C,MAAA,WACA,OAAAA,IAAAX,IAAA,SAAAosC,GACA,OACA7rB,KAAA,aACA6rB,kBAIA6S,EAAAO,QAAA,WACA,OACAj/B,KAAA,UACA6rB,YAAA,CAAAvJ,EAAAsc,GAAAh4C,OAAA0hC,EAAAuW,GAAAzlD,MAAA,GAAAkpC,EAAAqc,GAAA3d,UAAA5nC,MAAA,GAAAkvC,EAAAwW,GAAA9d,UAAA5nC,MAAA,OAGAslD,EAAAt9C,OAAA,SAAA/R,GACA,OAAAC,UAAAhC,OACAoxD,EAAAQ,YAAA7vD,GAAA8vD,YAAA9vD,GADAqvD,EAAAS,eAGAT,EAAAQ,YAAA,SAAA7vD,GACA,OAAAC,UAAAhC,QACAsxD,GAAAvvD,EAAA,MAAAsvD,GAAAtvD,EAAA,MACAyvD,GAAAzvD,EAAA,MAAAwvD,GAAAxvD,EAAA,MACAuvD,EAAAD,IAAAtvD,EAAAuvD,IAAAD,IAAAtvD,GACAyvD,EAAAD,IAAAxvD,EAAAyvD,IAAAD,IAAAxvD,GACAqvD,EAAAnwD,cALA,EAAAqwD,EAAAE,GAAA,CAAAH,EAAAE,KAOAH,EAAAS,YAAA,SAAA9vD,GACA,OAAAC,UAAAhC,QACA4oB,GAAA7mB,EAAA,MAAAg9B,GAAAh9B,EAAA,MACAkY,GAAAlY,EAAA,MAAAi9B,GAAAj9B,EAAA,MACA6mB,EAAAmW,IAAAh9B,EAAA6mB,IAAAmW,IAAAh9B,GACAkY,EAAA+kB,IAAAj9B,EAAAkY,IAAA+kB,IAAAj9B,GACAqvD,EAAAnwD,cALA,EAAA2nB,EAAA3O,GAAA,CAAA8kB,EAAAC,KAOAoyB,EAAA3hC,KAAA,SAAA1tB,GACA,OAAAC,UAAAhC,OACAoxD,EAAAU,UAAA/vD,GAAAgwD,UAAAhwD,GADAqvD,EAAAW,aAGAX,EAAAU,UAAA,SAAA/vD,GACA,OAAAC,UAAAhC,QACAyxD,GAAA1vD,EAAA,GAAA2vD,GAAA3vD,EAAA,GACAqvD,GAFA,CAAAK,EAAAC,IAIAN,EAAAW,UAAA,SAAAhwD,GACA,OAAAC,UAAAhC,QACA67B,GAAA95B,EAAA,GAAA+5B,GAAA/5B,EAAA,GACAqvD,GAFA,CAAAv1B,EAAAC,IAIAs1B,EAAAnwD,UAAA,SAAAc,GACA,OAAAC,UAAAhC,QACAiB,GAAAc,EACA2C,EAAA0rD,GAAAn2C,EAAA+kB,EAAA,IACAr6B,EAAA0rD,GAAAznC,EAAAmW,EAAA99B,GACA+zC,EAAAob,GAAAoB,EAAAD,EAAA,IACAvW,EAAAqV,GAAAiB,EAAAD,EAAApwD,GACAmwD,GANAnwD,GAQAmwD,EAAAQ,YAAA,WAAA11B,IAAA,QAAAA,MAAA21B,YAAA,WAAA31B,IAAA,QAAAA,OAwBAn+B,EAAAwnB,IAAAysC,SAAA,WACA,IAAAC,EAAAC,EAAAxhC,EAAA4/B,GAAA7/B,EAAA8/B,GACA,SAAAyB,IACA,OACAt/B,KAAA,aACA6rB,YAAA,CAAA0T,GAAAvhC,EAAA/tB,MAAAJ,KAAAP,WAAAkwD,GAAAzhC,EAAA9tB,MAAAJ,KAAAP,aAmBA,OAhBAgwD,EAAAjB,SAAA,WACA,OAAAhzD,EAAAwnB,IAAAwrC,SAAAkB,GAAAvhC,EAAA/tB,MAAAJ,KAAAP,WAAAkwD,GAAAzhC,EAAA9tB,MAAAJ,KAAAP,aAEAgwD,EAAAthC,OAAA,SAAA3uB,GACA,OAAAC,UAAAhC,QACA0wB,EAAA3uB,EAAAkwD,EAAA,mBAAAlwD,EAAA,KAAAA,EACAiwD,GAFAthC,GAIAshC,EAAAvhC,OAAA,SAAA1uB,GACA,OAAAC,UAAAhC,QACAywB,EAAA1uB,EAAAmwD,EAAA,mBAAAnwD,EAAA,KAAAA,EACAiwD,GAFAvhC,GAIAuhC,EAAA/wD,UAAA,WACA,OAAAe,UAAAhC,OAAAgyD,EAAA,GAEAA,GAEAj0D,EAAAwnB,IAAA5G,YAAA,SAAA+R,EAAAD,GACA,OAEA7H,EAFA8H,EAAA,GAAA+L,GAEAxiB,EAFAyW,EAAA,GAAA+L,GAEAsC,EAFAtO,EAAA,GAAAgM,GAEAuC,EAFAvO,EAAA,GAAAgM,GAGA01B,EAAAvxD,KAAA6iC,IAAAxpB,GAAAm4C,EAAAxxD,KAAAw8B,IAAAnjB,GAAAo4C,EAAAzxD,KAAA6iC,IAAAzE,GAAAszB,EAAA1xD,KAAAw8B,IAAA4B,GAAAuzB,EAAAJ,EAAAvxD,KAAA6iC,IAAA7a,GAAA4pC,EAAAL,EAAAvxD,KAAAw8B,IAAAxU,GAAA6pC,EAAAJ,EAAAzxD,KAAA6iC,IAAA1E,GAAA2zB,EAAAL,EAAAzxD,KAAAw8B,IAAA2B,GAAA9iC,EAAA,EAAA2E,KAAAo8B,KAAAp8B,KAAAgtB,KAAAuP,GAAA6B,EAAA/kB,GAAAk4C,EAAAE,EAAAl1B,GAAA4B,EAAAnW,KAAAvgB,EAAA,EAAAzH,KAAAw8B,IAAAnhC,IACA0iB,EAAA1iB,EAAA,SAAAY,GACA,IAAA89C,EAAA/5C,KAAAw8B,IAAAvgC,GAAAZ,GAAAoM,EAAAqyC,EAAA95C,KAAAw8B,IAAAnhC,EAAAY,GAAAwL,EAAA3D,EAAAg2C,EAAA6X,EAAA5X,EAAA8X,EAAA9tD,EAAA+1C,EAAA8X,EAAA7X,EAAA+X,EAAA99C,EAAA8lC,EAAA0X,EAAAzX,EAAA2X,EACA,OAAA1xD,KAAAsjC,MAAAv/B,EAAAD,GAAAg4B,GAAA97B,KAAAsjC,MAAAtvB,EAAAhU,KAAAgtB,KAAAlpB,IAAAC,MAAA+3B,KACK,WACL,OAAA9T,EAAA8T,GAAAziB,EAAAyiB,MAEAq0B,SAAA90D,EACA0iB,EATA,IAAAiK,EAAA3O,EAAA8kB,EAAAC,EACAmzB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAz2D,EAAAoM,EACAsW,GASA5gB,EAAAwnB,IAAAvlB,OAAA,SAAA3C,GAGA,OAFA6tD,GAAA,EACAntD,EAAAwnB,IAAAu4B,OAAAzgD,EAAAs1D,IACAzH,IAGA,IAAAyH,GAAA,CACAtU,OAAA3sB,EACAtK,MAAAsK,EACAytB,UAKA,WACA,IAAAqB,EAAAE,EAAAD,EAQA,SAAAE,EAAAC,EAAAC,GACA,IAAAK,EAAAtgD,KAAAw8B,IAAAyjB,GAAApkB,IAAAwkB,EAAArgD,KAAA6iC,IAAAod,GAAAhkD,EAAAgE,GAAA+/C,GAAAnkB,IAAA+jB,GAAA0Q,EAAAtwD,KAAA6iC,IAAA5mC,GACAquD,IAAAtqD,KAAAsjC,MAAAtjC,KAAAgtB,MAAA/wB,EAAAokD,EAAArgD,KAAAw8B,IAAAvgC,SAAA4jD,EAAAS,EAAAR,EAAAO,EAAAiQ,GAAAr0D,GAAA6jD,EAAAQ,EAAAT,EAAAQ,EAAAiQ,GACA1Q,EAAAI,EAAAF,EAAAQ,EAAAT,EAAAQ,EAVA0R,GAAAvrC,MAAA,SAAAw5B,EAAAC,GACAL,EAAAI,EAAAnkB,GAAAikB,EAAA9/C,KAAAw8B,IAAAyjB,GAAApkB,IAAAgkB,EAAA7/C,KAAA6iC,IAAAod,GACA8R,GAAAvrC,MAAAu5B,GAEAgS,GAAAvT,QAAA,WACAuT,GAAAvrC,MAAAurC,GAAAvT,QAAA1tB,IAXA0tB,QAAA1tB,EACA2tB,aAAA3tB,EACA4tB,WAAA5tB,GAiBA,SAAAkhC,GAAA3iD,EAAAoO,GACA,SAAAw0C,EAAAjS,EAAAC,GACA,IAAAiS,EAAAlyD,KAAA6iC,IAAAmd,GAAAK,EAAArgD,KAAA6iC,IAAAod,GAAAx4C,EAAA4H,EAAA6iD,EAAA7R,GACA,OAAA54C,EAAA44C,EAAArgD,KAAAw8B,IAAAwjB,GAAAv4C,EAAAzH,KAAAw8B,IAAAyjB,IAMA,OAJAgS,EAAA3yB,OAAA,SAAAx7B,EAAAC,GACA,IAAA04B,EAAAz8B,KAAAgtB,KAAAlpB,IAAAC,KAAA3I,EAAAqiB,EAAAgf,GAAA01B,EAAAnyD,KAAAw8B,IAAAphC,GAAAg3D,EAAApyD,KAAA6iC,IAAAznC,GACA,OAAA4E,KAAAsjC,MAAAx/B,EAAAquD,EAAA11B,EAAA21B,GAAApyD,KAAAo8B,KAAAK,GAAA14B,EAAAouD,EAAA11B,KAEAw1B,EAEA,IAAAI,GAAAL,GAAA,SAAAM,GACA,OAAAtyD,KAAAgtB,KAAA,KAAAslC,KACG,SAAA71B,GACH,SAAAz8B,KAAAo8B,KAAAK,EAAA,MAEAt/B,EAAAwnB,IAAA4tC,mBAAA,WACA,OAAAhG,GAAA8F,MACG7J,IAAA6J,GACH,IAAAG,GAAAR,GAAA,SAAAM,GACA,IAAAl3D,EAAA4E,KAAAk8B,KAAAo2B,GACA,OAAAl3D,KAAA4E,KAAAw8B,IAAAphC,IACGu0B,GAIH,SAAA8iC,GAAAtR,EAAAE,GACA,IAAAxB,EAAA7/C,KAAA6iC,IAAAse,GAAAllD,EAAA,SAAAgkD,GACA,OAAAjgD,KAAA2sC,IAAAnR,GAAA,EAAAykB,EAAA,IACKzjD,EAAA2kD,IAAAE,EAAArhD,KAAAw8B,IAAA2kB,GAAAnhD,KAAAq9B,IAAAwiB,EAAA7/C,KAAA6iC,IAAAwe,IAAArhD,KAAAq9B,IAAAphC,EAAAolD,GAAAplD,EAAAklD,IAAAuR,EAAA7S,EAAA7/C,KAAAq/B,IAAApjC,EAAAklD,GAAA3kD,KACL,IAAAA,EAAA,OAAAm2D,GACA,SAAAzK,EAAAlI,EAAAC,GACAyS,EAAA,EACAzS,GAAArkB,GAAAN,KAAA2kB,GAAArkB,GAAAN,IAEA2kB,EAAArkB,GAAAN,KAAA2kB,EAAArkB,GAAAN,IAEA,IAAAmB,EAAAi2B,EAAA1yD,KAAAq/B,IAAApjC,EAAAgkD,GAAAzjD,GACA,OAAAigC,EAAAz8B,KAAAw8B,IAAAhgC,EAAAwjD,GAAA0S,EAAAj2B,EAAAz8B,KAAA6iC,IAAArmC,EAAAwjD,IAMA,OAJAkI,EAAA5oB,OAAA,SAAAx7B,EAAAC,GACA,IAAAokD,EAAAuK,EAAA3uD,EAAA04B,EAAAV,GAAAv/B,GAAAwD,KAAAgtB,KAAAlpB,IAAAqkD,KACA,OAAAnoD,KAAAsjC,MAAAx/B,EAAAqkD,GAAA3rD,EAAA,EAAAwD,KAAA+lD,KAAA/lD,KAAAq/B,IAAAqzB,EAAAj2B,EAAA,EAAAjgC,IAAAo/B,KAEAssB,EAKA,SAAA0K,GAAAzR,EAAAE,GACA,IAAAxB,EAAA7/C,KAAA6iC,IAAAse,GAAA3kD,EAAA2kD,IAAAE,EAAArhD,KAAAw8B,IAAA2kB,IAAAtB,EAAA7/C,KAAA6iC,IAAAwe,OAAAF,GAAA0R,EAAAhT,EAAArjD,EAAA2kD,EACA,GAAAlhD,EAAAzD,GAAA8+B,GAAA,OAAAszB,GACA,SAAA1G,EAAAlI,EAAAC,GACA,IAAAxjB,EAAAo2B,EAAA5S,EACA,OAAAxjB,EAAAz8B,KAAAw8B,IAAAhgC,EAAAwjD,GAAA6S,EAAAp2B,EAAAz8B,KAAA6iC,IAAArmC,EAAAwjD,IAMA,OAJAkI,EAAA5oB,OAAA,SAAAx7B,EAAAC,GACA,IAAAokD,EAAA0K,EAAA9uD,EACA,OAAA/D,KAAAsjC,MAAAx/B,EAAAqkD,GAAA3rD,EAAAq2D,EAAA92B,GAAAv/B,GAAAwD,KAAAgtB,KAAAlpB,IAAAqkD,OAEAD,GArCA/qD,EAAAwnB,IAAAmuC,qBAAA,WACA,OAAAvG,GAAAiG,MACGhK,IAAAgK,IAqBHr1D,EAAAwnB,IAAAouC,eAAA,WACA,OAAApL,GAAA8K,MACGjK,IAAAiK,IAcHt1D,EAAAwnB,IAAAquC,iBAAA,WACA,OAAArL,GAAAiL,MACGpK,IAAAoK,GACH,IAAAK,GAAAjB,GAAA,SAAAM,GACA,SAAAA,GACGtyD,KAAA+lD,MAIH,SAAA4M,GAAA3S,EAAAC,GACA,OAAAD,EAAAhgD,KAAAq9B,IAAAr9B,KAAA2sC,IAAAnR,GAAA,EAAAykB,EAAA,KAKA,SAAAiT,GAAAhI,GACA,IAAAiI,EAAAh4D,EAAAoxD,GAAArB,GAAA77C,EAAAlU,EAAAkU,MAAAmwB,EAAArkC,EAAAqkC,UAAA4oB,EAAAjtD,EAAAitD,WAqBA,OApBAjtD,EAAAkU,MAAA,WACA,IAAAsd,EAAAtd,EAAAtN,MAAA5G,EAAAiG,WACA,OAAAurB,IAAAxxB,EAAAg4D,EAAAh4D,EAAAitD,WAAA,MAAAjtD,EAAAwxB,GAEAxxB,EAAAqkC,UAAA,WACA,IAAA7S,EAAA6S,EAAAz9B,MAAA5G,EAAAiG,WACA,OAAAurB,IAAAxxB,EAAAg4D,EAAAh4D,EAAAitD,WAAA,MAAAjtD,EAAAwxB,GAEAxxB,EAAAitD,WAAA,SAAAjnD,GACA,IAAAwrB,EAAAy7B,EAAArmD,MAAA5G,EAAAiG,WACA,GAAAurB,IAAAxxB,GACA,GAAAg4D,EAAA,MAAAhyD,EAAA,CACA,IAAAsG,EAAA+zB,GAAAnsB,IAAApT,EAAAujC,IACA4oB,EAAA,EAAAnsD,EAAA,GAAAwL,EAAAxL,EAAA,GAAAwL,GAAA,CAAAxL,EAAA,GAAAwL,EAAAxL,EAAA,GAAAwL,WAEO0rD,IACPxmC,EAAA,MAEA,OAAAA,GAEAxxB,EAAAitD,WAAA,OA/BAjrD,EAAAwnB,IAAAyuC,SAAA,WACA,OAAA7G,GAAA0G,MACGzK,IAAAyK,GAIHN,GAAArzB,OAAA,SAAAx7B,EAAAC,GACA,OAAAD,EAAA,EAAA9D,KAAA+lD,KAAA/lD,KAAAs8B,IAAAv4B,IAAA63B,MA0BAz+B,EAAAwnB,IAAA0uC,SAAA,WACA,OAAAH,GAAAP,MACGnK,IAAAmK,GACH,IAAAW,GAAAtB,GAAA,WACA,UACGhyD,KAAAo8B,OACHj/B,EAAAwnB,IAAA4uC,aAAA,WACA,OAAAhH,GAAA+G,MACG9K,IAAA8K,GACH,IAAAE,GAAAxB,GAAA,SAAAM,GACA,YAAAA,IACG,SAAA71B,GACH,SAAAz8B,KAAA+lD,KAAAtpB,KAKA,SAAAg3B,GAAAzT,EAAAC,GACA,OAAAjgD,KAAAq9B,IAAAr9B,KAAA2sC,IAAAnR,GAAA,EAAAykB,EAAA,KAAAD,GAiBA,SAAA0T,GAAAr4D,GACA,OAAAA,EAAA,GAEA,SAAAs4D,GAAAt4D,GACA,OAAAA,EAAA,GA2BA,SAAAu4D,GAAA/uD,GAEA,IADA,IAAArI,EAAAqI,EAAAzF,OAAAy0D,EAAA,MAAAC,EAAA,EACA/4D,EAAA,EAAmBA,EAAAyB,EAAOzB,IAAA,CAC1B,KAAA+4D,EAAA,GAAA93B,GAAAn3B,EAAAgvD,EAAAC,EAAA,IAAAjvD,EAAAgvD,EAAAC,EAAA,IAAAjvD,EAAA9J,KAAA,KAAA+4D,EACAD,EAAAC,KAAA/4D,EAEA,OAAA84D,EAAA3oD,MAAA,EAAA4oD,GAEA,SAAAC,GAAA3pD,EAAAwT,GACA,OAAAxT,EAAA,GAAAwT,EAAA,IAAAxT,EAAA,GAAAwT,EAAA,IA7DAzgB,EAAAwnB,IAAAqvC,cAAA,WACA,OAAAzH,GAAAiH,MACGhL,IAAAgL,GAIHC,GAAAn0B,OAAA,SAAAx7B,EAAAC,GACA,QAAAA,EAAA,EAAA/D,KAAA+lD,KAAA/lD,KAAAs8B,IAAAx4B,IAAA83B,MAEAz+B,EAAAwnB,IAAAsvC,mBAAA,WACA,IAAAjuC,EAAAktC,GAAAO,IAAAz1B,EAAAhY,EAAAgY,OAAAgmB,EAAAh+B,EAAAg+B,OAQA,OAPAh+B,EAAAgY,OAAA,SAAA78B,GACA,OAAAA,EAAA68B,EAAA,EAAA78B,EAAA,GAAAA,EAAA,OAAAA,EAAA68B,KAAA,IAAA78B,EAAA,KAEA6kB,EAAAg+B,OAAA,SAAA7iD,GACA,OAAAA,EAAA6iD,EAAA,CAAA7iD,EAAA,GAAAA,EAAA,GAAAA,EAAA/B,OAAA,EAAA+B,EAAA,WACA,EADAA,EAAA6iD,KACA,GAAA7iD,EAAA,GAAAA,EAAA,QAEA6iD,EAAA,YACGwE,IAAAiL,GACHt2D,EAAA+2D,KAAA,GAOA/2D,EAAA+2D,KAAAL,KAAA,SAAAM,GACA,IAAArwD,EAAA4vD,GAAA3vD,EAAA4vD,GACA,GAAAvyD,UAAAhC,OAAA,OAAAy0D,EAAAM,GACA,SAAAN,EAAAjwD,GACA,GAAAA,EAAAxE,OAAA,WACA,IAAArE,EAAAq5D,EAAA9mB,GAAAxpC,GAAAuwD,EAAA/mB,GAAAvpC,GAAAvH,EAAAoH,EAAAxE,OAAAyF,EAAA,GAAAyvD,EAAA,GACA,IAAAv5D,EAAA,EAAiBA,EAAAyB,EAAOzB,IACxB8J,EAAAjG,KAAA,EAAAw1D,EAAAl5D,KAAAyG,KAAAiC,EAAA7I,OAAAs5D,EAAAn5D,KAAAyG,KAAAiC,EAAA7I,UAGA,IADA8J,EAAAwG,KAAA0oD,IACAh5D,EAAA,EAAiBA,EAAAyB,EAAOzB,IAAAu5D,EAAA11D,KAAA,CAAAiG,EAAA9J,GAAA,IAAA8J,EAAA9J,GAAA,KACxB,IAAAw5D,EAAAX,GAAA/uD,GAAA2vD,EAAAZ,GAAAU,GACAG,EAAAD,EAAA,KAAAD,EAAA,GAAAG,EAAAF,IAAAp1D,OAAA,KAAAm1D,IAAAn1D,OAAA,GAAA+kD,EAAA,GACA,IAAAppD,EAAAw5D,EAAAn1D,OAAA,EAAgCrE,GAAA,IAAQA,EAAAopD,EAAAvlD,KAAAgF,EAAAiB,EAAA0vD,EAAAx5D,IAAA,KACxC,IAAAA,GAAA05D,EAAyB15D,EAAAy5D,EAAAp1D,OAAAs1D,IAA8B35D,EAAAopD,EAAAvlD,KAAAgF,EAAAiB,EAAA2vD,EAAAz5D,IAAA,KACvD,OAAAopD,EAQA,OANA0P,EAAA/vD,EAAA,SAAA3C,GACA,OAAAC,UAAAhC,QAAA0E,EAAA3C,EAAA0yD,GAAA/vD,GAEA+vD,EAAA9vD,EAAA,SAAA5C,GACA,OAAAC,UAAAhC,QAAA2E,EAAA5C,EAAA0yD,GAAA9vD,GAEA8vD,GAaA12D,EAAA+2D,KAAA/P,QAAA,SAAAxG,GAEA,OADA1rB,EAAA0rB,EAAAgX,IACAhX,GAEA,IAAAgX,GAAAx3D,EAAA+2D,KAAA/P,QAAAxnD,UAAA,GA+CA,SAAAi4D,GAAA/3D,EAAAuN,EAAAwT,GACA,OAAAA,EAAA,GAAAxT,EAAA,KAAAvN,EAAA,GAAAuN,EAAA,KAAAwT,EAAA,GAAAxT,EAAA,KAAAvN,EAAA,GAAAuN,EAAA,IAEA,SAAAyqD,GAAAz5D,EAAAC,EAAA+O,EAAAwT,GACA,IAAAugB,EAAA/iC,EAAA,GAAA05D,EAAA1qD,EAAA,GAAA2qD,EAAA15D,EAAA,GAAA8iC,EAAA62B,EAAAp3C,EAAA,GAAAk3C,EAAA12B,EAAAhjC,EAAA,GAAA65D,EAAA7qD,EAAA,GAAA8qD,EAAA75D,EAAA,GAAA+iC,EAAA+2B,EAAAv3C,EAAA,GAAAq3C,EAAAG,GAAAJ,GAAA52B,EAAA62B,GAAAE,GAAAh3B,EAAA22B,KAAAK,EAAAJ,EAAAC,EAAAE,GACA,OAAA/2B,EAAAi3B,EAAAL,EAAA32B,EAAAg3B,EAAAF,GAEA,SAAAG,GAAA1X,GACA,IAAAvzC,EAAAuzC,EAAA,GAAA//B,EAAA+/B,IAAAv+C,OAAA,GACA,QAAAgL,EAAA,GAAAwT,EAAA,IAAAxT,EAAA,GAAAwT,EAAA,IAvDA+2C,GAAAj0C,KAAA,WAEA,IADA,IAAAtW,EAAArP,GAAA,EAAAyB,EAAAmF,KAAAvC,OAAAwe,EAAAjc,KAAAnF,EAAA,GAAAkkB,EAAA,IACA3lB,EAAAyB,GACA4N,EAAAwT,EACAA,EAAAjc,KAAA5G,GACA2lB,GAAAtW,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAEA,SAAA8C,GAEAi0C,GAAA93C,SAAA,SAAApV,GACA,IAAA2C,EAAAhP,EAAAL,GAAA,EAAAyB,EAAAmF,KAAAvC,OAAA0E,EAAA,EAAAC,EAAA,EAAA6Z,EAAAjc,KAAAnF,EAAA,GAEA,IADA4E,UAAAhC,SAAAqI,GAAA,KAAA9F,KAAA+e,WACA3lB,EAAAyB,GACA4N,EAAAwT,EACAA,EAAAjc,KAAA5G,GACAK,EAAAgP,EAAA,GAAAwT,EAAA,GAAAA,EAAA,GAAAxT,EAAA,GACAtG,IAAAsG,EAAA,GAAAwT,EAAA,IAAAxiB,EACA2I,IAAAqG,EAAA,GAAAwT,EAAA,IAAAxiB,EAEA,OAAA0I,EAAA2D,EAAA1D,EAAA0D,IAEAktD,GAAAtR,KAAA,SAAA5oB,GAEA,IADA,IAAA66B,EAAAvwD,EAAA5J,EAAAyiB,EAAAxiB,EAAAC,EAAAgjD,EAAAgX,GAAA56B,GAAA1/B,GAAA,EAAAyB,EAAAmF,KAAAvC,OAAAi2D,GAAA1zD,MAAAyI,EAAAzI,KAAAnF,EAAA,KACAzB,EAAAyB,GAAA,CAMA,IALA84D,EAAA76B,EAAAvvB,QACAuvB,EAAAr7B,OAAA,EACAwe,EAAAjc,KAAA5G,GACAK,EAAAk6D,GAAAn6D,EAAAm6D,EAAAl2D,OAAAi/C,GAAA,GACAt5C,GAAA,IACAA,EAAA5J,GAEAy5D,GADAv5D,EAAAi6D,EAAAvwD,GACAqF,EAAAwT,IACAg3C,GAAAx5D,EAAAgP,EAAAwT,IACA6c,EAAA77B,KAAAi2D,GAAAz5D,EAAAC,EAAA+O,EAAAwT,IAEA6c,EAAA77B,KAAAvD,IACSu5D,GAAAx5D,EAAAgP,EAAAwT,IACT6c,EAAA77B,KAAAi2D,GAAAz5D,EAAAC,EAAA+O,EAAAwT,IAEAxiB,EAAAC,EAEAgjD,GAAA5jB,EAAA77B,KAAA67B,EAAA,IACArwB,EAAAwT,EAEA,OAAA6c,GAaA,IAAA86B,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,GAAAC,GAAA,GACA,SAAAC,KACAC,GAAAp0D,MACAA,KAAAq0D,KAAAr0D,KAAAs0D,KAAAt0D,KAAAglB,OAAA,KAEA,SAAAuvC,GAAAD,GACA,IAAAE,EAAAP,GAAAtQ,OAAA,IAAAwQ,GAEA,OADAK,EAAAF,OACAE,EAEA,SAAAC,GAAAD,GACAE,GAAAF,GACAV,GAAA5pD,OAAAsqD,GACAP,GAAAh3D,KAAAu3D,GACAJ,GAAAI,GAEA,SAAAG,GAAAH,GACA,IAAAxvC,EAAAwvC,EAAAxvC,OAAA7iB,EAAA6iB,EAAA7iB,EAAAC,EAAA4iB,EAAAvI,GAAAm4C,EAAA,CACAzyD,IACAC,KACKyyD,EAAAL,EAAAM,EAAA7/B,EAAAu/B,EAAA7lB,EAAAomB,EAAA,CAAAP,GACLC,GAAAD,GAEA,IADA,IAAAQ,EAAAH,EACAG,EAAAhwC,QAAA1mB,EAAA6D,EAAA6yD,EAAAhwC,OAAA7iB,GAAAw3B,IAAAr7B,EAAA8D,EAAA4yD,EAAAhwC,OAAAvI,IAAAkd,IACAk7B,EAAAG,EAAAF,EACAC,EAAAE,QAAAD,GACAP,GAAAO,GACAA,EAAAH,EAEAE,EAAAE,QAAAD,GACAN,GAAAM,GAEA,IADA,IAAAE,EAAAjgC,EACAigC,EAAAlwC,QAAA1mB,EAAA6D,EAAA+yD,EAAAlwC,OAAA7iB,GAAAw3B,IAAAr7B,EAAA8D,EAAA8yD,EAAAlwC,OAAAvI,IAAAkd,IACA1E,EAAAigC,EAAAvmB,EACAomB,EAAA93D,KAAAi4D,GACAT,GAAAS,GACAA,EAAAjgC,EAEA8/B,EAAA93D,KAAAi4D,GACAR,GAAAQ,GACA,IAAAC,EAAAC,EAAAL,EAAAt3D,OACA,IAAA03D,EAAA,EAAkBA,EAAAC,IAAcD,EAChCD,EAAAH,EAAAI,GACAH,EAAAD,EAAAI,EAAA,GACAE,GAAAH,EAAAb,KAAAW,EAAAV,KAAAY,EAAAZ,KAAAM,GAEAI,EAAAD,EAAA,IACAG,EAAAH,EAAAK,EAAA,IACAf,KAAAiB,GAAAN,EAAAV,KAAAY,EAAAZ,KAAA,KAAAM,GACAW,GAAAP,GACAO,GAAAL,GAEA,SAAAM,GAAAlB,GAEA,IADA,IAAAU,EAAAE,EAAAO,EAAAC,EAAAvzD,EAAAmyD,EAAAnyD,EAAAwzD,EAAArB,EAAAlyD,EAAAmjB,EAAAuuC,GAAAt0D,EACA+lB,GAEA,IADAkwC,EAAAG,GAAArwC,EAAAowC,GAAAxzD,GACAw3B,GAAApU,IAAAwxB,MAAiC,CAEjC,MADA2e,EAAAvzD,EAAA0zD,GAAAtwC,EAAAowC,IACAh8B,IAMS,CACT87B,GAAA97B,IACAq7B,EAAAzvC,EAAAuvC,EACAI,EAAA3vC,GACWmwC,GAAA/7B,IACXq7B,EAAAzvC,EACA2vC,EAAA3vC,EAAAopB,GAEAqmB,EAAAE,EAAA3vC,EAEA,MAfA,IAAAA,EAAAuwC,EAAA,CACAd,EAAAzvC,EACA,MAEAA,IAAAuwC,EAeA,IAAAC,EAAAxB,GAAAD,GAEA,GADAR,GAAA3jD,OAAA6kD,EAAAe,GACAf,GAAAE,EAAA,CACA,GAAAF,IAAAE,EAOA,OANAR,GAAAM,GACAE,EAAAX,GAAAS,EAAAV,MACAR,GAAA3jD,OAAA4lD,EAAAb,GACAa,EAAA1B,KAAAa,EAAAb,KAAAiB,GAAAN,EAAAV,KAAAyB,EAAAzB,MACAiB,GAAAP,QACAO,GAAAL,GAGA,GAAAA,EAAA,CAIAR,GAAAM,GACAN,GAAAQ,GACA,IAAAc,EAAAhB,EAAAV,KAAA5P,EAAAsR,EAAA7zD,EAAAwiD,EAAAqR,EAAA5zD,EAAA6zD,EAAA3B,EAAAnyD,EAAAuiD,EAAAj7C,EAAA6qD,EAAAlyD,EAAAuiD,EAAAuR,EAAAhB,EAAAZ,KAAA93C,EAAA05C,EAAA/zD,EAAAuiD,EAAAjoC,EAAAy5C,EAAA9zD,EAAAuiD,EAAAjrD,EAAA,GAAAu8D,EAAAx5C,EAAAhT,EAAA+S,GAAA25C,EAAAF,IAAAxsD,IAAA2sD,EAAA55C,IAAAC,IAAAm4C,EAAA,CACAzyD,GAAAsa,EAAA05C,EAAA1sD,EAAA2sD,GAAA18D,EAAAgrD,EACAtiD,GAAA6zD,EAAAG,EAAA55C,EAAA25C,GAAAz8D,EAAAirD,GAEA0Q,GAAAH,EAAAb,KAAA2B,EAAAE,EAAAtB,GACAmB,EAAA1B,KAAAiB,GAAAU,EAAA1B,EAAA,KAAAM,GACAM,EAAAb,KAAAiB,GAAAhB,EAAA4B,EAAA,KAAAtB,GACAW,GAAAP,GACAO,GAAAL,QAbAa,EAAA1B,KAAAiB,GAAAN,EAAAV,KAAAyB,EAAAzB,OAeA,SAAAsB,GAAAz7C,EAAAw7C,GACA,IAAArB,EAAAn6C,EAAAm6C,KAAA+B,EAAA/B,EAAAnyD,EAAAm0D,EAAAhC,EAAAlyD,EAAAm0D,EAAAD,EAAAX,EACA,IAAAY,EAAA,OAAAF,EACA,IAAArB,EAAA76C,EAAA26C,EACA,IAAAE,EAAA,OAAA13C,IAEA,IAAAk5C,GADAlC,EAAAU,EAAAV,MACAnyD,EAAAs0D,EAAAnC,EAAAlyD,EAAAs0D,EAAAD,EAAAd,EACA,IAAAe,EAAA,OAAAF,EACA,IAAAG,EAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAAz6C,EAAA06C,EAAAD,EACA,OAAAE,IAAA36C,EAAA5d,KAAAgtB,KAAApP,IAAA,EAAA26C,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,SAAAX,GAAA17C,EAAAw7C,GACA,IAAAT,EAAA/6C,EAAAw0B,EACA,GAAAumB,EAAA,OAAAU,GAAAV,EAAAS,GACA,IAAArB,EAAAn6C,EAAAm6C,KACA,OAAAA,EAAAlyD,IAAAuzD,EAAArB,EAAAnyD,EAAAmb,IAEA,SAAAu5C,GAAAvC,GACAt0D,KAAAs0D,OACAt0D,KAAA82D,MAAA,GAyCA,SAAAC,GAAAtuD,EAAAwT,GACA,OAAAA,EAAAH,MAAArT,EAAAqT,MAEA,SAAAk7C,KACA5C,GAAAp0D,MACAA,KAAAmC,EAAAnC,KAAAoC,EAAApC,KAAAma,IAAAna,KAAAs0D,KAAAt0D,KAAAyc,GAAA,KAEA,SAAA84C,GAAAp7C,GACA,IAAA66C,EAAA76C,EAAA26C,EAAAI,EAAA/6C,EAAAw0B,EACA,GAAAqmB,GAAAE,EAAA,CACA,IAAAc,EAAAhB,EAAAV,KAAA2C,EAAA98C,EAAAm6C,KAAA4B,EAAAhB,EAAAZ,KACA,GAAA0B,IAAAE,EAAA,CACA,IAAAD,EAAAgB,EAAA90D,EAAAsH,EAAAwtD,EAAA70D,EAAAsiD,EAAAsR,EAAA7zD,EAAA8zD,EAAAtR,EAAAqR,EAAA5zD,EAAAqH,EAAA+S,EAAA05C,EAAA/zD,EAAA8zD,EACAv8D,EAAA,GAAAgrD,GADAjoC,EAAAy5C,EAAA9zD,EAAAqH,GACAk7C,EAAAnoC,GACA,KAAA9iB,IAAAkgC,IAAA,CACA,IAAAs9B,EAAAxS,IAAAC,IAAAyR,EAAA55C,IAAAC,IAAAta,GAAAsa,EAAAy6C,EAAAvS,EAAAyR,GAAA18D,EAAA0I,GAAAsiD,EAAA0R,EAAA55C,EAAA06C,GAAAx9D,EAAA+iB,EAAAra,EAAAqH,EACAub,EAAAkvC,GAAAvQ,OAAA,IAAAqT,GACAhyC,EAAA7K,MACA6K,EAAAsvC,KAAA2C,EACAjyC,EAAA7iB,IAAA8zD,EACAjxC,EAAA5iB,EAAAqa,EAAApe,KAAAgtB,KAAAlpB,IAAAC,KACA4iB,EAAAvI,KACAtC,EAAA6K,SAEA,IADA,IAAAuP,EAAA,KAAAhP,EAAAyuC,GAAAx0D,EACA+lB,GACA,GAAAP,EAAA5iB,EAAAmjB,EAAAnjB,GAAA4iB,EAAA5iB,IAAAmjB,EAAAnjB,GAAA4iB,EAAA7iB,GAAAojB,EAAApjB,EAAA,CACA,IAAAojB,EAAAwxB,EAAkC,CAClCxiB,EAAAhP,EAAAuvC,EACA,MAFAvvC,IAAAwxB,MAIO,CACP,IAAAxxB,EAAAuwC,EAAkC,CAClCvhC,EAAAhP,EACA,MAFAA,IAAAuwC,EAMA9B,GAAA7jD,OAAAokB,EAAAvP,GACAuP,IAAAw/B,GAAA/uC,MAEA,SAAA0vC,GAAAv6C,GACA,IAAA6K,EAAA7K,EAAA6K,OACAA,IACAA,EAAA8vC,IAAAf,GAAA/uC,EAAA2pB,GACAqlB,GAAA9pD,OAAA8a,GACAkvC,GAAAj3D,KAAA+nB,GACAovC,GAAApvC,GACA7K,EAAA6K,OAAA,MAaA,SAAAmyC,GAAA9C,EAAA9iD,GACA,IAAA6lD,EAAA/C,EAAAp4C,EACA,GAAAm7C,EAAA,SACA,IAAAC,EAAAC,EAAAC,EAAAlD,EAAA5rD,EAAA4d,EAAA9U,EAAA,MAAAirB,EAAAjrB,EAAA,MAAAmG,EAAAnG,EAAA,MAAAkrB,EAAAlrB,EAAA,MAAAykD,EAAA3B,EAAAh7D,EAAA68D,EAAA7B,EAAAn6D,EAAAs9D,EAAAxB,EAAA7zD,EAAAs1D,EAAAzB,EAAA5zD,EAAAs1D,EAAAxB,EAAA/zD,EAAAw1D,EAAAzB,EAAA9zD,EAAAqwD,GAAA+E,EAAAE,GAAA,EAAAhF,GAAA+E,EAAAE,GAAA,EACA,GAAAA,IAAAF,EAAA,CACA,GAAAhF,EAAApsC,GAAAosC,GAAAj2B,EAAA,OACA,GAAAg7B,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAAn1D,GAAAq6B,EAAA,YAHV86B,EAAA,CACAp1D,EAAAswD,EACArwD,EAAAsV,GAEA0/C,EAAA,CACAj1D,EAAAswD,EACArwD,EAAAq6B,OAEO,CACP,GAAA86B,GAGU,GAAAA,EAAAn1D,EAAAsV,EAAA,YAHV6/C,EAAA,CACAp1D,EAAAswD,EACArwD,EAAAq6B,GAEA26B,EAAA,CACAj1D,EAAAswD,EACArwD,EAAAsV,SAMA,GADA4/C,EAAA5E,GADA2E,GAAAG,EAAAE,IAAAC,EAAAF,IACAhF,EACA4E,GAAA,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAAn1D,GAAAq6B,EAAA,YAHZ86B,EAAA,CACAp1D,GAAAuV,EAAA4/C,GAAAD,EACAj1D,EAAAsV,GAEA0/C,EAAA,CACAj1D,GAAAs6B,EAAA66B,GAAAD,EACAj1D,EAAAq6B,OAES,CACT,GAAA86B,GAGY,GAAAA,EAAAn1D,EAAAsV,EAAA,YAHZ6/C,EAAA,CACAp1D,GAAAs6B,EAAA66B,GAAAD,EACAj1D,EAAAq6B,GAEA26B,EAAA,CACAj1D,GAAAuV,EAAA4/C,GAAAD,EACAj1D,EAAAsV,QAIA,GAAA+/C,EAAAE,EAAA,CACA,GAAAJ,GAGY,GAAAA,EAAAp1D,GAAAq6B,EAAA,YAHZ+6B,EAAA,CACAp1D,EAAAkkB,EACAjkB,EAAAi1D,EAAAhxC,EAAAixC,GAEAF,EAAA,CACAj1D,EAAAq6B,EACAp6B,EAAAi1D,EAAA76B,EAAA86B,OAES,CACT,GAAAC,GAGY,GAAAA,EAAAp1D,EAAAkkB,EAAA,YAHZkxC,EAAA,CACAp1D,EAAAq6B,EACAp6B,EAAAi1D,EAAA76B,EAAA86B,GAEAF,EAAA,CACAj1D,EAAAkkB,EACAjkB,EAAAi1D,EAAAhxC,EAAAixC,GAOA,OAFAjD,EAAA5rD,EAAA8uD,EACAlD,EAAAp4C,EAAAm7C,GACA,EAEA,SAAAQ,GAAA5B,EAAAE,GACAl2D,KAAA3G,EAAA28D,EACAh2D,KAAA9F,EAAAg8D,EACAl2D,KAAAyI,EAAAzI,KAAAic,EAAA,KAEA,SAAAq5C,GAAAU,EAAAE,EAAAqB,EAAAH,GACA,IAAA/C,EAAA,IAAAuD,GAAA5B,EAAAE,GAMA,OALAtC,GAAA32D,KAAAo3D,GACAkD,GAAAlC,GAAAhB,EAAA2B,EAAAE,EAAAqB,GACAH,GAAA/B,GAAAhB,EAAA6B,EAAAF,EAAAoB,GACAvD,GAAAmC,EAAA58D,GAAA09D,MAAA75D,KAAA,IAAA46D,GAAAxD,EAAA2B,EAAAE,IACArC,GAAAqC,EAAA98D,GAAA09D,MAAA75D,KAAA,IAAA46D,GAAAxD,EAAA6B,EAAAF,IACA3B,EASA,SAAAgB,GAAAhB,EAAA2B,EAAAE,EAAAtB,GACAP,EAAA5rD,GAAA4rD,EAAAp4C,EAIKo4C,EAAAh7D,IAAA68D,EACL7B,EAAAp4C,EAAA24C,EAEAP,EAAA5rD,EAAAmsD,GANAP,EAAA5rD,EAAAmsD,EACAP,EAAAh7D,EAAA28D,EACA3B,EAAAn6D,EAAAg8D,GAOA,SAAA2B,GAAAxD,EAAA2B,EAAAE,GACA,IAAAqB,EAAAlD,EAAA5rD,EAAA2uD,EAAA/C,EAAAp4C,EACAjc,KAAAq0D,OACAr0D,KAAAs0D,KAAA0B,EACAh2D,KAAA8b,MAAAo6C,EAAA73D,KAAAsjC,MAAAu0B,EAAA9zD,EAAA4zD,EAAA5zD,EAAA8zD,EAAA/zD,EAAA6zD,EAAA7zD,GAAAkyD,EAAAh7D,IAAA28D,EAAA33D,KAAAsjC,MAAAy1B,EAAAj1D,EAAAo1D,EAAAp1D,EAAAo1D,EAAAn1D,EAAAg1D,EAAAh1D,GAAA/D,KAAAsjC,MAAA41B,EAAAp1D,EAAAi1D,EAAAj1D,EAAAi1D,EAAAh1D,EAAAm1D,EAAAn1D,GAUA,SAAA01D,KACA93D,KAAAR,EAAA,KAEA,SAAA40D,GAAA7uC,GACAA,EAAA6xB,EAAA7xB,EAAA8gC,EAAA9gC,EAAAwxB,EAAAxxB,EAAAuwC,EAAAvwC,EAAAuvC,EAAAvvC,EAAAopB,EAAA,KAkKA,SAAAopB,GAAAC,EAAAzyC,GACA,IAAArqB,EAAAqqB,EAAAuZ,EAAAvZ,EAAAuwC,EAAAhyD,EAAA5I,EAAAk8C,EACAtzC,EACAA,EAAAizC,IAAA77C,EAAA4I,EAAAizC,EAAAjY,EAAuCh7B,EAAAgyD,EAAAh3B,EAEvCk5B,EAAAx4D,EAAAs/B,EAEAA,EAAAsY,EAAAtzC,EACA5I,EAAAk8C,EAAAtY,EACA5jC,EAAA46D,EAAAh3B,EAAAiY,EACA77C,EAAA46D,IAAA56D,EAAA46D,EAAA1e,EAAAl8C,GACA4jC,EAAAiY,EAAA77C,EAEA,SAAA+8D,GAAAD,EAAAzyC,GACA,IAAArqB,EAAAqqB,EAAAuZ,EAAAvZ,EAAAwxB,EAAAjzC,EAAA5I,EAAAk8C,EACAtzC,EACAA,EAAAizC,IAAA77C,EAAA4I,EAAAizC,EAAAjY,EAAuCh7B,EAAAgyD,EAAAh3B,EAEvCk5B,EAAAx4D,EAAAs/B,EAEAA,EAAAsY,EAAAtzC,EACA5I,EAAAk8C,EAAAtY,EACA5jC,EAAA67C,EAAAjY,EAAAg3B,EACA56D,EAAA67C,IAAA77C,EAAA67C,EAAAK,EAAAl8C,GACA4jC,EAAAg3B,EAAA56D,EAEA,SAAAg9D,GAAA3yC,GACA,KAAAA,EAAAwxB,GAAAxxB,IAAAwxB,EACA,OAAAxxB,EAEA,SAAA4yC,GAAAC,EAAAC,GACA,IAAAhyC,EAAA3O,EAAAsN,EAAAsvC,EAAA8D,EAAA1uD,KAAA4uD,IAAA3U,MAKA,IAJAiQ,GAAA,GACAC,GAAA,IAAAlzD,MAAAy3D,EAAA36D,QACAq2D,GAAA,IAAAgE,GACA9D,GAAA,IAAA8D,KAGA,GADA9yC,EAAA+uC,GACAO,KAAAtvC,GAAAsvC,EAAAlyD,EAAA4iB,EAAA5iB,GAAAkyD,EAAAlyD,IAAA4iB,EAAA5iB,GAAAkyD,EAAAnyD,EAAA6iB,EAAA7iB,GACAmyD,EAAAnyD,IAAAkkB,GAAAiuC,EAAAlyD,IAAAsV,IACAm8C,GAAAS,EAAAl7D,GAAA,IAAAy9D,GAAAvC,GACAkB,GAAAlB,GACAjuC,EAAAiuC,EAAAnyD,EAAAuV,EAAA48C,EAAAlyD,GAEAkyD,EAAA8D,EAAAzU,UACO,KAAA3+B,EAGP,MAFA2vC,GAAA3vC,EAAA7K,KAKAk+C,IA3VA,SAAA9mD,GAEA,IADA,IAAAzU,EAAAg6D,EAAAlD,GAAAlS,EAAA+C,GAAAlzC,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAnY,EAAA09D,EAAAr5D,OACArE,OAEA+9D,GADAr6D,EAAAg6D,EAAA19D,GACAmY,KAAAmwC,EAAA5kD,IAAAwB,EAAAxB,EAAA2L,EAAAtG,EAAArF,EAAAmf,EAAA9Z,GAAAw3B,IAAAr7B,EAAAxB,EAAA2L,EAAArG,EAAAtF,EAAAmf,EAAA7Z,GAAAu3B,MACA78B,EAAA2L,EAAA3L,EAAAmf,EAAA,KACA66C,EAAA1rD,OAAAhS,EAAA,IAqVAm/D,CAAAF,GA3aA,SAAA9mD,GAEA,IADA,IAAA+4C,EAAAC,EAAA4I,EAAAG,EAAAkF,EAAAC,EAAAC,EAAAC,EAAAj7C,EAAAC,EAAA0I,EAAA9U,EAAA,MAAAirB,EAAAjrB,EAAA,MAAAmG,EAAAnG,EAAA,MAAAkrB,EAAAlrB,EAAA,MAAAqnD,EAAA/E,GAAAgF,EAAAD,EAAAn7D,OACAo7D,KAEA,IADAL,EAAAI,EAAAC,KACAL,EAAAM,UAIA,IAFAH,GADAD,EAAAF,EAAA1B,OACAr5D,OACAg7D,EAAA,EACAA,EAAAE,GACAxF,GAAAx1C,EAAA+6C,EAAAD,GAAA96C,OAAAxb,EAAAmxD,EAAA31C,EAAAvb,EACAkoD,GAAA5sC,EAAAg7C,IAAAD,EAAAE,GAAAj7C,SAAAvb,EAAAooD,EAAA7sC,EAAAtb,GACA9D,EAAA60D,EAAA7I,GAAA3wB,IAAAr7B,EAAAg1D,EAAA/I,GAAA5wB,MACA++B,EAAAttD,OAAAqtD,EAAA,MAAAZ,IAsKA7B,EAtKAwC,EAAAlE,KAsKAiD,EAtKA55C,EAsKAy5C,EAtKA94D,EAAA60D,EAAA9sC,GAAAsT,IAAA8C,EAAA62B,EAAA35B,GAAA,CACAx3B,EAAAkkB,EACAjkB,EAAA9D,EAAAgsD,EAAAjkC,GAAAsT,GAAA4wB,EAAA9tB,GACWn+B,EAAAg1D,EAAA72B,GAAA9C,IAAA6C,EAAA22B,EAAAx5B,GAAA,CACXx3B,EAAA7D,EAAAisD,EAAA9tB,GAAA9C,GAAA2wB,EAAA9tB,EACAp6B,EAAAq6B,GACWn+B,EAAA60D,EAAA32B,GAAA7C,IAAA25B,EAAA57C,EAAAiiB,GAAA,CACXx3B,EAAAq6B,EACAp6B,EAAA9D,EAAAgsD,EAAA9tB,GAAA7C,GAAA4wB,EAAA7yC,GACWpZ,EAAAg1D,EAAA57C,GAAAiiB,IAAAw5B,EAAA9sC,EAAAsT,GAAA,CACXx3B,EAAA7D,EAAAisD,EAAA7yC,GAAAiiB,GAAA2wB,EAAAjkC,EACAjkB,EAAAsV,GACW,KA2JX28C,WAAA,IAAAuD,GAAA5B,EAAA,MACA3B,EAAA5rD,EAAA8uD,EACAlD,EAAAp4C,EAAAm7C,EACAxD,GAAA32D,KAAAo3D,GACAA,GA/JWmE,EAAAlE,KAAA,SACXqE,GAyJA,IAAA3C,EAAAuB,EAAAH,EACA/C,EAwPA0E,CAAAV,IACA,IAAAW,EAAA,CACAJ,MAAA/E,GACAiD,MAAAlD,IAGA,OADAE,GAAAE,GAAAJ,GAAAC,GAAA,KACAmF,EAEA,SAAAV,GAAA7vD,EAAAwT,GACA,OAAAA,EAAA7Z,EAAAqG,EAAArG,GAAA6Z,EAAA9Z,EAAAsG,EAAAtG,EA7bA00D,GAAA77D,UAAA89D,QAAA,WAEA,IADA,IAAAzE,EAAAqE,EAAA14D,KAAA82D,MAAA2B,EAAAC,EAAAj7D,OACAg7D,MACApE,EAAAqE,EAAAD,GAAApE,MACAp4C,GAAAo4C,EAAA5rD,GAAAiwD,EAAAttD,OAAAqtD,EAAA,GAGA,OADAC,EAAAhvD,KAAAqtD,IACA2B,EAAAj7D,QA4MAo6D,GAAA78D,UAAA,CACA0iB,MAAA,WACA,OAAA1d,KAAAq0D,KAAAh7D,IAAA2G,KAAAs0D,KAAAt0D,KAAAq0D,KAAA5rD,EAAAzI,KAAAq0D,KAAAp4C,GAEA0B,IAAA,WACA,OAAA3d,KAAAq0D,KAAAh7D,IAAA2G,KAAAs0D,KAAAt0D,KAAAq0D,KAAAp4C,EAAAjc,KAAAq0D,KAAA5rD,IASAqvD,GAAA98D,UAAA,CACAmV,OAAA,SAAAkiC,EAAA9sB,GACA,IAAAzhB,EAAAm1D,EAAAC,EACA,GAAA7mB,EAAA,CAKA,GAJA9sB,EAAAuvC,EAAAziB,EACA9sB,EAAAopB,EAAA0D,EAAA1D,EACA0D,EAAA1D,IAAA0D,EAAA1D,EAAAmmB,EAAAvvC,GACA8sB,EAAA1D,EAAAppB,EACA8sB,EAAAyjB,EAAA,CAEA,IADAzjB,IAAAyjB,EACAzjB,EAAA0E,GAAA1E,IAAA0E,EACA1E,EAAA0E,EAAAxxB,OAEA8sB,EAAAyjB,EAAAvwC,EAEAzhB,EAAAuuC,OACOryC,KAAAR,GACP6yC,EAAA6lB,GAAAl4D,KAAAR,GACA+lB,EAAAuvC,EAAA,KACAvvC,EAAAopB,EAAA0D,EACAA,EAAAyiB,EAAAziB,EAAA0E,EAAAxxB,EACAzhB,EAAAuuC,IAEA9sB,EAAAuvC,EAAAvvC,EAAAopB,EAAA,KACA3uC,KAAAR,EAAA+lB,EACAzhB,EAAA,MAMA,IAJAyhB,EAAAwxB,EAAAxxB,EAAAuwC,EAAA,KACAvwC,EAAA6xB,EAAAtzC,EACAyhB,EAAA8gC,GAAA,EACAhU,EAAA9sB,EACAzhB,KAAAuiD,GAEAviD,KADAm1D,EAAAn1D,EAAAszC,GACAL,GACAmiB,EAAAD,EAAAnD,IACAoD,EAAA7S,GACAviD,EAAAuiD,EAAA6S,EAAA7S,GAAA,EACA4S,EAAA5S,GAAA,EACAhU,EAAA4mB,IAEA5mB,IAAAvuC,EAAAgyD,IACAiC,GAAA/3D,KAAA8D,GAEAA,GADAuuC,EAAAvuC,GACAszC,GAEAtzC,EAAAuiD,GAAA,EACA4S,EAAA5S,GAAA,EACA4R,GAAAj4D,KAAAi5D,KAGAC,EAAAD,EAAAliB,IACAmiB,EAAA7S,GACAviD,EAAAuiD,EAAA6S,EAAA7S,GAAA,EACA4S,EAAA5S,GAAA,EACAhU,EAAA4mB,IAEA5mB,IAAAvuC,EAAAizC,IACAkhB,GAAAj4D,KAAA8D,GAEAA,GADAuuC,EAAAvuC,GACAszC,GAEAtzC,EAAAuiD,GAAA,EACA4S,EAAA5S,GAAA,EACA0R,GAAA/3D,KAAAi5D,IAGAn1D,EAAAuuC,EAAA+E,EAEAp3C,KAAAR,EAAA6mD,GAAA,GAEAn8C,OAAA,SAAAqb,GACAA,EAAAopB,IAAAppB,EAAAopB,EAAAmmB,EAAAvvC,EAAAuvC,GACAvvC,EAAAuvC,IAAAvvC,EAAAuvC,EAAAnmB,EAAAppB,EAAAopB,GACAppB,EAAAopB,EAAAppB,EAAAuvC,EAAA,KACA,IAAAqE,EAAAlkC,EAAA8U,EAAAjmC,EAAAyhB,EAAA6xB,EAAAxqC,EAAA2Y,EAAAwxB,EAAArqC,EAAA6Y,EAAAuwC,EA6BA,GA5B4D7gC,EAA5DroB,EAA8BF,EAA8BwrD,GAAAxrD,GAA9BE,EAA9BF,EACA5I,EACAA,EAAAizC,IAAAxxB,EAAAzhB,EAAAizC,EAAA9hB,EAA+CnxB,EAAAgyD,EAAA7gC,EAE/Cj1B,KAAAR,EAAAy1B,EAEAroB,GAAAF,GACAq9B,EAAA9U,EAAAoxB,EACApxB,EAAAoxB,EAAA9gC,EAAA8gC,EACApxB,EAAA8hB,EAAAnqC,EACAA,EAAAwqC,EAAAniB,EACAA,IAAAvoB,GACA5I,EAAAmxB,EAAAmiB,EACAniB,EAAAmiB,EAAA7xB,EAAA6xB,EACA7xB,EAAA0P,EAAA6gC,EACAhyD,EAAAizC,EAAAxxB,EACA0P,EAAA6gC,EAAAppD,EACAA,EAAA0qC,EAAAniB,IAEAA,EAAAmiB,EAAAtzC,EACAA,EAAAmxB,EACA1P,EAAA0P,EAAA6gC,KAGA/rB,EAAAxkB,EAAA8gC,EACA9gC,EAAA0P,GAEA1P,MAAA6xB,EAAAtzC,IACAimC,EACA,GAAAxkB,KAAA8gC,EACA9gC,EAAA8gC,GAAA,MADA,CAIA,GACA,GAAA9gC,IAAAvlB,KAAAR,EAAA,MACA,GAAA+lB,IAAAzhB,EAAAizC,GAQA,IAPAoiB,EAAAr1D,EAAAgyD,GACAzP,IACA8S,EAAA9S,GAAA,EACAviD,EAAAuiD,GAAA,EACA0R,GAAA/3D,KAAA8D,GACAq1D,EAAAr1D,EAAAgyD,GAEAqD,EAAApiB,GAAAoiB,EAAApiB,EAAAsP,GAAA8S,EAAArD,GAAAqD,EAAArD,EAAAzP,EAAA,CACA8S,EAAArD,GAAAqD,EAAArD,EAAAzP,IACA8S,EAAApiB,EAAAsP,GAAA,EACA8S,EAAA9S,GAAA,EACA4R,GAAAj4D,KAAAm5D,GACAA,EAAAr1D,EAAAgyD,GAEAqD,EAAA9S,EAAAviD,EAAAuiD,EACAviD,EAAAuiD,EAAA8S,EAAArD,EAAAzP,GAAA,EACA0R,GAAA/3D,KAAA8D,GACAyhB,EAAAvlB,KAAAR,EACA,YAUA,IAPA25D,EAAAr1D,EAAAizC,GACAsP,IACA8S,EAAA9S,GAAA,EACAviD,EAAAuiD,GAAA,EACA4R,GAAAj4D,KAAA8D,GACAq1D,EAAAr1D,EAAAizC,GAEAoiB,EAAApiB,GAAAoiB,EAAApiB,EAAAsP,GAAA8S,EAAArD,GAAAqD,EAAArD,EAAAzP,EAAA,CACA8S,EAAApiB,GAAAoiB,EAAApiB,EAAAsP,IACA8S,EAAArD,EAAAzP,GAAA,EACA8S,EAAA9S,GAAA,EACA0R,GAAA/3D,KAAAm5D,GACAA,EAAAr1D,EAAAizC,GAEAoiB,EAAA9S,EAAAviD,EAAAuiD,EACAviD,EAAAuiD,EAAA8S,EAAApiB,EAAAsP,GAAA,EACA4R,GAAAj4D,KAAA8D,GACAyhB,EAAAvlB,KAAAR,EACA,MAGA25D,EAAA9S,GAAA,EACA9gC,EAAAzhB,EACAA,IAAAszC,SACO7xB,EAAA8gC,GACP9gC,MAAA8gC,GAAA,MAiEA7qD,EAAA+2D,KAAA6G,QAAA,SAAAl2D,GACA,IAAAf,EAAA4vD,GAAA3vD,EAAA4vD,GAAAS,EAAAtwD,EAAAuwD,EAAAtwD,EAAAqkD,EAAA4S,GACA,GAAAn2D,EAAA,OAAAk2D,EAAAl2D,GACA,SAAAk2D,EAAAn3D,GACA,IAAAq3D,EAAA,IAAA34D,MAAAsB,EAAAxE,QAAA4oB,EAAAogC,EAAA,MAAA/uC,EAAA+uC,EAAA,MAAAjqB,EAAAiqB,EAAA,MAAAhqB,EAAAgqB,EAAA,MAQA,OAPA0R,GAAAC,EAAAn2D,GAAAwkD,GAAAmS,MAAA9hD,QAAA,SAAA0hD,EAAAp/D,GACA,IAAA09D,EAAA0B,EAAA1B,MAAAxC,EAAAkE,EAAAlE,MAAAgF,EAAAlgE,GAAA09D,EAAAr5D,OAAAq5D,EAAAlnD,IAAA,SAAA9S,GACA,IAAA3B,EAAA2B,EAAA4gB,QACA,OAAAviB,EAAAgH,EAAAhH,EAAAiH,KACSkyD,EAAAnyD,GAAAkkB,GAAAiuC,EAAAnyD,GAAAq6B,GAAA83B,EAAAlyD,GAAAsV,GAAA48C,EAAAlyD,GAAAq6B,EAAA,EAAApW,EAAAoW,GAAA,CAAAD,EAAAC,GAAA,CAAAD,EAAA9kB,GAAA,CAAA2O,EAAA3O,IAAA,IACTmN,MAAA5iB,EAAA7I,KAEAkgE,EAEA,SAAAlB,EAAAn2D,GACA,OAAAA,EAAA2N,IAAA,SAAAlW,EAAAN,GACA,OACA+I,EAAA9D,KAAAY,MAAAwzD,EAAA/4D,EAAAN,GAAAugC,OACAv3B,EAAA/D,KAAAY,MAAAyzD,EAAAh5D,EAAAN,GAAAugC,OACAvgC,OA6CA,OAzCAggE,EAAAG,MAAA,SAAAt3D,GACA,OAAAk2D,GAAAC,EAAAn2D,IAAA60D,MAAAp2D,OAAA,SAAA2zD,GACA,OAAAA,EAAAh7D,GAAAg7D,EAAAn6D,IACO0V,IAAA,SAAAykD,GACP,OACAlmC,OAAAlsB,EAAAoyD,EAAAh7D,EAAAD,GACA80B,OAAAjsB,EAAAoyD,EAAAn6D,EAAAd,OAIAggE,EAAAI,UAAA,SAAAv3D,GACA,IAAAu3D,EAAA,GAaA,OAZArB,GAAAC,EAAAn2D,IAAA22D,MAAA9hD,QAAA,SAAA0hD,EAAAp/D,GAEA,IADA,IAAAqgE,EA+BAhxD,EAAAwT,EAAAxiB,EA/BA66D,EAAAkE,EAAAlE,KAAAwC,EAAA0B,EAAA1B,MAAAptD,KAAAqtD,IAAA3zD,GAAA,EAAA5J,EAAAs9D,EAAAr5D,OAAAwyB,EAAA6mC,EAAAt9D,EAAA,GAAA66D,KAAAqF,EAAAzpC,EAAA52B,IAAAi7D,EAAArkC,EAAA/1B,EAAA+1B,EAAA52B,IACA+J,EAAA5J,GACAy2B,EACAwpC,EAAAC,EAEAA,GADAzpC,EAAA6mC,EAAA1zD,GAAAixD,MACAh7D,IAAAi7D,EAAArkC,EAAA/1B,EAAA+1B,EAAA52B,EACAD,EAAAqgE,EAAArgE,KAAAsgE,EAAAtgE,IAyBA6iB,EAzBAw9C,EAyBAhgE,EAzBAigE,IAyBAjxD,EAzBA6rD,GA0BAnyD,EAAA1I,EAAA0I,IAAA8Z,EAAA7Z,EAAAqG,EAAArG,IAAAqG,EAAAtG,EAAA8Z,EAAA9Z,IAAA1I,EAAA2I,EAAAqG,EAAArG,GA1BA,IACAo3D,EAAAv8D,KAAA,CAAAgF,EAAA7I,GAAA6I,EAAAw3D,EAAArgE,GAAA6I,EAAAy3D,EAAAtgE,OAIAogE,GAEAJ,EAAAj3D,EAAA,SAAA3C,GACA,OAAAC,UAAAhC,QAAAg1D,EAAA9mB,GAAAxpC,EAAA3C,GAAA45D,GAAAj3D,GAEAi3D,EAAAh3D,EAAA,SAAA5C,GACA,OAAAC,UAAAhC,QAAAi1D,EAAA/mB,GAAAvpC,EAAA5C,GAAA45D,GAAAh3D,GAEAg3D,EAAA3S,WAAA,SAAAjnD,GACA,OAAAC,UAAAhC,QACAgpD,EAAA,MAAAjnD,EAAA65D,GAAA75D,EACA45D,GAFA3S,IAAA4S,GAAA,KAAA5S,GAIA2S,EAAAz2D,KAAA,SAAAnD,GACA,OAAAC,UAAAhC,OACA27D,EAAA3S,WAAAjnD,GAAA,OAAAA,IADAinD,IAAA4S,GAAA,KAAA5S,KAAA,IAGA2S,GAEA,IAAAC,GAAA,wBAkHA,SAAAM,GAAAjgE,GACA,OAAAA,EAAAyI,EAEA,SAAAy3D,GAAAlgE,GACA,OAAAA,EAAA0I,EAyDA,SAAAy3D,GAAApxD,EAAAwT,GACAxT,EAAAjN,EAAAykC,IAAAx3B,GACAwT,EAAAzgB,EAAAykC,IAAAhkB,GACA,IAAA69C,EAAArxD,EAAAvO,EAAA6/D,EAAAtxD,EAAAH,EAAA0xD,EAAAvxD,EAAAwT,EAAAg+C,EAAAh+C,EAAA/hB,EAAA4/D,EAAAI,EAAAj+C,EAAA3T,EAAAyxD,EAAAI,EAAAl+C,IAAA+9C,EACA,gBAAA1/D,GACA,UAAA0nC,GAAA3jC,KAAAY,MAAA66D,EAAAG,EAAA3/D,IAAA0nC,GAAA3jC,KAAAY,MAAA86D,EAAAG,EAAA5/D,IAAA0nC,GAAA3jC,KAAAY,MAAA+6D,EAAAG,EAAA7/D,KAIA,SAAA8/D,GAAA3xD,EAAAwT,GACA,IAAsBnW,EAAtB1M,EAAA,GAAcK,EAAA,GACd,IAAAqM,KAAA2C,EACA3C,KAAAmW,EACA7iB,EAAA0M,GAAAu0D,GAAA5xD,EAAA3C,GAAAmW,EAAAnW,IAEArM,EAAAqM,GAAA2C,EAAA3C,GAGA,IAAAA,KAAAmW,EACAnW,KAAA2C,IACAhP,EAAAqM,GAAAmW,EAAAnW,IAGA,gBAAAxL,GACA,IAAAwL,KAAA1M,EAAAK,EAAAqM,GAAA1M,EAAA0M,GAAAxL,GACA,OAAAb,GAIA,SAAA6gE,GAAA7xD,EAAAwT,GAEA,OADAxT,KAAAwT,KACA,SAAA3hB,GACA,OAAAmO,GAAA,EAAAnO,GAAA2hB,EAAA3hB,GAIA,SAAAigE,GAAA9xD,EAAAwT,GACA,IAAAu+C,EAAAC,EAAAC,EAAAC,EAAAC,GAAA3nC,UAAA4nC,GAAA5nC,UAAA,EAAA75B,GAAA,EAAA+B,EAAA,GAAA2jC,EAAA,GAEA,IADAr2B,GAAA,GAAAwT,GAAA,IACAu+C,EAAAI,GAAA34B,KAAAx5B,MAAAgyD,EAAAI,GAAA54B,KAAAhmB,MACAy+C,EAAAD,EAAAh4D,OAAAk4D,IACAD,EAAAz+C,EAAA1S,MAAAoxD,EAAAD,GACAv/D,EAAA/B,GAAA+B,EAAA/B,IAAAshE,EAA6Bv/D,IAAA/B,GAAAshE,IAE7BF,IAAA,OAAAC,IAAA,IACAt/D,EAAA/B,GAAA+B,EAAA/B,IAAAqhE,EAA6Bt/D,IAAA/B,GAAAqhE,GAE7Bt/D,IAAA/B,GAAA,KACA0lC,EAAA7hC,KAAA,CACA7D,IACA+I,EAAAm4D,GAAAE,EAAAC,MAGAE,EAAAE,GAAA5nC,UAMA,OAJA0nC,EAAA1+C,EAAAxe,SACAi9D,EAAAz+C,EAAA1S,MAAAoxD,GACAx/D,EAAA/B,GAAA+B,EAAA/B,IAAAshE,EAA2Bv/D,IAAA/B,GAAAshE,GAE3Bv/D,EAAAsC,OAAA,EAAAqhC,EAAA,IAAA7iB,EAAA6iB,EAAA,GAAA38B,EAAA,SAAA7H,GACA,OAAA2hB,EAAA3hB,GAAA,KACK,WACL,OAAA2hB,IACKA,EAAA6iB,EAAArhC,OAAA,SAAAnD,GACL,QAAAT,EAAAT,EAAA,EAAwBA,EAAA6iB,IAAO7iB,EAAA+B,GAAAtB,EAAAilC,EAAA1lC,OAAAS,EAAAsI,EAAA7H,GAC/B,OAAAa,EAAAizC,KAAA,MA5OA5yC,EAAA+2D,KAAAuI,SAAA,SAAAtI,GACA,OAAAh3D,EAAA+2D,KAAA6G,UAAAI,UAAAhH,IAEAh3D,EAAA+2D,KAAAwI,SAAA,SAAA73D,EAAAs5B,EAAAC,EAAA6tB,EAAAC,GACA,IAAAyQ,EAAA74D,EAAA4vD,GAAA3vD,EAAA4vD,GACA,GAAAgJ,EAAAv7D,UAAAhC,OAQA,OAPA0E,EAAAw3D,GACAv3D,EAAAw3D,GACA,IAAAoB,IACAzQ,EAAA9tB,EACA6tB,EAAA9tB,EACAC,EAAAD,EAAA,GAEAu+B,EAAA73D,GAEA,SAAA63D,EAAA94D,GACA,IAAAvI,EAAAuhE,EAAAC,EAAA9hE,EAAAyB,EAAAsgE,EAAAC,EAAAC,EAAAC,EAAA7I,EAAA9mB,GAAAxpC,GAAAuwD,EAAA/mB,GAAAvpC,GACA,SAAAo6B,EACA2+B,EAAA3+B,EAAA4+B,EAAA3+B,EAAA4+B,EAAA/Q,EAAAgR,EAAA/Q,OAKA,GAHA8Q,EAAAC,IAAAH,EAAAC,EAAA99C,KACA29C,EAAA,GAAAC,EAAA,GACArgE,EAAAoH,EAAAxE,OACAu9D,EAAA,IAAA5hE,EAAA,EAA+BA,EAAAyB,IAAOzB,GACtCM,EAAAuI,EAAA7I,IACA+I,EAAAg5D,MAAAzhE,EAAAyI,GACAzI,EAAA0I,EAAAg5D,MAAA1hE,EAAA0I,GACA1I,EAAAyI,EAAAk5D,MAAA3hE,EAAAyI,GACAzI,EAAA0I,EAAAk5D,MAAA5hE,EAAA0I,GACA64D,EAAAh+D,KAAAvD,EAAAyI,GACA+4D,EAAAj+D,KAAAvD,EAAA0I,QACS,IAAAhJ,EAAA,EAAiBA,EAAAyB,IAAOzB,EAAA,CACjC,IAAA6rD,GAAAwN,EAAA/4D,EAAAuI,EAAA7I,MAAA8rD,GAAAwN,EAAAh5D,EAAAN,GACA6rD,EAAAkW,MAAAlW,GACAC,EAAAkW,MAAAlW,GACAD,EAAAoW,MAAApW,GACAC,EAAAoW,MAAApW,GACA+V,EAAAh+D,KAAAgoD,GACAiW,EAAAj+D,KAAAioD,GAGA,IAAA5rB,EAAA+hC,EAAAF,EAAA5hC,EAAA+hC,EAAAF,EAEA,SAAAjrD,EAAAtV,EAAAnB,EAAAyI,EAAAC,EAAAo6B,EAAAC,EAAA6tB,EAAAC,GACA,IAAAp1C,MAAAhT,KAAAgT,MAAA/S,GACA,GAAAvH,EAAA0gE,KAAA,CACA,IAAAC,EAAA3gE,EAAAsH,EAAAs5D,EAAA5gE,EAAAuH,EACA,SAAAo5D,EACA,GAAAl9D,EAAAk9D,EAAAr5D,GAAA7D,EAAAm9D,EAAAr5D,GAAA,IACAs5D,EAAA7gE,EAAAnB,EAAAyI,EAAAC,EAAAo6B,EAAAC,EAAA6tB,EAAAC,OACa,CACb,IAAAoR,EAAA9gE,EAAAgqB,MACAhqB,EAAAsH,EAAAtH,EAAAuH,EAAAvH,EAAAgqB,MAAA,KACA62C,EAAA7gE,EAAA8gE,EAAAH,EAAAC,EAAAj/B,EAAAC,EAAA6tB,EAAAC,GACAmR,EAAA7gE,EAAAnB,EAAAyI,EAAAC,EAAAo6B,EAAAC,EAAA6tB,EAAAC,QAGA1vD,EAAAsH,IAAAtH,EAAAuH,IAAAvH,EAAAgqB,MAAAnrB,OAGAgiE,EAAA7gE,EAAAnB,EAAAyI,EAAAC,EAAAo6B,EAAAC,EAAA6tB,EAAAC,GAGA,SAAAmR,EAAA7gE,EAAAnB,EAAAyI,EAAAC,EAAAo6B,EAAAC,EAAA6tB,EAAAC,GACA,IAAAqR,EAAA,IAAAp/B,EAAA8tB,GAAAuR,EAAA,IAAAp/B,EAAA8tB,GAAA79C,EAAAvK,GAAAy5D,EAAAE,EAAA15D,GAAAy5D,EAAAziE,EAAA0iE,GAAA,EAAApvD,EACA7R,EAAA0gE,MAAA,EAEA7uD,EAAA8vB,EAAAo/B,EAA2BtR,EAAAsR,EAC3BE,EAAAr/B,EAAAo/B,EAA2BtR,EAAAsR,EAC3B1rD,EAHAtV,IAAAq7B,MAAA98B,KAAAyB,EAAAq7B,MAAA98B,GAmDA,CACAmiE,MAAA,EACArlC,MAAA,GACArR,MAAA,KACA1iB,EAAA,KACAC,EAAA,OArDA1I,EAAAyI,EAAAC,EAAAo6B,EAAAC,EAAA6tB,EAAAC,GA3BAjxB,EAAAC,EAAA+hC,EAAAF,EAAA9hC,EAAkC+hC,EAAAF,EAAA5hC,EA6BlC,IAAA7gC,EA8CA,CACA6iE,MAAA,EACArlC,MAAA,GACArR,MAAA,KACA1iB,EAAA,KACAC,EAAA,KAlDAnB,IAAA,SAAAvH,GACAyW,EAAAzX,EAAAgB,GAAA+4D,EAAA/4D,IAAAN,IAAAs5D,EAAAh5D,EAAAN,GAAA+hE,EAAAC,EAAAC,EAAAC,KASA,GAPA5iE,EAAAqjE,MAAA,SAAA9wD,IAkDA,SAAA+wD,EAAA/wD,EAAAsa,EAAAiX,EAAAC,EAAA6tB,EAAAC,GACA,IAAAt/C,EAAAsa,EAAAiX,EAAAC,EAAA6tB,EAAAC,GAAA,CACA,IAAA0R,EAAA,IAAAz/B,EAAA8tB,GAAA4R,EAAA,IAAAz/B,EAAA8tB,GAAAnoC,EAAAmD,EAAA2Q,MACA9T,EAAA,IAAA45C,EAAA/wD,EAAAmX,EAAA,GAAAoa,EAAAC,EAAAw/B,EAAAC,GACA95C,EAAA,IAAA45C,EAAA/wD,EAAAmX,EAAA,GAAA65C,EAAAx/B,EAAA6tB,EAAA4R,GACA95C,EAAA,IAAA45C,EAAA/wD,EAAAmX,EAAA,GAAAoa,EAAA0/B,EAAAD,EAAA1R,GACAnoC,EAAA,IAAA45C,EAAA/wD,EAAAmX,EAAA,GAAA65C,EAAAC,EAAA5R,EAAAC,IAvDAyR,CAAA/wD,EAAAvS,EAAAyiE,EAAAC,EAAAC,EAAAC,IAEA5iE,EAAAyjE,KAAA,SAAAt3C,GACA,OAuDA,SAAAnsB,EAAAyJ,EAAAC,EAAAikB,EAAA3O,EAAAy7C,EAAAG,GACA,IAAA8I,EAAAC,EAAA/+C,IAiCA,OAhCA,SAAA6+C,EAAA52C,EAAAiX,EAAAC,EAAA6tB,EAAAC,GACA,KAAA/tB,EAAA22B,GAAA12B,EAAA62B,GAAAhJ,EAAAjkC,GAAAkkC,EAAA7yC,GAAA,CACA,GAAAmN,EAAAU,EAAAV,MAAA,CACA,IAAAA,EAAAyU,EAAAn3B,EAAAojB,EAAApjB,EAAAo3B,EAAAn3B,EAAAmjB,EAAAnjB,EAAAk6D,EAAAhjC,IAAAC,IACA,GAAA+iC,EAAAD,EAAA,CACA,IAAA7N,EAAAnwD,KAAAgtB,KAAAgxC,EAAAC,GACAj2C,EAAAlkB,EAAAqsD,EAAA92C,EAAAtV,EAAAosD,EACA2E,EAAAhxD,EAAAqsD,EAAA8E,EAAAlxD,EAAAosD,EACA4N,EAAAv3C,GAIA,IADA,IAAAzC,EAAAmD,EAAA2Q,MAAA0lC,EAAA,IAAAp/B,EAAA8tB,GAAAuR,EAAA,IAAAp/B,EAAA8tB,GACAnxD,GADAgJ,GAAAy5D,IACA,EADA15D,GAAAy5D,EACAx4D,EAAAhK,EAAA,EAAiDA,EAAAgK,IAAOhK,EACxD,GAAAmsB,EAAAnD,EAAA,EAAAhpB,GAAA,SAAAA,GACA,OACA+iE,EAAA52C,EAAAiX,EAAAC,EAAAm/B,EAAAC,GACA,MAEA,OACAM,EAAA52C,EAAAq2C,EAAAn/B,EAAA6tB,EAAAuR,GACA,MAEA,OACAM,EAAA52C,EAAAiX,EAAAq/B,EAAAD,EAAArR,GACA,MAEA,OACA4R,EAAA52C,EAAAq2C,EAAAC,EAAAvR,EAAAC,KA3BA,CA+BK7xD,EAAA2tB,EAAA3O,EAAAy7C,EAAAG,GACL8I,EAzFAG,CAAA7jE,EAAAmsB,EAAA,GAAAA,EAAA,GAAAs2C,EAAAC,EAAAC,EAAAC,IAEAliE,GAAA,EACA,MAAAojC,EAAA,CACA,OAAApjC,EAAAyB,GACAsV,EAAAzX,EAAAuJ,EAAA7I,GAAA6hE,EAAA7hE,GAAA8hE,EAAA9hE,GAAA+hE,EAAAC,EAAAC,EAAAC,KAEAliE,OACO6I,EAAA6U,QAAApe,EAAAuI,KAEP,OADAg6D,EAAAC,EAAAj5D,EAAAvI,EAAA,KACAhB,EAmBA,OAjBAqiE,EAAA54D,EAAA,SAAA3C,GACA,OAAAC,UAAAhC,QAAA0E,EAAA3C,EAAAu7D,GAAA54D,GAEA44D,EAAA34D,EAAA,SAAA5C,GACA,OAAAC,UAAAhC,QAAA2E,EAAA5C,EAAAu7D,GAAA34D,GAEA24D,EAAAxpD,OAAA,SAAA/R,GACA,OAAAC,UAAAhC,QACA,MAAA+B,EAAAg9B,EAAAC,EAAA6tB,EAAAC,EAAA,MAA8C/tB,GAAAh9B,EAAA,MAAAi9B,GAAAj9B,EAAA,MAAA8qD,GAAA9qD,EAAA,MAC9C+qD,GAAA/qD,EAAA,OACAu7D,GAHA,MAAAv+B,EAAA,OAAAA,EAAAC,GAAA,CAAA6tB,EAAAC,KAKAwQ,EAAAp4D,KAAA,SAAAnD,GACA,OAAAC,UAAAhC,QACA,MAAA+B,EAAAg9B,EAAAC,EAAA6tB,EAAAC,EAAA,MAA8C/tB,EAAAC,EAAA,EAAA6tB,GAAA9qD,EAAA,GAAA+qD,GAAA/qD,EAAA,IAC9Cu7D,GAFA,MAAAv+B,EAAA,MAAA8tB,EAAA9tB,EAAA+tB,EAAA9tB,IAIAs+B,GA8DAv/D,EAAAghE,eAAA3C,GASAr+D,EAAAihE,kBAAArC,GAoBA5+D,EAAA2sB,kBAAAmyC,GAOA9+D,EAAAkhE,kBAAAnC,GAiCA,IAAAK,GAAA,8CAAAC,GAAA,IAAApoC,OAAAmoC,GAAAzsC,OAAA,KAEA,SAAAksC,GAAA5xD,EAAAwT,GAEA,IADA,IAAAhR,EAAA7R,EAAAoC,EAAAmhE,cAAAl/D,SACArE,GAAA,KAAA6R,EAAAzP,EAAAmhE,cAAAvjE,GAAAqP,EAAAwT,MACA,OAAAhR,EAOA,SAAA2xD,GAAAn0D,EAAAwT,GACA,IAAA7iB,EAAA+I,EAAA,GAAA1I,EAAA,GAAAojE,EAAAp0D,EAAAhL,OAAAq/D,EAAA7gD,EAAAxe,OAAAk3B,EAAAt2B,KAAAqF,IAAA+E,EAAAhL,OAAAwe,EAAAxe,QACA,IAAArE,EAAA,EAAeA,EAAAu7B,IAAQv7B,EAAA+I,EAAAlF,KAAAo9D,GAAA5xD,EAAArP,GAAA6iB,EAAA7iB,KACvB,KAAUA,EAAAyjE,IAAOzjE,EAAAK,EAAAL,GAAAqP,EAAArP,GACjB,KAAUA,EAAA0jE,IAAO1jE,EAAAK,EAAAL,GAAA6iB,EAAA7iB,GACjB,gBAAAkB,GACA,IAAAlB,EAAA,EAAiBA,EAAAu7B,IAAQv7B,EAAAK,EAAAL,GAAA+I,EAAA/I,GAAAkB,GACzB,OAAAb,GAlBA+B,EAAA4gB,YAAAi+C,GAMA7+D,EAAAmhE,cAAA,UAAAl0D,EAAAwT,GACA,IAAA3hB,SAAA2hB,EACA,kBAAA3hB,EAAA8nC,GAAAxlC,IAAAqf,EAAArY,gBAAA,oBAAA6S,KAAAwF,GAAA49C,GAAAU,GAAAt+C,aAAA4jB,GAAAg6B,GAAAl5D,MAAA0sB,QAAApR,GAAA2gD,GAAA,WAAAtiE,GAAA6a,MAAA8G,GAAAm+C,GAAAE,IAAA7xD,EAAAwT,KAEAzgB,EAAAuhE,iBAAAH,GAWA,IAAAI,GAAA,WACA,OAAAhvC,GAEAivC,GAAAzhE,EAAAoU,IAAA,CACAmB,OAAAisD,GACAE,KA+DA,SAAApgE,GACA,gBAAAxC,GACA,OAAA+D,KAAAq/B,IAAApjC,EAAAwC,KAhEAqgE,KAAA,WACA,OAAAC,IAEAC,MAAA,WACA,OAAAC,IAEAziC,IAAA,WACA,OAAA0iC,IAEA5iC,IAAA,WACA,OAAA6iC,IAEAx4C,OAAA,WACA,OAAAy4C,IAEAC,QA6DA,SAAAj1D,EAAAvN,GACA,IAAAC,EACAsE,UAAAhC,OAAA,IAAAvC,EAAA,KACAuE,UAAAhC,OAAAtC,EAAAD,EAAA6+B,GAAA17B,KAAAo8B,KAAA,EAAAhyB,IAAuDA,EAAA,EAAAtN,EAAAD,EAAA,GACvD,gBAAAZ,GACA,SAAAmO,EAAApK,KAAAq/B,IAAA,MAAApjC,GAAA+D,KAAAw8B,KAAAvgC,EAAAa,GAAA4+B,GAAA7+B,KAjEAyiE,KAoEA,SAAAxiE,GACAA,MAAA,SACA,gBAAAb,GACA,OAAAA,MAAAa,EAAA,GAAAb,EAAAa,KAtEAyiE,OAAA,WACA,OAAAC,MAGAC,GAAAtiE,EAAAoU,IAAA,CACAmuD,GAAA/vC,EACAgwC,IAAAC,GACAC,SAAAC,GACAC,SAAA,SAAAnzD,GACA,OAAAkzD,GAAAF,GAAAhzD,OAcA,SAAAgzD,GAAAhzD,GACA,gBAAA3Q,GACA,SAAA2Q,EAAA,EAAA3Q,IAGA,SAAA6jE,GAAAlzD,GACA,gBAAA3Q,GACA,UAAAA,EAAA,GAAA2Q,EAAA,EAAA3Q,GAAA,EAAA2Q,EAAA,IAAA3Q,KAGA,SAAA8iE,GAAA9iE,GACA,OAAAA,IAEA,SAAAgjE,GAAAhjE,GACA,OAAAA,MAEA,SAAA+jE,GAAA/jE,GACA,GAAAA,GAAA,WACA,GAAAA,GAAA,WACA,IAAAuyD,EAAAvyD,IAAAgkE,EAAAzR,EAAAvyD,EACA,UAAAA,EAAA,GAAAgkE,EAAA,GAAAhkE,EAAAuyD,GAAAyR,EAAA,KAOA,SAAAf,GAAAjjE,GACA,SAAA+D,KAAA6iC,IAAA5mC,EAAA2/B,IAEA,SAAAujC,GAAAljE,GACA,OAAA+D,KAAAq/B,IAAA,MAAApjC,EAAA,IAEA,SAAAmjE,GAAAnjE,GACA,SAAA+D,KAAAgtB,KAAA,EAAA/wB,KAgBA,SAAAujE,GAAAvjE,GACA,OAAAA,EAAA,cAAAA,MAAA,eAAAA,GAAA,UAAAA,EAAA,IAAAA,EAAA,iBAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAkCA,SAAAikE,GAAA91D,EAAAwT,GAEA,OADAA,GAAAxT,EACA,SAAAnO,GACA,OAAA+D,KAAAY,MAAAwJ,EAAAwT,EAAA3hB,IAaA,SAAAkkE,GAAAhlE,GACA,IA0BAiP,EAAAwT,EAAAnW,EA1BAg2B,EAAA,CAAAtiC,EAAAiP,EAAAjP,EAAAyiB,GAAA8f,EAAA,CAAAviC,EAAAC,EAAAD,EAAAE,GAAA+kE,EAAAC,GAAA5iC,GAAA6iC,EAAAC,GAAA9iC,EAAAC,GAAA8iC,EAAAH,KA0BAj2D,EA1BAszB,GA2BA,KADAj2B,GA1BA64D,IA0BA1iD,EA1BA6f,GA2BA,GACArzB,EAAA,IAAA3C,EAAAmW,EAAA,GACAxT,KA7BA,EACAqzB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KACAA,EAAA,OACAA,EAAA,OACA2iC,IAAA,EACAE,IAAA,GAEA3+D,KAAAqiD,QAAAoc,EAAApgE,KAAAsjC,MAAA7F,EAAA,GAAAA,EAAA,IAAAz9B,KAAAsjC,OAAA5F,EAAA,GAAAA,EAAA,KAAA5B,GACAn6B,KAAA69B,UAAA,CAAArkC,EAAAsD,EAAAtD,EAAAyR,GACAjL,KAAA0N,MAAA,CAAA+wD,EAAAI,GACA7+D,KAAA8+D,KAAAD,EAAAxgE,KAAAsjC,MAAAg9B,EAAAE,GAAA1kC,GAAA,EAKA,SAAAykC,GAAAn2D,EAAAwT,GACA,OAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAEA,SAAAyiD,GAAAj2D,GACA,IAAA3C,EAAAzH,KAAAgtB,KAAAuzC,GAAAn2D,MAKA,OAJA3C,IACA2C,EAAA,IAAA3C,EACA2C,EAAA,IAAA3C,GAEAA,EAzIAtK,EAAAwsB,KAAA,SAAAruB,GACA,IAKAsR,EALA7R,EAAAO,EAAAoD,QAAA,KAAAzC,EAAAlB,GAAA,EAAAO,EAAA4P,MAAA,EAAAnQ,GAAAO,EAAAH,EAAAJ,GAAA,EAAAO,EAAA4P,MAAAnQ,EAAA,QAGA,OAFAkB,EAAA2iE,GAAAhjE,IAAAK,IAAA0iE,GACAxjE,EAAAskE,GAAA7jE,IAAAT,IAAAw0B,EAGA/iB,EAFAzR,EAAAc,EAAA8F,MAAA,KAAAmoB,EAAAhvB,KAAAkG,UAAA,KAGA,SAAAnF,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAA2Q,EAAA3Q,KAwDAkB,EAAAujE,eACA,SAAAt2D,EAAAwT,GACAxT,EAAAjN,EAAAulC,IAAAt4B,GACAwT,EAAAzgB,EAAAulC,IAAA9kB,GACA,IAAA+iD,EAAAv2D,EAAAQ,EAAAg2D,EAAAx2D,EAAAhP,EAAAylE,EAAAz2D,EAAApP,EAAA8lE,EAAAljD,EAAAhT,EAAA+1D,EAAAI,EAAAnjD,EAAAxiB,EAAAwlE,EAAAI,EAAApjD,EAAA5iB,EAAA6lE,EACA/pD,MAAAiqD,OAAA,EAAAH,EAAA9pD,MAAA8pD,GAAAhjD,EAAAxiB,EAAAwlE,GACA9pD,MAAAgqD,MAAA,EAAAH,EAAA7pD,MAAA6pD,GAAA/iD,EAAAhT,EAAA+1D,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,gBAAA7kE,GACA,OAAA2mC,GAAA+9B,EAAAG,EAAA7kE,EAAA2kE,EAAAG,EAAA9kE,EAAA4kE,EAAAG,EAAA/kE,GAAA,KAGAkB,EAAA8jE,eACA,SAAA72D,EAAAwT,GACAxT,EAAAjN,EAAA0kC,IAAAz3B,GACAwT,EAAAzgB,EAAA0kC,IAAAjkB,GACA,IAAA+iD,EAAAv2D,EAAAQ,EAAAs2D,EAAA92D,EAAAtN,EAAA+jE,EAAAz2D,EAAApP,EAAA8lE,EAAAljD,EAAAhT,EAAA+1D,EAAAtE,EAAAz+C,EAAA9gB,EAAAokE,EAAAF,EAAApjD,EAAA5iB,EAAA6lE,EACA/pD,MAAAulD,OAAA,EAAA6E,EAAApqD,MAAAoqD,GAAAtjD,EAAA9gB,EAAAokE,GACApqD,MAAAgqD,MAAA,EAAAH,EAAA7pD,MAAA6pD,GAAA/iD,EAAAhT,EAAA+1D,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,gBAAA7kE,GACA,OAAA8lC,GAAA4+B,EAAAG,EAAA7kE,EAAAilE,EAAA7E,EAAApgE,EAAA4kE,EAAAG,EAAA/kE,GAAA,KAGAkB,EAAAgkE,eACA,SAAA/2D,EAAAwT,GACAxT,EAAAjN,EAAA4qB,IAAA3d,GACAwT,EAAAzgB,EAAA4qB,IAAAnK,GACA,IAAAijD,EAAAz2D,EAAApP,EAAAomE,EAAAh3D,IAAAuxD,EAAAvxD,EAAAwT,EAAAojD,EAAApjD,EAAA5iB,EAAA6lE,EAAAQ,EAAAzjD,EAAAxT,EAAAg3D,EAAAtF,EAAAl+C,IAAA+9C,EACA,gBAAA1/D,GACA,OAAAknC,GAAA09B,EAAAG,EAAA/kE,EAAAmlE,EAAAC,EAAAplE,EAAA0/D,EAAAG,EAAA7/D,GAAA,KAGAkB,EAAAmkE,iBAAApB,GAOA/iE,EAAA4yD,UAAA,SAAAzX,GACA,IAAAruC,EAAAmgB,EAAA6K,gBAAA93B,EAAAf,GAAAu5B,OAAAhqB,IAAA,KACA,OAAAxO,EAAA4yD,UAAA,SAAAzX,GACA,SAAAA,EAAA,CACAruC,EAAAohB,aAAA,YAAAitB,GACA,IAAAr8C,EAAAgO,EAAA8lD,UAAAwR,QAAAC,cAEA,WAAArB,GAAAlkE,IAAAgyB,OAAAwzC,MACKnpB,IAeL6nB,GAAAxjE,UAAAkF,SAAA,WACA,mBAAAF,KAAA69B,UAAA,WAAA79B,KAAAqiD,OAAA,UAAAriD,KAAA8+D,KAAA,UAAA9+D,KAAA0N,MAAA,KAkBA,IAAAoyD,GAAA,CACAr3D,EAAA,EACAwT,EAAA,EACAxiB,EAAA,EACAC,EAAA,EACAoD,EAAA,EACAmO,EAAA,GAGA,SAAA80D,GAAA5kE,GACA,OAAAA,EAAAsC,OAAAtC,EAAAwoD,MAAA,OAmDA,SAAAqc,GAAAv3D,EAAAwT,GACA,IAAA9gB,EAAA,GAAA2jC,EAAA,GAOA,OANAr2B,EAAAjN,EAAA4yD,UAAA3lD,GAAAwT,EAAAzgB,EAAA4yD,UAAAnyC,GAnDA,SAAAgkD,EAAAC,EAAA/kE,EAAA2jC,GACA,GAAAmhC,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,IAAA9mE,EAAA+B,EAAA8B,KAAA,gCACA6hC,EAAA7hC,KAAA,CACA7D,IAAA,EACA+I,EAAAm4D,GAAA2F,EAAA,GAAAC,EAAA,KACO,CACP9mE,IAAA,EACA+I,EAAAm4D,GAAA2F,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACL/kE,EAAA8B,KAAA,aAAAijE,EAAA,KAyCAC,CAAA13D,EAAAo1B,UAAA5hB,EAAA4hB,UAAA1iC,EAAA2jC,GAtCA,SAAAshC,EAAAC,EAAAllE,EAAA2jC,GACAshC,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnCthC,EAAA7hC,KAAA,CACA7D,EAAA+B,EAAA8B,KAAA8iE,GAAA5kE,GAAA,sBACAgH,EAAAm4D,GAAA8F,EAAAC,MAEKA,GACLllE,EAAA8B,KAAA8iE,GAAA5kE,GAAA,UAAAklE,EAAA,KA+BAC,CAAA73D,EAAA45C,OAAApmC,EAAAomC,OAAAlnD,EAAA2jC,GA5BA,SAAAyhC,EAAAC,EAAArlE,EAAA2jC,GACAyhC,IAAAC,EACA1hC,EAAA7hC,KAAA,CACA7D,EAAA+B,EAAA8B,KAAA8iE,GAAA5kE,GAAA,qBACAgH,EAAAm4D,GAAAiG,EAAAC,KAEKA,GACLrlE,EAAA8B,KAAA8iE,GAAA5kE,GAAA,SAAAqlE,EAAA,KAsBAC,CAAAh4D,EAAAq2D,KAAA7iD,EAAA6iD,KAAA3jE,EAAA2jC,GAnBA,SAAA4hC,EAAAC,EAAAxlE,EAAA2jC,GACA,GAAA4hC,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,IAAAvnE,EAAA+B,EAAA8B,KAAA8iE,GAAA5kE,GAAA,4BACA2jC,EAAA7hC,KAAA,CACA7D,IAAA,EACA+I,EAAAm4D,GAAAoG,EAAA,GAAAC,EAAA,KACO,CACPvnE,IAAA,EACA+I,EAAAm4D,GAAAoG,EAAA,GAAAC,EAAA,WAEK,IAAAA,EAAA,QAAAA,EAAA,IACLxlE,EAAA8B,KAAA8iE,GAAA5kE,GAAA,SAAAwlE,EAAA,KASAC,CAAAn4D,EAAAiF,MAAAuO,EAAAvO,MAAAvS,EAAA2jC,GACAr2B,EAAAwT,EAAA,KACA,SAAA3hB,GAEA,IADA,IAAAT,EAAAT,GAAA,EAAAyB,EAAAikC,EAAArhC,SACArE,EAAAyB,GAAAM,GAAAtB,EAAAilC,EAAA1lC,OAAAS,EAAAsI,EAAA7H,GACA,OAAAa,EAAAizC,KAAA,KAGA,SAAAyyB,GAAAp4D,EAAAwT,GAEA,OADAA,MAAAxT,OAAA,EAAAwT,EACA,SAAA9Z,GACA,OAAAA,EAAAsG,GAAAwT,GAGA,SAAA6kD,GAAAr4D,EAAAwT,GAEA,OADAA,MAAAxT,OAAA,EAAAwT,EACA,SAAA9Z,GACA,OAAA9D,KAAAiF,IAAA,EAAAjF,KAAAqF,IAAA,GAAAvB,EAAAsG,GAAAwT,KAWA,SAAA8kD,GAAAC,GAEA,IADA,IAAAtjD,EAAAsjD,EAAA7yC,OAAAxQ,EAAAqjD,EAAA9yC,OAAA+yC,EAsBA,SAAAx4D,EAAAwT,GACA,GAAAxT,IAAAwT,EAAA,OAAAxT,EACA,IAAAy4D,EAAAC,GAAA14D,GAAA24D,EAAAD,GAAAllD,GAAAolD,EAAAH,EAAAvd,MAAA2d,EAAAF,EAAAzd,MAAA4d,EAAA,KACA,KAAAF,IAAAC,GACAC,EAAAF,EACAA,EAAAH,EAAAvd,MACA2d,EAAAF,EAAAzd,MAEA,OAAA4d,EA9BAC,CAAA9jD,EAAAC,GAAAza,EAAA,CAAAwa,GACAA,IAAAujD,GACAvjD,IAAA5Z,OACAZ,EAAAjG,KAAAygB,GAGA,IADA,IAAA5X,EAAA5C,EAAAzF,OACAkgB,IAAAsjD,GACA/9D,EAAAkI,OAAAtF,EAAA,EAAA6X,GACAA,IAAA7Z,OAEA,OAAAZ,EAEA,SAAAi+D,GAAA57C,GAEA,IADA,IAAAk8C,EAAA,GAAA39D,EAAAyhB,EAAAzhB,OACA,MAAAA,GACA29D,EAAAxkE,KAAAsoB,GACAA,EAAAzhB,EACAA,WAGA,OADA29D,EAAAxkE,KAAAsoB,GACAk8C,EAuVA,SAAAC,GAAAhoE,GACAA,EAAAioE,OAAA,EAEA,SAAAC,GAAAloE,GACAA,EAAAioE,QAAA,EAEA,SAAAE,GAAAnoE,GACAA,EAAAioE,OAAA,EACAjoE,EAAAooE,GAAApoE,EAAAyI,EAAAzI,EAAAqoE,GAAAroE,EAAA0I,EAEA,SAAA4/D,GAAAtoE,GACAA,EAAAioE,QAAA,EA9cAnmE,EAAAymE,qBAAAjC,GA+EAxkE,EAAA2a,OAAA,GACA3a,EAAA2a,OAAA+rD,OAAA,WACA,gBAAA3I,GAEA,IADA,IAAAz1C,EAAA,GAAA1qB,GAAA,EAAAyB,EAAA0+D,EAAA97D,SACArE,EAAAyB,GAAAipB,EAAA7mB,KAAA8jE,GAAAxH,EAAAngE,KACA,OAAA0qB,IAoCAtoB,EAAA2a,OAAAgsD,MAAA,WACA,IAAkBC,EAAAvqD,EAAAyU,EAAAzxB,EAAAwnE,EAAAC,EAAAC,EAAlBJ,EAAA,GAAkBnuD,EAAA,EAClB,SAAAwuD,IACA,IAAwB18D,EAAA3D,EAAAkkB,EAAAjtB,EAAAgK,EAAxBquB,EAAA,GAAwBgxC,EAAA,GAAAxrD,EAAAzb,EAAAuU,MAAAlV,GAAA6nE,EAAA,GAIxB,IAHAN,EAAA,GACAvqD,EAAA,GACA/R,EAAA,EAAA1M,GAAA,IACAA,EAAAyB,GAAA,CAEA,IADAsH,EAAA,EAAAiB,GAAA,IACAA,EAAAvI,GACAsH,GAAAmqB,EAAAlzB,GAAAgK,GAEAq/D,EAAAxlE,KAAAkF,GACAugE,EAAAzlE,KAAAzB,EAAAuU,MAAAlV,IACAiL,GAAA3D,EAgBA,IAdAkgE,GACAprD,EAAAvN,KAAA,SAAAjB,EAAAwT,GACA,OAAAomD,EAAAI,EAAAh6D,GAAAg6D,EAAAxmD,MAGAqmD,GACAI,EAAA5rD,QAAA,SAAApd,EAAAN,GACAM,EAAAgQ,KAAA,SAAAjB,EAAAwT,GACA,OAAAqmD,EAAAh2C,EAAAlzB,GAAAqP,GAAA6jB,EAAAlzB,GAAA6iB,QAIAnW,GAAAi0B,GAAA/lB,EAAAnZ,GAAAiL,EACA3D,EAAA,EAAA/I,GAAA,IACAA,EAAAyB,GAAA,CAEA,IADAwrB,EAAAlkB,EAAAiB,GAAA,IACAA,EAAAvI,GAAA,CACA,IAAA8nE,EAAA1rD,EAAA7d,GAAAwpE,EAAAF,EAAAC,GAAAv/D,GAAA4nB,EAAAsB,EAAAq2C,GAAAC,GAAA7Y,EAAA5nD,EAAAwjD,EAAAxjD,GAAA6oB,EAAAllB,EACA2rB,EAAAkxC,EAAA,IAAAC,GAAA,CACAngE,MAAAkgE,EACAE,SAAAD,EACA5mD,WAAA+tC,EACAhuC,SAAA4pC,EACAtrD,MAAA2wB,GAGAnT,EAAA8qD,GAAA,CACAlgE,MAAAkgE,EACA3mD,WAAAqK,EACAtK,SAAA5Z,EACA9H,MAAAooE,EAAAE,IAEAxgE,GAAA6R,EAGA,IADA5a,GAAA,IACAA,EAAAyB,GAEA,IADAuI,EAAAhK,EAAA,IACAgK,EAAAvI,GAAA,CACA,IAAAszB,EAAAsD,EAAAr4B,EAAA,IAAAgK,GAAA8qB,EAAAuD,EAAAruB,EAAA,IAAAhK,IACA+0B,EAAA9zB,OAAA6zB,EAAA7zB,QACA+nE,EAAAnlE,KAAAkxB,EAAA9zB,MAAA6zB,EAAA7zB,MAAA,CACA8zB,OAAAD,EACAA,OAAAC,GACa,CACbA,SACAD,WAKAq0C,GAAAO,IAEA,SAAAA,IACAV,EAAA14D,KAAA,SAAAjB,EAAAwT,GACA,OAAAsmD,GAAA95D,EAAA0lB,OAAA9zB,MAAAoO,EAAAylB,OAAA7zB,OAAA,GAAA4hB,EAAAkS,OAAA9zB,MAAA4hB,EAAAiS,OAAA7zB,OAAA,KAyCA,OAtCA8nE,EAAA71C,OAAA,SAAAnqB,GACA,OAAA1C,UAAAhC,QACA5C,GAAAyxB,EAAAnqB,IAAAmqB,EAAA7uB,OACA2kE,EAAAvqD,EAAA,KACAsqD,GAHA71C,GAKA61C,EAAAnuD,QAAA,SAAA7R,GACA,OAAA1C,UAAAhC,QACAuW,EAAA7R,EACAigE,EAAAvqD,EAAA,KACAsqD,GAHAnuD,GAKAmuD,EAAAE,WAAA,SAAAlgE,GACA,OAAA1C,UAAAhC,QACA4kE,EAAAlgE,EACAigE,EAAAvqD,EAAA,KACAsqD,GAHAE,GAKAF,EAAAG,cAAA,SAAAngE,GACA,OAAA1C,UAAAhC,QACA6kE,EAAAngE,EACAigE,EAAA,KACAD,GAHAG,GAKAH,EAAAI,WAAA,SAAApgE,GACA,OAAA1C,UAAAhC,QACA8kE,EAAApgE,EACAigE,GAAAU,IACAX,GAHAI,GAKAJ,EAAAC,OAAA,WAEA,OADAA,GAAAI,IACAJ,GAEAD,EAAAtqD,OAAA,WAEA,OADAA,GAAA2qD,IACA3qD,GAEAsqD,GAEA3mE,EAAA2a,OAAA4sD,MAAA,WACA,IAAkBpzB,EAAAlX,EAAAuqC,EAAAC,EAAAC,EAAAC,EAAlBJ,EAAA,GAAkBl4D,EAAArP,EAAA8zB,SAAA,sBAAA3sB,EAAA,MAAAygE,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAAC,GAAA,GAAAC,EAAAC,GAAAC,EAAA,GAAAC,EAAA,IAAA3tC,EAAA,GAAAqjC,EAAA,GAClB,SAAAuK,EAAAv+C,GACA,gBAAA43C,EAAA3gC,EAAAh9B,EAAA8qD,GACA,GAAA6S,EAAAt4C,QAAAU,EAAA,CACA,IAAA+T,EAAA6jC,EAAA3gD,GAAA+I,EAAApjB,EAAAo3B,EAAA4jC,EAAA1gD,GAAA8I,EAAAnjB,EAAA2hE,EAAAzZ,EAAA9tB,EAAAwnC,EAAA1qC,IAAAC,IACA,GAAAwqC,IAAAF,EAAAG,EAAA,CACA,GAAAA,EAAAN,EAAA,CACA,IAAA59D,EAAAq3D,EAAAsG,OAAAO,EACAz+C,EAAAu8C,IAAAxoC,EAAAxzB,EACAyf,EAAAw8C,IAAAxoC,EAAAzzB,EAEA,SAEA,GAAAq3D,EAAAt4C,OAAAm/C,KAAAN,EAAA,CACA59D,EAAAq3D,EAAA8G,YAAAD,EACAz+C,EAAAu8C,IAAAxoC,EAAAxzB,EACAyf,EAAAw8C,IAAAxoC,EAAAzzB,GAGA,OAAAq3D,EAAAsG,QAgMA,SAAAS,EAAAxqE,GACAA,EAAAooE,GAAAtmE,EAAAqP,MAAA1I,EAAAzI,EAAAqoE,GAAAvmE,EAAAqP,MAAAzI,EACA2gE,EAAAoB,SAEA,OAjMApB,EAAAqB,KAAA,WACA,IAAApB,GAAA,UAMA,OALArzB,EAAA,KACA9kC,EAAA8S,IAAA,CACAwS,KAAA,MACA6yC,QAAA,KAEA,EAEA,IAAAlkC,EAAA1lC,EAAAS,EAAAsB,EAAAb,EAAAjB,EAAAyM,EAAA3D,EAAAC,EAAAvH,EAAAq7B,EAAAz4B,OAAAjE,EAAA+/D,EAAA97D,OACA,IAAArE,EAAA,EAAiBA,EAAAI,IAAOJ,EAExB+B,GADAtB,EAAA0/D,EAAAngE,IACA+0B,QAIA90B,GAFA8I,GADA7H,EAAAT,EAAAq0B,QACA/rB,EAAAhH,EAAAgH,GAEAA,GADAC,EAAA9H,EAAA8H,EAAAjH,EAAAiH,GACAA,KAEAD,GADA9I,EAAA2pE,EAAAE,EAAA9pE,KAAAC,EAAAgF,KAAAgtB,KAAAhyB,IAAA4pE,EAAA7pE,IAAAC,EAEA+I,GAAA/I,EACAiB,EAAA6H,MAAA2D,EAAA3K,EAAAkpE,OAAA/pE,EAAA+pE,OAAAlpE,EAAAkpE,QAAAlpE,EAAAkpE,OAAA/pE,EAAA+pE,QAAA,IACA/pE,EAAA8H,KAAA0D,EACA3K,EAAAgH,MAAA2D,EAAA,EAAAA,GACA3K,EAAAiH,KAAA0D,GAGA,IAAAA,EAAAk9D,EAAAY,KACAzhE,EAAAQ,EAAA,KACAP,EAAAO,EAAA,KACAvJ,GAAA,EACA0M,GAAA,OAAA1M,EAAAyB,IACAhB,EAAAq8B,EAAA98B,IACA+I,MAAAtI,EAAAsI,GAAA2D,EACAjM,EAAAuI,MAAAvI,EAAAuI,GAAA0D,EAGA,GAAA29D,EAGA,KAyKA,SAAAa,EAAAnH,EAAA6F,EAAAG,GACA,IAAA3mD,EAAA,EAAAC,EAAA,EACA0gD,EAAAsG,OAAA,EACA,IAAAtG,EAAA5B,KAEA,IADA,IAAA9hE,EAAAy8B,EAAAinC,EAAAjnC,MAAAr7B,EAAAq7B,EAAAz4B,OAAArE,GAAA,IACAA,EAAAyB,GAEA,OADApB,EAAAy8B,EAAA98B,MAEAkrE,EAAA7qE,EAAAupE,EAAAG,GACAhG,EAAAsG,QAAAhqE,EAAAgqE,OACAjnD,GAAA/iB,EAAAgqE,OAAAhqE,EAAA+iB,GACAC,GAAAhjB,EAAAgqE,OAAAhqE,EAAAgjB,IAGA,GAAA0gD,EAAAt4C,MAAA,CACAs4C,EAAA5B,OACA4B,EAAAt4C,MAAA1iB,GAAA9D,KAAA0tB,SAAA,GACAoxC,EAAAt4C,MAAAziB,GAAA/D,KAAA0tB,SAAA,IAEA,IAAAjmB,EAAAk9D,EAAAG,EAAAhG,EAAAt4C,MAAApiB,OACA06D,EAAAsG,QAAAtG,EAAA8G,YAAAn+D,EACA0W,GAAA1W,EAAAq3D,EAAAt4C,MAAA1iB,EACAsa,GAAA3W,EAAAq3D,EAAAt4C,MAAAziB,EAEA+6D,EAAA3gD,KAAA2gD,EAAAsG,OACAtG,EAAA1gD,KAAA0gD,EAAAsG,OApMAa,CAAAxlC,EAAAtjC,EAAA+2D,KAAAwI,SAAA7kC,GAAA8sC,EAAAG,GACA/pE,GAAA,IACAA,EAAAyB,IACAhB,EAAAq8B,EAAA98B,IAAAuoE,OACA7iC,EAAAi9B,MAAA+H,EAAAjqE,IAKA,IADAT,GAAA,IACAA,EAAAyB,IACAhB,EAAAq8B,EAAA98B,IACAuoE,OACA9nE,EAAAsI,EAAAtI,EAAAioE,GACAjoE,EAAAuI,EAAAvI,EAAAkoE,KAEAloE,EAAAsI,IAAAtI,EAAAioE,IAAAjoE,EAAAioE,GAAAjoE,EAAAsI,IAAAihE,EACAvpE,EAAAuI,IAAAvI,EAAAkoE,IAAAloE,EAAAkoE,GAAAloE,EAAAuI,IAAAghE,GAGAv4D,EAAAu5D,KAAA,CACAj0C,KAAA,OACA6yC,WAGAD,EAAA7sC,MAAA,SAAA/zB,GACA,OAAA1C,UAAAhC,QACAy4B,EAAA/zB,EACA4gE,GAFA7sC,GAIA6sC,EAAAxJ,MAAA,SAAAp3D,GACA,OAAA1C,UAAAhC,QACA87D,EAAAp3D,EACA4gE,GAFAxJ,GAIAwJ,EAAApgE,KAAA,SAAAR,GACA,OAAA1C,UAAAhC,QACAkF,EAAAR,EACA4gE,GAFApgE,GAIAogE,EAAAM,aAAA,SAAAlhE,GACA,OAAA1C,UAAAhC,QACA4lE,EAAA,mBAAAlhE,OACA4gE,GAFAM,GAIAN,EAAAvU,SAAAuU,EAAAM,aACAN,EAAAQ,aAAA,SAAAphE,GACA,OAAA1C,UAAAhC,QACA8lE,EAAA,mBAAAphE,OACA4gE,GAFAQ,GAIAR,EAAAK,SAAA,SAAAjhE,GACA,OAAA1C,UAAAhC,QACA2lE,GAAAjhE,EACA4gE,GAFAK,GAIAL,EAAAU,OAAA,SAAAthE,GACA,OAAA1C,UAAAhC,QACAgmE,EAAA,mBAAAthE,OACA4gE,GAFAU,GAIAV,EAAAwB,eAAA,SAAApiE,GACA,OAAA1C,UAAAhC,QACAimE,EAAAvhE,IACA4gE,GAFA1kE,KAAAgtB,KAAAq4C,IAIAX,EAAAa,QAAA,SAAAzhE,GACA,OAAA1C,UAAAhC,QACAmmE,GAAAzhE,EACA4gE,GAFAa,GAIAb,EAAAyB,MAAA,SAAAriE,GACA,OAAA1C,UAAAhC,QACAomE,EAAA1hE,IACA4gE,GAFA1kE,KAAAgtB,KAAAw4C,IAIAd,EAAAC,MAAA,SAAA7gE,GACA,OAAA1C,UAAAhC,QACA0E,KACA6gE,EACA7gE,EAAA,EACA6gE,EAAA7gE,GAEAwtC,EAAAl2C,EAAA,KAAAk2C,EAAAr1C,EAAA8vB,IAAAulB,EAAA,KACA9kC,EAAA8S,IAAA,CACAwS,KAAA,MACA6yC,QAAA,KAGO7gE,EAAA,IACP0I,EAAA6S,MAAA,CACAyS,KAAA,QACA6yC,QAAA7gE,IAEAwtC,EAAAF,GAAAszB,EAAAqB,OAEArB,GAnBAC,GAqBAD,EAAArlD,MAAA,WACA,IAAAtkB,EAAAqrE,EAAA5qE,EAAAgB,EAAAq7B,EAAAz4B,OAAAjE,EAAA+/D,EAAA97D,OAAAsL,EAAApG,EAAA,GAAAsG,EAAAtG,EAAA,GACA,IAAAvJ,EAAA,EAAiBA,EAAAyB,IAAOzB,GACxBS,EAAAq8B,EAAA98B,IAAAqJ,MAAArJ,EACAS,EAAAwqE,OAAA,EAEA,IAAAjrE,EAAA,EAAiBA,EAAAI,IAAOJ,EAExB,iBADAS,EAAA0/D,EAAAngE,IACA+0B,SAAAt0B,EAAAs0B,OAAA+H,EAAAr8B,EAAAs0B,SACA,iBAAAt0B,EAAAq0B,SAAAr0B,EAAAq0B,OAAAgI,EAAAr8B,EAAAq0B,WACAr0B,EAAAs0B,OAAAk2C,SACAxqE,EAAAq0B,OAAAm2C,OAEA,IAAAjrE,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxBS,EAAAq8B,EAAA98B,GACA+b,MAAAtb,EAAAsI,KAAAtI,EAAAsI,EAAAkjB,EAAA,IAAAtc,IACAoM,MAAAtb,EAAAuI,KAAAvI,EAAAuI,EAAAijB,EAAA,IAAApc,IACAkM,MAAAtb,EAAAioE,MAAAjoE,EAAAioE,GAAAjoE,EAAAsI,GACAgT,MAAAtb,EAAAkoE,MAAAloE,EAAAkoE,GAAAloE,EAAAuI,GAGA,GADA6gE,EAAA,GACA,mBAAAI,EAAA,IAAAjqE,EAAA,EAAyDA,EAAAI,IAAOJ,EAAA6pE,EAAA7pE,IAAAiqE,EAAA9pE,KAAAyG,KAAAu5D,EAAAngE,WAA2D,IAAAA,EAAA,EAAiBA,EAAAI,IAAOJ,EAAA6pE,EAAA7pE,GAAAiqE,EAEnJ,GADAH,EAAA,GACA,mBAAAK,EAAA,IAAAnqE,EAAA,EAAyDA,EAAAI,IAAOJ,EAAA8pE,EAAA9pE,IAAAmqE,EAAAhqE,KAAAyG,KAAAu5D,EAAAngE,WAA2D,IAAAA,EAAA,EAAiBA,EAAAI,IAAOJ,EAAA8pE,EAAA9pE,GAAAmqE,EAEnJ,GADAJ,EAAA,GACA,mBAAAM,EAAA,IAAArqE,EAAA,EAAmDA,EAAAyB,IAAOzB,EAAA+pE,EAAA/pE,IAAAqqE,EAAAlqE,KAAAyG,KAAAk2B,EAAA98B,WAAmD,IAAAA,EAAA,EAAiBA,EAAAyB,IAAOzB,EAAA+pE,EAAA/pE,GAAAqqE,EACrI,SAAAp+C,EAAAld,EAAAxF,GACA,IAAA8hE,EAAA,CAEA,IADAA,EAAA,IAAA9jE,MAAA9F,GACAuI,EAAA,EAAqBA,EAAAvI,IAAOuI,EAC5BqhE,EAAArhE,GAAA,GAEA,IAAAA,EAAA,EAAqBA,EAAA5J,IAAO4J,EAAA,CAC5B,IAAAvJ,EAAA0/D,EAAAn2D,GACAqhE,EAAA5qE,EAAAs0B,OAAA1rB,OAAAxF,KAAApD,EAAAq0B,QACAu2C,EAAA5qE,EAAAq0B,OAAAzrB,OAAAxF,KAAApD,EAAAs0B,SAIA,IADA,IAAAhsB,EAAAuiE,EAAAD,EAAArrE,GAAAgK,GAAA,EAAA/J,EAAAqrE,EAAAjnE,SACA2F,EAAA/J,GAAA,IAAA8b,MAAAhT,EAAAuiE,EAAAthE,GAAA+E,IAAA,OAAAhG,EACA,OAAA9D,KAAA0tB,SAAAppB,EAEA,OAAAogE,EAAAoB,UAEApB,EAAAoB,OAAA,WACA,OAAApB,EAAAC,MAAA,KAEAD,EAAA91C,KAAA,WACA,OAAA81C,EAAAC,MAAA,IAEAD,EAAAtqC,KAAA,WAEA,GADAA,MAAAj9B,EAAA0Y,SAAAukB,OAAAC,OAAA1K,GAAA3hB,GAAA,kBAAAq1D,IAAAr1D,GAAA,aAAA63D,GAAA73D,GAAA,gBAAAu1D,MACAniE,UAAAhC,OAAA,OAAAg7B,EACAz4B,KAAAqM,GAAA,kBAAAw1D,IAAAx1D,GAAA,iBAAA21D,IAAAzoE,KAAAk/B,IAMAj9B,EAAA0zB,OAAA6zC,EAAAl4D,EAAA,OA0CA,IAAAy4D,GAAA,GAAAE,GAAA,EAAAG,GAAArmD,IA2DA,SAAAqnD,GAAA7pE,EAAA8pE,GAIA,OAHAppE,EAAA0zB,OAAAp0B,EAAA8pE,EAAA,2BACA9pE,EAAAo7B,MAAAp7B,EACAA,EAAAy+D,MAAAsL,GACA/pE,EAEA,SAAAgqE,GAAAv/C,EAAAtnB,GAEA,IADA,IAAAi4B,EAAA,CAAA3Q,GACA,OAAAA,EAAA2Q,EAAAytB,QAEA,GADA1lD,EAAAsnB,IACAnD,EAAAmD,EAAAnD,YAAAvnB,EAAAunB,EAAA3kB,QAEA,IADA,IAAA5C,EAAAunB,IACAvnB,GAAA,GAAAq7B,EAAAj5B,KAAAmlB,EAAAvnB,IAIA,SAAAkqE,GAAAx/C,EAAAtnB,GAEA,IADA,IAAAi4B,EAAA,CAAA3Q,GAAAy/C,EAAA,GACA,OAAAz/C,EAAA2Q,EAAAytB,QAEA,GADAqhB,EAAA/nE,KAAAsoB,IACAnD,EAAAmD,EAAAnD,YAAAvnB,EAAAunB,EAAA3kB,QAEA,IADA,IAAA5C,EAAAunB,EAAAhpB,GAAA,IACAA,EAAAyB,GAAAq7B,EAAAj5B,KAAAmlB,EAAAhpB,IAGA,YAAAmsB,EAAAy/C,EAAArhB,QACA1lD,EAAAsnB,GAGA,SAAA0/C,GAAAvrE,GACA,OAAAA,EAAA0oB,SAEA,SAAA8iD,GAAAxrE,GACA,OAAAA,EAAAW,MAEA,SAAA8qE,GAAA18D,EAAAwT,GACA,OAAAA,EAAA5hB,MAAAoO,EAAApO,MAEA,SAAAwqE,GAAA3uC,GACA,OAAA16B,EAAAkxB,MAAAwJ,EAAAtmB,IAAA,SAAA9L,GACA,OAAAA,EAAAse,UAAA,IAAAxS,IAAA,SAAAqS,GACA,OACAkM,OAAArqB,EACAoqB,OAAAjM,QArGAzmB,EAAA2a,OAAAyuD,UAAA,WACA,IAAAl7D,EAAAy7D,GAAA/iD,EAAA6iD,GAAA5qE,EAAA6qE,GACA,SAAAN,EAAAlsE,GACA,IAAA6sB,EAAAnP,EAAA,CAAA1d,GAAAw9B,EAAA,GAEA,IADAx9B,EAAAk2B,MAAA,EACA,OAAArJ,EAAAnP,EAAAutC,QAEA,GADAztB,EAAAj5B,KAAAsoB,IACA6/C,EAAAhjD,EAAA7oB,KAAAqrE,EAAAr/C,IAAAqJ,UAAA/zB,EAAAuqE,EAAA3nE,QAAA,CAEA,IADA,IAAA5C,EAAAuqE,EAAAnjD,IACApnB,GAAA,GACAub,EAAAnZ,KAAAglB,EAAAmjD,EAAAvqE,IACAonB,EAAAne,OAAAyhB,EACAtD,EAAA2M,MAAArJ,EAAAqJ,MAAA,EAEAv0B,IAAAkrB,EAAAlrB,MAAA,GACAkrB,EAAAnD,SAAAgjD,OAEA/qE,IAAAkrB,EAAAlrB,SAAAd,KAAAqrE,EAAAr/C,IAAAqJ,QAAA,UACArJ,EAAAnD,SAQA,OALA2iD,GAAArsE,EAAA,SAAA6sB,GACA,IAAA6/C,EAAAthE,EACA4F,IAAA07D,EAAA7/C,EAAAnD,WAAAgjD,EAAA17D,QACArP,IAAAyJ,EAAAyhB,EAAAzhB,YAAAzJ,OAAAkrB,EAAAlrB,SAEA67B,EA8BA,OA5BA0uC,EAAAl7D,KAAA,SAAAvH,GACA,OAAA1C,UAAAhC,QACAiM,EAAAvH,EACAyiE,GAFAl7D,GAIAk7D,EAAAxiD,SAAA,SAAAjgB,GACA,OAAA1C,UAAAhC,QACA2kB,EAAAjgB,EACAyiE,GAFAxiD,GAIAwiD,EAAAvqE,MAAA,SAAA8H,GACA,OAAA1C,UAAAhC,QACApD,EAAA8H,EACAyiE,GAFAvqE,GAIAuqE,EAAAS,QAAA,SAAA3sE,GAWA,OAVA2B,IACAyqE,GAAApsE,EAAA,SAAA6sB,GACAA,EAAAnD,WAAAmD,EAAAlrB,MAAA,KAEA0qE,GAAArsE,EAAA,SAAA6sB,GACA,IAAAzhB,EACAyhB,EAAAnD,WAAAmD,EAAAlrB,SAAAd,KAAAqrE,EAAAr/C,IAAAqJ,QAAA,IACA9qB,EAAAyhB,EAAAzhB,YAAAzJ,OAAAkrB,EAAAlrB,UAGA3B,GAEAksE,GAkDAppE,EAAA2a,OAAAmvD,UAAA,WACA,IAAAV,EAAAppE,EAAA2a,OAAAyuD,YAAAjiE,EAAA,MAwBA,SAAA2iE,EAAA5rE,EAAAN,GACA,IAAA88B,EAAA0uC,EAAArrE,KAAAyG,KAAAtG,EAAAN,GAEA,OA1BA,SAAAisB,EAAAE,EAAApjB,EAAAm3B,EAAAC,GACA,IAAAnX,EAAAmD,EAAAnD,SAKA,GAJAmD,EAAApjB,IACAojB,EAAAnjB,EAAAmjB,EAAAqJ,MAAA2K,EACAhU,EAAA+T,KACA/T,EAAAgU,KACAnX,IAAAvnB,EAAAunB,EAAA3kB,QAAA,CACA,IAAA5C,EAAApB,EAAAC,EAAAN,GAAA,EAEA,IADAkgC,EAAA/T,EAAAlrB,MAAAi/B,EAAA/T,EAAAlrB,MAAA,IACAjB,EAAAyB,GACAwqB,EAAA5rB,EAAA2oB,EAAAhpB,GAAA+I,EAAAzI,EAAAD,EAAAY,MAAAi/B,EAAAC,GACAp3B,GAAAzI,GAcA2rB,CAAA6Q,EAAA,KAAAvzB,EAAA,GAAAA,EAAA,GAVA,SAAAisB,EAAArJ,GACA,IAAAnD,EAAAmD,EAAAnD,SAAA1oB,EAAA,EACA,GAAA0oB,IAAAvnB,EAAAunB,EAAA3kB,QAEA,IADA,IAAA5C,EAAAzB,GAAA,IACAA,EAAAyB,GAAAnB,EAAA2E,KAAAiF,IAAA5J,EAAAk1B,EAAAxM,EAAAhpB,KAEA,SAAAM,EAIAk1B,CAAAsH,EAAA,KACAA,EAOA,OALAovC,EAAA3iE,KAAA,SAAAR,GACA,OAAA1C,UAAAhC,QACAkF,EAAAR,EACAmjE,GAFA3iE,GAIAgiE,GAAAW,EAAAV,IAEAppE,EAAA2a,OAAA+D,IAAA,WACA,IAAA7f,EAAAkrE,OAAA77D,EAAA87D,GAAAxpD,EAAA,EAAAD,EAAAge,GAAA0rC,EAAA,EACA,SAAAvrD,EAAAjY,GACA,IAEO+oB,EAFPnwB,EAAAoH,EAAAxE,OAAA8Y,EAAAtU,EAAA2N,IAAA,SAAAlW,EAAAN,GACA,OAAAiB,EAAAd,KAAA2gB,EAAAxgB,EAAAN,KACOqP,IAAA,mBAAAuT,IAAA5b,MAAAJ,KAAAP,WAAAuc,GAAA0pD,GAAA,mBAAA3pD,IAAA3b,MAAAJ,KAAAP,WAAAsc,GAAAtT,EAAAvN,EAAAmD,KAAAqF,IAAArF,KAAAC,IAAAonE,GAAA7qE,IAAA,mBAAA4qE,IAAArlE,MAAAJ,KAAAP,WAAAgmE,IAAAE,EAAAzqE,GAAAwqE,EAAA,QAAAx+C,EAAA1rB,EAAA0rB,IAAA3Q,GAAAzQ,EAAAohB,GAAAw+C,EAAA7qE,EAAA8qE,GAAAz+C,EAAA,EAAAzkB,EAAAjH,EAAAuU,MAAAlV,GAAA+qE,EAAA,GAeP,OAdA,MAAAl8D,GAAAjH,EAAAiH,SAAA87D,GAAA,SAAApsE,EAAAgK,GACA,OAAAmT,EAAAnT,GAAAmT,EAAAnd,IACO,SAAAA,EAAAgK,GACP,OAAAsG,EAAAzH,EAAA7I,GAAA6I,EAAAmB,MAEAX,EAAAqU,QAAA,SAAA1d,GACAwsE,EAAAxsE,GAAA,CACA6I,OAAA7I,GACAiB,MAAA2wB,EAAAzU,EAAAnd,GACA4iB,WAAAvT,EACAsT,SAAAtT,GAAAuiB,EAAAllB,EAAA6/D,EACAF,SAAAvqE,KAGA0qE,EA2BA,OAzBA1rD,EAAA7f,MAAA,SAAAmF,GACA,OAAAC,UAAAhC,QACApD,EAAAmF,EACA0a,GAFA7f,GAIA6f,EAAAxQ,KAAA,SAAAlK,GACA,OAAAC,UAAAhC,QACAiM,EAAAlK,EACA0a,GAFAxQ,GAIAwQ,EAAA8B,WAAA,SAAAxc,GACA,OAAAC,UAAAhC,QACAue,EAAAxc,EACA0a,GAFA8B,GAIA9B,EAAA6B,SAAA,SAAAvc,GACA,OAAAC,UAAAhC,QACAse,EAAAvc,EACA0a,GAFA6B,GAIA7B,EAAAurD,SAAA,SAAAjmE,GACA,OAAAC,UAAAhC,QACAgoE,EAAAjmE,EACA0a,GAFAurD,GAIAvrD,GAEA,IAAAsrD,GAAA,GA0DA,SAAAK,GAAAnsE,GACA,OAAAA,EAAAyI,EAEA,SAAA2jE,GAAApsE,GACA,OAAAA,EAAA0I,EAEA,SAAA2jE,GAAArsE,EAAAge,EAAAtV,GACA1I,EAAAge,KACAhe,EAAA0I,IAjEA5G,EAAA2a,OAAAC,MAAA,WACA,IAAAG,EAAAyX,EAAA1X,EAAA0vD,GAAA3vD,EAAA4vD,GAAAjI,EAAA+H,GAAA5jE,EAAA0jE,GAAAzjE,EAAA0jE,GACA,SAAA1vD,EAAAnU,EAAAQ,GACA,KAAA5H,EAAAoH,EAAAxE,QAAA,OAAAwE,EACA,IAAAikE,EAAAjkE,EAAA2N,IAAA,SAAAlW,EAAAN,GACA,OAAAmd,EAAAhd,KAAA6c,EAAA1c,EAAAN,KAEA8J,EAAAgjE,EAAAt2D,IAAA,SAAAlW,GACA,OAAAA,EAAAkW,IAAA,SAAAob,EAAA5xB,GACA,OAAA+I,EAAA5I,KAAA6c,EAAA4U,EAAA5xB,GAAAgJ,EAAA7I,KAAA6c,EAAA4U,EAAA5xB,QAGA+sE,EAAA7vD,EAAA/c,KAAA6c,EAAAlT,EAAAT,GACAyjE,EAAA1qE,EAAAwwB,QAAAk6C,EAAAC,GACAjjE,EAAA1H,EAAAwwB,QAAA9oB,EAAAijE,GACA,IACAtrE,EAAAzB,EAAAgK,EAAAvJ,EADAusE,EAAA/vD,EAAA9c,KAAA6c,EAAAlT,EAAAT,GACAjJ,EAAA0sE,EAAA,GAAAzoE,OACA,IAAA2F,EAAA,EAAiBA,EAAA5J,IAAO4J,EAExB,IADA46D,EAAAzkE,KAAA6c,EAAA8vD,EAAA,GAAA9iE,GAAAvJ,EAAAusE,EAAAhjE,GAAAF,EAAA,GAAAE,GAAA,IACAhK,EAAA,EAAmBA,EAAAyB,IAAOzB,EAC1B4kE,EAAAzkE,KAAA6c,EAAA8vD,EAAA9sE,GAAAgK,GAAAvJ,GAAAqJ,EAAA9J,EAAA,GAAAgK,GAAA,GAAAF,EAAA9J,GAAAgK,GAAA,IAGA,OAAAnB,EAgCA,OA9BAmU,EAAAG,OAAA,SAAApU,GACA,OAAA1C,UAAAhC,QACA8Y,EAAApU,EACAiU,GAFAG,GAIAH,EAAAE,MAAA,SAAAnU,GACA,OAAA1C,UAAAhC,QACA6Y,EAAA,mBAAAnU,IAAAkkE,GAAApsE,IAAAkI,IAAA6jE,GACA5vD,GAFAE,GAIAF,EAAAC,OAAA,SAAAlU,GACA,OAAA1C,UAAAhC,QACA4Y,EAAA,mBAAAlU,IAAAmkE,GAAArsE,IAAAkI,IAAA8jE,GACA7vD,GAFAC,GAIAD,EAAAjU,EAAA,SAAAkQ,GACA,OAAA5S,UAAAhC,QACA0E,EAAAkQ,EACA+D,GAFAjU,GAIAiU,EAAAhU,EAAA,SAAAiQ,GACA,OAAA5S,UAAAhC,QACA2E,EAAAiQ,EACA+D,GAFAhU,GAIAgU,EAAA4nD,IAAA,SAAA3rD,GACA,OAAA5S,UAAAhC,QACAugE,EAAA3rD,EACA+D,GAFA4nD,GAIA5nD,GAYA,IAAAiwD,GAAA7qE,EAAAoU,IAAA,CACA22D,aAAA,SAAAtkE,GACA,IAAA7I,EAAAgK,EAAAvI,EAAAoH,EAAAxE,OAAA6F,EAAArB,EAAA2N,IAAA42D,IAAAC,EAAAxkE,EAAA2N,IAAA82D,IAAAjkE,EAAAjH,EAAAuU,MAAAlV,GAAA6O,KAAA,SAAAjB,EAAAwT,GACA,OAAA3Y,EAAAmF,GAAAnF,EAAA2Y,KACOxP,EAAA,EAAAE,EAAA,EAAAg6D,EAAA,GAAAC,EAAA,GACP,IAAAxtE,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxBgK,EAAAX,EAAArJ,GACAqT,EAAAE,GACAF,GAAAg6D,EAAArjE,GACAujE,EAAA1pE,KAAAmG,KAEAuJ,GAAA85D,EAAArjE,GACAwjE,EAAA3pE,KAAAmG,IAGA,OAAAwjE,EAAAz1B,UAAAp6B,OAAA4vD,IAEAx1B,QAAA,SAAAlvC,GACA,OAAAzG,EAAAuU,MAAA9N,EAAAxE,QAAA0zC,WAEA01B,QAAAb,KAEAM,GAAA9qE,EAAAoU,IAAA,CACAk3D,WAAA,SAAA7kE,GACA,IAAA7I,EAAAgK,EAAAvJ,EAAAgB,EAAAoH,EAAAxE,OAAAjE,EAAAyI,EAAA,GAAAxE,OAAAgpE,EAAA,GAAAnjE,EAAA,EAAAoU,EAAA,GACA,IAAAtU,EAAA,EAAiBA,EAAA5J,IAAO4J,EAAA,CACxB,IAAAhK,EAAA,EAAAS,EAAA,EAA0BT,EAAAyB,EAAOzB,IAAAS,GAAAoI,EAAA7I,GAAAgK,GAAA,GACjCvJ,EAAAyJ,MAAAzJ,GACA4sE,EAAAxpE,KAAApD,GAEA,IAAAuJ,EAAA,EAAiBA,EAAA5J,IAAO4J,EACxBsU,EAAAtU,IAAAE,EAAAmjE,EAAArjE,IAAA,EAEA,OAAAsU,GAEAqvD,OAAA,SAAA9kE,GACA,IAAA7I,EAAAgK,EAAA0C,EAAA4zD,EAAAsN,EAAAC,EAAA3tC,EAAAz/B,EAAAqtE,EAAArsE,EAAAoH,EAAAxE,OAAA0E,EAAAF,EAAA,GAAAzI,EAAA2I,EAAA1E,OAAAia,EAAA,GAEA,IADAA,EAAA,GAAA7d,EAAAqtE,EAAA,EACA9jE,EAAA,EAAiBA,EAAA5J,IAAO4J,EAAA,CACxB,IAAAhK,EAAA,EAAAsgE,EAAA,EAA2BtgE,EAAAyB,IAAOzB,EAAAsgE,GAAAz3D,EAAA7I,GAAAgK,GAAA,GAClC,IAAAhK,EAAA,EAAA4tE,EAAA,EAAA1tC,EAAAn3B,EAAAiB,GAAA,GAAAjB,EAAAiB,EAAA,MAAuDhK,EAAAyB,IAAOzB,EAAA,CAC9D,IAAA0M,EAAA,EAAAmhE,GAAAhlE,EAAA7I,GAAAgK,GAAA,GAAAnB,EAAA7I,GAAAgK,EAAA,UAAAk2B,GAA0ExzB,EAAA1M,IAAO0M,EACjFmhE,IAAAhlE,EAAA6D,GAAA1C,GAAA,GAAAnB,EAAA6D,GAAA1C,EAAA,OAAAk2B,EAEA0tC,GAAAC,EAAAhlE,EAAA7I,GAAAgK,GAAA,GAEAsU,EAAAtU,GAAAvJ,GAAA6/D,EAAAsN,EAAAtN,EAAApgC,EAAA,EACAz/B,EAAAqtE,MAAArtE,GAEA,IAAAuJ,EAAA,EAAiBA,EAAA5J,IAAO4J,EAAAsU,EAAAtU,IAAA8jE,EACxB,OAAAxvD,GAEAyvD,OAAA,SAAAllE,GACA,IAAA7I,EAAAgK,EAAAvJ,EAAAgB,EAAAoH,EAAAxE,OAAAjE,EAAAyI,EAAA,GAAAxE,OAAAqI,EAAA,EAAAjL,EAAA6c,EAAA,GACA,IAAAtU,EAAA,EAAiBA,EAAA5J,IAAO4J,EAAA,CACxB,IAAAhK,EAAA,EAAAS,EAAA,EAA0BT,EAAAyB,EAAOzB,IAAAS,GAAAoI,EAAA7I,GAAAgK,GAAA,GACjC,GAAAvJ,EAAA,IAAAT,EAAA,EAA0BA,EAAAyB,EAAOzB,IAAA6I,EAAA7I,GAAAgK,GAAA,IAAAvJ,OAAyB,IAAAT,EAAA,EAAiBA,EAAAyB,EAAOzB,IAAA6I,EAAA7I,GAAAgK,GAAA,GAAA0C,EAElF,IAAA1C,EAAA,EAAiBA,EAAA5J,IAAO4J,EAAAsU,EAAAtU,GAAA,EACxB,OAAAsU,GAEA0vD,KAAAnB,KAEA,SAAAD,GAAA/jE,GACA,OAAAzG,EAAAuU,MAAA9N,EAAAxE,QAEA,SAAAwoE,GAAAhkE,GAEA,IADA,IAAAmB,GAAA,EAAA5J,EAAAyI,EAAA,GAAAxE,OAAAia,EAAA,KACAtU,EAAA5J,GAAAke,EAAAtU,GAAA,EACA,OAAAsU,EAEA,SAAA8uD,GAAAt9C,GAEA,IADA,IAAApjB,EAAA1M,EAAA,EAAAgK,EAAA,EAAA4nB,EAAA9B,EAAA,MAAAruB,EAAAquB,EAAAzrB,OACUrE,EAAAyB,IAAMzB,GAChB0M,EAAAojB,EAAA9vB,GAAA,IAAA4xB,IACA5nB,EAAAhK,EACA4xB,EAAAllB,GAGA,OAAA1C,EAEA,SAAAsjE,GAAAhtE,GACA,OAAAA,EAAA2tE,OAAAC,GAAA,GAEA,SAAAA,GAAApsE,EAAAxB,GACA,OAAAwB,EAAAxB,EAAA,GAgDA,SAAA6tE,GAAAx3D,EAAAwG,GACA,OAAAixD,GAAAz3D,EAAA1R,KAAAW,KAAAX,KAAAq9B,IAAAnlB,EAAA9Y,QAAAY,KAAAwgC,IAAA,IAEA,SAAA2oC,GAAAz3D,EAAAlV,GAEA,IADA,IAAAsH,GAAA,EAAA8Z,GAAAlM,EAAA,GAAAvW,GAAAuW,EAAA,GAAAkM,GAAAphB,EAAAoQ,EAAA,KACA9I,GAAAtH,GAAAoQ,EAAA9I,GAAA3I,EAAA2I,EAAA8Z,EACA,OAAAhR,EAEA,SAAAw8D,GAAAlxD,GACA,OAAA/a,EAAAkI,IAAA6S,GAAA/a,EAAA8H,IAAAiT,IA2CA,SAAAmxD,GAAAj/D,EAAAwT,GACA,OAAAxT,EAAApO,MAAA4hB,EAAA5hB,MAEA,SAAAstE,GAAAl/D,EAAAwT,GACA,IAAAxiB,EAAAgP,EAAAm/D,WACAn/D,EAAAm/D,WAAA3rD,EACAA,EAAA4rD,WAAAp/D,EACAwT,EAAA2rD,WAAAnuE,EACAA,EAAAouE,WAAA5rD,EAEA,SAAA6rD,GAAAr/D,EAAAwT,GACAxT,EAAAm/D,WAAA3rD,EACAA,EAAA4rD,WAAAp/D,EAEA,SAAAs/D,GAAAt/D,EAAAwT,GACA,IAAAqd,EAAArd,EAAA9Z,EAAAsG,EAAAtG,EAAAo3B,EAAAtd,EAAA7Z,EAAAqG,EAAArG,EAAA4lE,EAAAv/D,EAAAvO,EAAA+hB,EAAA/hB,EACA,WAAA8tE,IAAA1uC,IAAAC,IAEA,SAAA0uC,GAAA1iD,GACA,IAAA2Q,EAAA3Q,EAAAnD,YAAAvnB,EAAAq7B,EAAAz4B,QAAA,CACA,IAAAy4B,EAAAztB,EAAAwT,EAAAxiB,EAAAL,EAAAgK,EAAA0C,EAAAjL,EAAAqtE,EAAA5qD,IAAA6qD,GAAA7qD,IAAA8qD,EAAA9qD,IAAA+qD,GAAA/qD,IAYA,GALA4Y,EAAApf,QAAAwxD,KACA7/D,EAAAytB,EAAA,IACA/zB,GAAAsG,EAAAvO,EACAuO,EAAArG,EAAA,EACA49C,EAAAv3C,GACA5N,EAAA,KACAohB,EAAAia,EAAA,IACA/zB,EAAA8Z,EAAA/hB,EACA+hB,EAAA7Z,EAAA,EACA49C,EAAA/jC,GACAphB,EAAA,GAQA,IANA0tE,GAAA9/D,EAAAwT,EADAxiB,EAAAy8B,EAAA,IAEA8pB,EAAAvmD,GACAkuE,GAAAl/D,EAAAhP,GACAgP,EAAAo/D,WAAApuE,EACAkuE,GAAAluE,EAAAwiB,GACAA,EAAAxT,EAAAm/D,WACAxuE,EAAA,EAAmBA,EAAAyB,EAAOzB,IAAA,CAC1BmvE,GAAA9/D,EAAAwT,EAAAxiB,EAAAy8B,EAAA98B,IACA,IAAAovE,EAAA,EAAA9O,EAAA,EAAAsN,EAAA,EACA,IAAA5jE,EAAA6Y,EAAA2rD,WAAgCxkE,IAAA6Y,EAAS7Y,IAAAwkE,WAAAlO,IACzC,GAAAqO,GAAA3kE,EAAA3J,GAAA,CACA+uE,EAAA,EACA,MAGA,MAAAA,EACA,IAAA1iE,EAAA2C,EAAAo/D,WAAkC/hE,IAAA1C,EAAAykE,aAClCE,GAAAjiE,EAAArM,GADsDqM,IAAA+hE,WAAAb,KAMtDwB,GACA9O,EAAAsN,GAAAtN,GAAAsN,GAAA/qD,EAAA/hB,EAAAuO,EAAAvO,EAAA4tE,GAAAr/D,EAAAwT,EAAA7Y,GAAiF0kE,GAAAr/D,EAAA3C,EAAAmW,GACjF7iB,MAEAuuE,GAAAl/D,EAAAhP,GACAwiB,EAAAxiB,EACAumD,EAAAvmD,IAKA,IAAA+iB,GAAA0rD,EAAAC,GAAA,EAAA1rD,GAAA2rD,EAAAC,GAAA,EAAA3c,EAAA,EACA,IAAAtyD,EAAA,EAAeA,EAAAyB,EAAOzB,KACtBK,EAAAy8B,EAAA98B,IACA+I,GAAAqa,EACA/iB,EAAA2I,GAAAqa,EACAivC,EAAArtD,KAAAiF,IAAAooD,EAAAjyD,EAAAS,EAAAmE,KAAAgtB,KAAA5xB,EAAA0I,EAAA1I,EAAA0I,EAAA1I,EAAA2I,EAAA3I,EAAA2I,IAEAmjB,EAAArrB,EAAAwxD,EACAx1B,EAAApf,QAAA2xD,IA3DA,SAAAzoB,EAAAz6B,GACA2iD,EAAA7pE,KAAAqF,IAAA6hB,EAAApjB,EAAAojB,EAAArrB,EAAAguE,GACAC,EAAA9pE,KAAAiF,IAAAiiB,EAAApjB,EAAAojB,EAAArrB,EAAAiuE,GACAC,EAAA/pE,KAAAqF,IAAA6hB,EAAAnjB,EAAAmjB,EAAArrB,EAAAkuE,GACAC,EAAAhqE,KAAAiF,IAAAiiB,EAAAnjB,EAAAmjB,EAAArrB,EAAAmuE,IAyDA,SAAAC,GAAA/iD,GACAA,EAAAqiD,WAAAriD,EAAAsiD,WAAAtiD,EAEA,SAAAkjD,GAAAljD,UACAA,EAAAqiD,kBACAriD,EAAAsiD,WAYA,SAAAU,GAAA9/D,EAAAwT,EAAAxiB,GACA,IAAAivE,EAAAjgE,EAAAvO,EAAAT,EAAAS,EAAAo/B,EAAArd,EAAA9Z,EAAAsG,EAAAtG,EAAAo3B,EAAAtd,EAAA7Z,EAAAqG,EAAArG,EACA,GAAAsmE,IAAApvC,GAAAC,GAAA,CACA,IAAAmsC,EAAAzpD,EAAA/hB,EAAAT,EAAAS,EAAAwB,EAAA49B,IAAAC,IAGAp3B,EAAA,KADAumE,OADAhD,QAEA,EAAAhqE,GAAA0G,EAAA/D,KAAAgtB,KAAAhtB,KAAAiF,IAAA,IAAAoiE,GAAAgD,EAAAhtE,IAAAgtE,GAAAhtE,GAAAgtE,EAAAhD,OAAA,EAAAhqE,GACAjC,EAAA0I,EAAAsG,EAAAtG,IAAAm3B,EAAAl3B,EAAAm3B,EACA9/B,EAAA2I,EAAAqG,EAAArG,EAAAD,EAAAo3B,EAAAn3B,EAAAk3B,OAEA7/B,EAAA0I,EAAAsG,EAAAtG,EAAAumE,EACAjvE,EAAA2I,EAAAqG,EAAArG,EAuHA,SAAAumE,GAAAlgE,EAAAwT,GACA,OAAAxT,EAAA3E,QAAAmY,EAAAnY,OAAA,IAEA,SAAA8kE,GAAA59C,GACA,IAAA5I,EAAA4I,EAAA5I,SACA,OAAAA,EAAA3kB,OAAA2kB,EAAA,GAAA4I,EAAA1wB,EAEA,SAAAuuE,GAAA79C,GACA,IAAAnwB,EAAAunB,EAAA4I,EAAA5I,SACA,OAAAvnB,EAAAunB,EAAA3kB,QAAA2kB,EAAAvnB,EAAA,GAAAmwB,EAAA1wB,EAEA,SAAAwuE,GAAAC,EAAAC,EAAAplB,GACA,IAAAqlB,EAAArlB,GAAAolB,EAAA5vE,EAAA2vE,EAAA3vE,GACA4vE,EAAAvvE,GAAAwvE,EACAD,EAAA7tE,GAAAyoD,EACAmlB,EAAAtvE,GAAAwvE,EACAD,EAAA32D,GAAAuxC,EACAolB,EAAAxvE,GAAAoqD,EAWA,SAAAslB,GAAAC,EAAAn+C,EAAAo+C,GACA,OAAAD,EAAA1gE,EAAA3E,SAAAknB,EAAAlnB,OAAAqlE,EAAA1gE,EAAA2gE,EAgNA,SAAAC,GAAA9jD,GACA,OACApjB,EAAAojB,EAAApjB,EACAC,EAAAmjB,EAAAnjB,EACAk3B,GAAA/T,EAAA+T,GACAC,GAAAhU,EAAAgU,IAGA,SAAA+vC,GAAA/jD,EAAAvR,GACA,IAAA7R,EAAAojB,EAAApjB,EAAA6R,EAAA,GAAA5R,EAAAmjB,EAAAnjB,EAAA4R,EAAA,GAAAslB,EAAA/T,EAAA+T,GAAAtlB,EAAA,GAAAA,EAAA,GAAAulB,EAAAhU,EAAAgU,GAAAvlB,EAAA,GAAAA,EAAA,GASA,OARAslB,EAAA,IACAn3B,GAAAm3B,EAAA,EACAA,EAAA,GAEAC,EAAA,IACAn3B,GAAAm3B,EAAA,EACAA,EAAA,GAEA,CACAp3B,IACAC,IACAk3B,KACAC,MAsCA,SAAAgwC,GAAA/qE,GACA,IAAAkf,EAAAlf,EAAA,GAAAyuB,EAAAzuB,IAAAf,OAAA,GACA,OAAAigB,EAAAuP,EAAA,CAAAvP,EAAAuP,GAAA,CAAAA,EAAAvP,GAEA,SAAA8rD,GAAA97D,GACA,OAAAA,EAAA+7D,YAAA/7D,EAAA+7D,cAAAF,GAAA77D,EAAAqC,SAEA,SAAA25D,GAAAlrE,EAAAuR,EAAA45D,EAAAvtD,GACA,IAAA6f,EAAA0tC,EAAAnrE,EAAA,GAAAA,EAAA,IAAApF,EAAAgjB,EAAArM,EAAA,GAAAA,EAAA,IACA,gBAAA5N,GACA,OAAA/I,EAAA6iC,EAAA95B,KAGA,SAAAynE,GAAAprE,EAAAqrE,GACA,IAAAvwC,EAAAzN,EAAA,EAAAC,EAAAttB,EAAAf,OAAA,EAAA4oB,EAAA7nB,EAAAqtB,GAAA2Q,EAAAh+B,EAAAstB,GAOA,OANA0Q,EAAAnW,IACAiT,EAAAzN,IAAAC,IAAAwN,EACAA,EAAAjT,IAAAmW,IAAAlD,GAEA96B,EAAAqtB,GAAAg+C,EAAA9qE,MAAAsnB,GACA7nB,EAAAstB,GAAA+9C,EAAA7qE,KAAAw9B,GACAh+B,EAEA,SAAAsrE,GAAA58C,GACA,OAAAA,EAAA,CACAnuB,MAAA,SAAAoD,GACA,OAAA9D,KAAAU,MAAAoD,EAAA+qB,MAEAluB,KAAA,SAAAmD,GACA,OAAA9D,KAAAW,KAAAmD,EAAA+qB,OAEK68C,GA/oBLvuE,EAAA2a,OAAA6zD,UAAA,WACA,IAAAC,GAAA,EAAAC,EAAA3E,OAAA4E,EAAA1C,GAAA2C,EAAA7C,GACA,SAAAyC,EAAA/nE,EAAA7I,GAEA,IADA,IAAAixE,EAAAloE,EAAAmoE,EAAA,GAAA/zD,EAAAtU,EAAA2N,IAAAs6D,EAAAlqE,MAAA+P,EAAAo6D,EAAA5wE,KAAAyG,KAAAuW,EAAAnd,GAAAmxE,EAAAH,EAAA7wE,KAAAyG,KAAA+P,EAAAwG,EAAAnd,GAAAyB,GAAAzB,GAAA,EAAAmd,EAAA9Y,QAAAjE,EAAA+wE,EAAA9sE,OAAA,EAAAqI,EAAAmkE,EAAA,IAAApvE,IACAzB,EAAAI,IACA6wE,EAAAC,EAAAlxE,GAAA,IACAkgC,GAAAixC,EAAAnxE,EAAA,IAAAixE,EAAAloE,EAAAooE,EAAAnxE,IACAixE,EAAAjoE,EAAA,EAEA,GAAA5I,EAAA,EAEA,IADAJ,GAAA,IACAA,EAAAyB,IACAsH,EAAAoU,EAAAnd,KACA2W,EAAA,IAAA5N,GAAA4N,EAAA,MACAs6D,EAAAC,EAAA9uE,EAAAiwB,OAAA8+C,EAAApoE,EAAA,EAAA3I,GAAA,IACA4I,GAAA0D,EACAukE,EAAAptE,KAAAgF,EAAA7I,KAIA,OAAAkxE,EAwBA,OAtBAN,EAAA3vE,MAAA,SAAA8H,GACA,OAAA1C,UAAAhC,QACAysE,EAAA/nE,EACA6nE,GAFAE,GAIAF,EAAAj6D,MAAA,SAAA5N,GACA,OAAA1C,UAAAhC,QACA0sE,EAAAx+B,GAAAxpC,GACA6nE,GAFAG,GAIAH,EAAAM,KAAA,SAAAnoE,GACA,OAAA1C,UAAAhC,QACA2sE,EAAA,iBAAAjoE,EAAA,SAAA4N,GACA,OAAAy3D,GAAAz3D,EAAA5N,IACOwpC,GAAAxpC,GACP6nE,GAJAI,GAMAJ,EAAAC,UAAA,SAAA9nE,GACA,OAAA1C,UAAAhC,QACAwsE,IAAA9nE,EACA6nE,GAFAC,GAIAD,GAaAxuE,EAAA2a,OAAAq0D,KAAA,WACA,IAAA9tD,EAAAkoD,EAAAppE,EAAA2a,OAAAyuD,YAAAl7D,KAAAg+D,IAAA1zD,EAAA,EAAArR,EAAA,MACA,SAAA6nE,EAAA9wE,EAAAN,GACA,IAAA88B,EAAA0uC,EAAArrE,KAAAyG,KAAAtG,EAAAN,GAAAV,EAAAw9B,EAAA,GAAAntB,EAAApG,EAAA,GAAAsG,EAAAtG,EAAA,GAAAzI,EAAA,MAAAwiB,EAAAre,KAAAgtB,KAAA,mBAAA3O,IAAA,WACA,OAAAA,GAOA,GALAhkB,EAAAyJ,EAAAzJ,EAAA0J,EAAA,EACA2iE,GAAArsE,EAAA,SAAAgB,GACAA,EAAAQ,KAAAR,EAAAW,SAEA0qE,GAAArsE,EAAAuvE,IACAj0D,EAAA,CACA,IAAAg0D,EAAAh0D,GAAA0I,EAAA,EAAAre,KAAAiF,IAAA,EAAA5K,EAAAwB,EAAA6O,EAAA,EAAArQ,EAAAwB,EAAA+O,IAAA,EACA87D,GAAArsE,EAAA,SAAAgB,GACAA,EAAAQ,GAAA8tE,IAEAjD,GAAArsE,EAAAuvE,IACAlD,GAAArsE,EAAA,SAAAgB,GACAA,EAAAQ,GAAA8tE,IAIA,OA4GA,SAAAyC,EAAAllD,EAAApjB,EAAAC,EAAA0D,GACA,IAAAsc,EAAAmD,EAAAnD,SACAmD,EAAApjB,KAAA2D,EAAAyf,EAAApjB,EACAojB,EAAAnjB,KAAA0D,EAAAyf,EAAAnjB,EACAmjB,EAAArrB,GAAA4L,EACA,GAAAsc,EAEA,IADA,IAAAhpB,GAAA,EAAAyB,EAAAunB,EAAA3kB,SACArE,EAAAyB,GAAA4vE,EAAAroD,EAAAhpB,GAAA+I,EAAAC,EAAA0D,GApHA2kE,CAAA/xE,EAAAqQ,EAAA,EAAAE,EAAA,EAAAyT,EAAA,IAAAre,KAAAiF,IAAA,EAAA5K,EAAAwB,EAAA6O,EAAA,EAAArQ,EAAAwB,EAAA+O,IACAitB,EAiBA,OAfAs0C,EAAA7nE,KAAA,SAAAnD,GACA,OAAAC,UAAAhC,QACAkF,EAAAnD,EACAgrE,GAFA7nE,GAIA6nE,EAAA9tD,OAAA,SAAAld,GACA,OAAAC,UAAAhC,QACAif,EAAA,MAAAld,GAAA,mBAAAA,OACAgrE,GAFA9tD,GAIA8tD,EAAAx2D,QAAA,SAAAxU,GACA,OAAAC,UAAAhC,QACAuW,GAAAxU,EACAgrE,GAFAx2D,GAIA2wD,GAAA6F,EAAA5F,IAmHAppE,EAAA2a,OAAA6hD,KAAA,WACA,IAAA4M,EAAAppE,EAAA2a,OAAAyuD,YAAAl7D,KAAA,MAAArP,MAAA,MAAAqwE,EAAA/B,GAAAhmE,EAAA,MAAAgoE,EAAA,KACA,SAAA3S,EAAAt+D,EAAAN,GACA,IAAA88B,EAAA0uC,EAAArrE,KAAAyG,KAAAtG,EAAAN,GAAAwxE,EAAA10C,EAAA,GAAA20C,EAkBA,SAAAD,GACA,IAGOE,EAHPD,EAAA,CACA1yB,EAAA,KACA/1B,SAAA,CAAAwoD,IACOG,EAAA,CAAAF,GACP,YAAAC,EAAAC,EAAApnB,QACA,QAAA1hC,EAAAG,EAAA0oD,EAAA1oD,SAAAhpB,EAAA,EAAAyB,EAAAunB,EAAA3kB,OAA8ErE,EAAAyB,IAAOzB,EACrF2xE,EAAA9tE,MAAAmlB,EAAAhpB,GAAA6oB,EAAA,CACAziB,EAAA4iB,EAAAhpB,GACA0K,OAAAgnE,EACA1oD,UAAAH,EAAAG,EAAAhpB,GAAAgpB,WAAAH,EAAA1Y,SAAA,GACA4uC,EAAA,KACA1vC,EAAA,KACA4J,EAAA,EACA7Y,EAAA,EACAC,EAAA,EACA0B,EAAA,EACAb,EAAA,KACAlB,MACWqP,EAAAwZ,GAGX,OAAA4oD,EAAAzoD,SAAA,GAxCA4oD,CAAAJ,GAGA,GAFA7F,GAAA8F,EAAAI,GAAAJ,EAAA/mE,OAAAtK,GAAAqxE,EAAAx4D,EACAyyD,GAAA+F,EAAAK,GACAP,EAAA7F,GAAA8F,EAAAO,OAAoE,CACpE,IAAAv+D,EAAAg+D,EAAAl+D,EAAAk+D,EAAAj+D,EAAAi+D,EACA9F,GAAA8F,EAAA,SAAArlD,GACAA,EAAApjB,EAAAyK,EAAAzK,IAAAyK,EAAA2Y,GACAA,EAAApjB,EAAAuK,EAAAvK,IAAAuK,EAAA6Y,GACAA,EAAAqJ,MAAAjiB,EAAAiiB,QAAAjiB,EAAA4Y,KAEA,IAAA6lD,EAAAV,EAAA99D,EAAAF,GAAA,EAAAE,EAAAzK,EAAAs8D,EAAA97D,EAAA,IAAA+J,EAAAvK,EAAAuoE,EAAAh+D,EAAAE,GAAA,EAAAw+D,GAAAvM,EAAAl8D,EAAA,IAAAgK,EAAAiiB,OAAA,GACAk2C,GAAA8F,EAAA,SAAArlD,GACAA,EAAApjB,GAAAojB,EAAApjB,EAAAipE,GAAA3M,EACAl5C,EAAAnjB,EAAAmjB,EAAAqJ,MAAAiwC,IAGA,OAAA3oC,EA0BA,SAAA+0C,EAAAjgD,GACA,IAAA5I,EAAA4I,EAAA5I,SAAAipD,EAAArgD,EAAAlnB,OAAAse,SAAArZ,EAAAiiB,EAAA5xB,EAAAiyE,EAAArgD,EAAA5xB,EAAA,QACA,GAAAgpB,EAAA3kB,OAAA,EAwFA,SAAAutB,GACA,IAAAjiB,EAAA66C,EAAA,EAAAqlB,EAAA,EAAA7mD,EAAA4I,EAAA5I,SAAAhpB,EAAAgpB,EAAA3kB,OACA,OAAArE,GAAA,IACA2P,EAAAqZ,EAAAhpB,IACAiZ,GAAAuxC,EACA76C,EAAAvP,GAAAoqD,EACAA,GAAA76C,EAAA5N,GAAA8tE,GAAAlgE,EAAAtP,GA7FA6xE,CAAAtgD,GACA,IAAAugD,GAAAnpD,EAAA,GAAA/P,EAAA+P,IAAA3kB,OAAA,GAAA4U,GAAA,EACAtJ,GACAiiB,EAAA3Y,EAAAtJ,EAAAsJ,EAAAq4D,EAAA1/C,EAAAxrB,EAAAuJ,EAAAvJ,GACAwrB,EAAAxxB,EAAAwxB,EAAA3Y,EAAAk5D,GAEAvgD,EAAA3Y,EAAAk5D,OAEOxiE,IACPiiB,EAAA3Y,EAAAtJ,EAAAsJ,EAAAq4D,EAAA1/C,EAAAxrB,EAAAuJ,EAAAvJ,IAEAwrB,EAAAlnB,OAAAq0C,EAMA,SAAAntB,EAAAjiB,EAAAqgE,GACA,GAAArgE,EAAA,CAEA,IADA,IAAA66C,EAAA4nB,EAAAxgD,EAAAygD,EAAAzgD,EAAAm+C,EAAApgE,EAAA2iE,EAAAF,EAAA1nE,OAAAse,SAAA,GAAAupD,EAAAH,EAAAhyE,EAAAoyE,EAAAH,EAAAjyE,EAAAqyE,EAAA1C,EAAA3vE,EAAAsyE,EAAAJ,EAAAlyE,EACA2vE,EAAAN,GAAAM,GAAAqC,EAAA5C,GAAA4C,GAAArC,GAAAqC,GACAE,EAAA9C,GAAA8C,IACAD,EAAA5C,GAAA4C,IACAhjE,EAAAuiB,GACA44B,EAAAulB,EAAA92D,EAAAw5D,EAAAL,EAAAn5D,EAAAs5D,EAAAjB,EAAAvB,EAAA3pE,EAAAgsE,EAAAhsE,IACA,IACAspE,GAAAI,GAAAC,EAAAn+C,EAAAo+C,GAAAp+C,EAAA44B,GACA+nB,GAAA/nB,EACAgoB,GAAAhoB,GAEAioB,GAAA1C,EAAA3vE,EACAmyE,GAAAH,EAAAhyE,EACAsyE,GAAAJ,EAAAlyE,EACAoyE,GAAAH,EAAAjyE,EAEA2vE,IAAAN,GAAA4C,KACAA,EAAAnxE,EAAA6uE,EACAsC,EAAAjyE,GAAAqyE,EAAAD,GAEAJ,IAAA5C,GAAA8C,KACAA,EAAApxE,EAAAkxE,EACAE,EAAAlyE,GAAAmyE,EAAAG,EACA1C,EAAAp+C,GAGA,OAAAo+C,EAlCA2C,CAAA/gD,EAAAjiB,EAAAiiB,EAAAlnB,OAAAq0C,GAAAkzB,EAAA,IAEA,SAAAH,EAAAlgD,GACAA,EAAAxrB,EAAA2C,EAAA6oB,EAAA3Y,EAAA2Y,EAAAlnB,OAAAtK,EACAwxB,EAAAxxB,GAAAwxB,EAAAlnB,OAAAtK,EAgCA,SAAA2xE,EAAA5lD,GACAA,EAAApjB,GAAAQ,EAAA,GACA4iB,EAAAnjB,EAAAmjB,EAAAqJ,MAAAjsB,EAAA,GAiBA,OAfAq1D,EAAA0S,WAAA,SAAAvoE,GACA,OAAA1C,UAAAhC,QACAitE,EAAAvoE,EACA61D,GAFA0S,GAIA1S,EAAAr1D,KAAA,SAAAR,GACA,OAAA1C,UAAAhC,QACAktE,EAAA,OAAAhoE,EAAAR,GAAAgpE,EAAA,KACAnT,GAFA2S,EAAA,KAAAhoE,GAIAq1D,EAAA2S,SAAA,SAAAxoE,GACA,OAAA1C,UAAAhC,QACAktE,EAAA,OAAAhoE,EAAAR,GAAA,KAAAgpE,EACAnT,GAFA2S,EAAAhoE,EAAA,MAIAgiE,GAAA3M,EAAA4M,IAiCAppE,EAAA2a,OAAA61D,QAAA,WACA,IAAApH,EAAAppE,EAAA2a,OAAAyuD,YAAAl7D,KAAA,MAAArP,MAAA,MAAAqwE,EAAA/B,GAAAhmE,EAAA,MAAAgoE,GAAA,EACA,SAAAqB,EAAAtyE,EAAAN,GACA,IAAA6yE,EAAA/1C,EAAA0uC,EAAArrE,KAAAyG,KAAAtG,EAAAN,GAAAV,EAAAw9B,EAAA,GAAA/zB,EAAA,EACA4iE,GAAArsE,EAAA,SAAA6sB,GACA,IAAAnD,EAAAmD,EAAAnD,SACAA,KAAA3kB,QACA8nB,EAAApjB,EAwCA,SAAAigB,GACA,OAAAA,EAAAilD,OAAA,SAAAllE,EAAA8f,GACA,OAAA9f,EAAA8f,EAAA9f,GACK,GAAAigB,EAAA3kB,OA3CLyuE,CAAA9pD,GACAmD,EAAAnjB,EAkCA,SAAAggB,GACA,SAAA5mB,EAAA8H,IAAA8e,EAAA,SAAAH,GACA,OAAAA,EAAA7f,IApCA+pE,CAAA/pD,KAEAmD,EAAApjB,EAAA8pE,EAAA9pE,GAAAuoE,EAAAnlD,EAAA0mD,GAAA,EACA1mD,EAAAnjB,EAAA,EACA6pE,EAAA1mD,KAGA,IAAA3Y,EAqCA,SAAAw/D,EAAA7mD,GACA,IAAAnD,EAAAmD,EAAAnD,SACA,OAAAA,KAAA3kB,OAAA2uE,EAAAhqD,EAAA,IAAAmD,EAvCA6mD,CAAA1zE,GAAAgU,EAyCA,SAAA2/D,EAAA9mD,GACA,IAAA1qB,EAAAunB,EAAAmD,EAAAnD,SACA,OAAAA,IAAAvnB,EAAAunB,EAAA3kB,QAAA4uE,EAAAjqD,EAAAvnB,EAAA,IAAA0qB,EA3CA8mD,CAAA3zE,GAAA2tB,EAAAzZ,EAAAzK,EAAAuoE,EAAA99D,EAAAF,GAAA,EAAA8vB,EAAA9vB,EAAAvK,EAAAuoE,EAAAh+D,EAAAE,GAAA,EAQA,OAPAm4D,GAAArsE,EAAAiyE,EAAA,SAAAplD,GACAA,EAAApjB,GAAAojB,EAAApjB,EAAAzJ,EAAAyJ,GAAAQ,EAAA,GACA4iB,EAAAnjB,GAAA1J,EAAA0J,EAAAmjB,EAAAnjB,GAAAO,EAAA,IACO,SAAA4iB,GACPA,EAAApjB,GAAAojB,EAAApjB,EAAAkkB,IAAAmW,EAAAnW,GAAA1jB,EAAA,GACA4iB,EAAAnjB,GAAA,GAAA1J,EAAA0J,EAAAmjB,EAAAnjB,EAAA1J,EAAA0J,EAAA,IAAAO,EAAA,KAEAuzB,EAiBA,OAfA81C,EAAAtB,WAAA,SAAAvoE,GACA,OAAA1C,UAAAhC,QACAitE,EAAAvoE,EACA6pE,GAFAtB,GAIAsB,EAAArpE,KAAA,SAAAR,GACA,OAAA1C,UAAAhC,QACAktE,EAAA,OAAAhoE,EAAAR,GACA6pE,GAFArB,EAAA,KAAAhoE,GAIAqpE,EAAArB,SAAA,SAAAxoE,GACA,OAAA1C,UAAAhC,QACAktE,EAAA,OAAAhoE,EAAAR,GACA6pE,GAFArB,EAAAhoE,EAAA,MAIAgiE,GAAAqH,EAAApH,IAoBAppE,EAAA2a,OAAAm2D,QAAA,WACA,IAAAC,EAAA3H,EAAAppE,EAAA2a,OAAAyuD,YAAA3lE,EAAAZ,KAAAY,MAAA0D,EAAA,MAAAqR,EAAA,KAAAd,EAAAm2D,GAAAmD,GAAA,EAAAjyE,EAAA,WAAAkyE,EAAA,MAAApuE,KAAAgtB,KAAA,IACA,SAAA3d,EAAA0U,EAAAtc,GAEA,IADA,IAAAmc,EAAAlD,EAAA3lB,GAAA,EAAAyB,EAAAunB,EAAA3kB,SACArE,EAAAyB,GACAkkB,GAAAkD,EAAAG,EAAAhpB,IAAAiB,OAAAyL,EAAA,IAAAA,GACAmc,EAAAlD,KAAA5J,MAAA4J,OAAA,IAAAA,EAGA,SAAA2tD,EAAAnnD,GACA,IAAAnD,EAAAmD,EAAAnD,SACA,GAAAA,KAAA3kB,OAAA,CACA,IAAAwkB,EAAA0qD,EAAA9xE,EAAAorB,EAAA/S,EAAAqS,GAAAgH,EAAA,GAAAqgD,EAAAxqD,EAAA7Y,QAAAq3C,EAAAtjC,IAAA2e,EAAA,UAAA1hC,EAAA0rB,EAAAqT,GAAA,SAAA/+B,EAAA0rB,EAAAsT,GAAA,eAAAh/B,EAAA,EAAAgrB,EAAAqJ,MAAA3I,EAAAsT,GAAAtT,EAAAqT,GAAAj7B,KAAAqF,IAAAuiB,EAAAqT,GAAArT,EAAAsT,IAGA,IAFA7rB,EAAAk/D,EAAA3mD,EAAAqT,GAAArT,EAAAsT,GAAAhU,EAAAlrB,OACAkyB,EAAAxN,KAAA,GACAlkB,EAAA+xE,EAAAnvE,QAAA,GACA8uB,EAAAtvB,KAAAglB,EAAA2qD,EAAA/xE,EAAA,IACA0xB,EAAAxN,MAAAkD,EAAAlD,KACA,aAAAxkB,IAAAoyE,EAAAE,EAAAtgD,EAAA0P,KAAA2kB,GACAgsB,EAAAjpB,MACA/C,EAAA+rB,IAEApgD,EAAAxN,MAAAwN,EAAAo3B,MAAA5kC,KACAsG,EAAAkH,EAAA0P,EAAAhW,GAAA,GACAgW,EAAA59B,KAAAqF,IAAAuiB,EAAAqT,GAAArT,EAAAsT,IACAhN,EAAA9uB,OAAA8uB,EAAAxN,KAAA,EACA6hC,EAAAtjC,KAGAiP,EAAA9uB,SACA4nB,EAAAkH,EAAA0P,EAAAhW,GAAA,GACAsG,EAAA9uB,OAAA8uB,EAAAxN,KAAA,GAEAqD,EAAAtL,QAAA41D,IAGA,SAAAI,EAAAvnD,GACA,IAAAnD,EAAAmD,EAAAnD,SACA,GAAAA,KAAA3kB,OAAA,CACA,IAAAwkB,EAAAgE,EAAA/S,EAAAqS,GAAAqnD,EAAAxqD,EAAA7Y,QAAAgjB,EAAA,GAGA,IAFA7e,EAAAk/D,EAAA3mD,EAAAqT,GAAArT,EAAAsT,GAAAhU,EAAAlrB,OACAkyB,EAAAxN,KAAA,EACAkD,EAAA2qD,EAAAjpB,OACAp3B,EAAAtvB,KAAAglB,GACAsK,EAAAxN,MAAAkD,EAAAlD,KACA,MAAAkD,EAAA5P,IACAgT,EAAAkH,EAAAtK,EAAA5P,EAAA4T,EAAAqT,GAAArT,EAAAsT,GAAAtT,GAAA2mD,EAAAnvE,QACA8uB,EAAA9uB,OAAA8uB,EAAAxN,KAAA,GAGAqD,EAAAtL,QAAAg2D,IAGA,SAAAD,EAAAtgD,EAAA0P,GAEA,IADA,IAAA/hC,EAAAiB,EAAAoxB,EAAAxN,KAAAguD,EAAA,EAAAC,EAAA1vD,IAAAlkB,GAAA,EAAAyB,EAAA0xB,EAAA9uB,SACArE,EAAAyB,IACAX,EAAAqyB,EAAAnzB,GAAA2lB,QACA7kB,EAAA8yE,MAAA9yE,GACAA,EAAA6yE,MAAA7yE,IAIA,OADA+hC,MADA9gC,MAEAkD,KAAAiF,IAAA24B,EAAA8wC,EAAAN,EAAAtxE,KAAA8gC,EAAA+wC,EAAAP,IAAAnvD,IAEA,SAAA+H,EAAAkH,EAAA0P,EAAAhW,EAAAmqB,GACA,IAAAv2C,EAAAT,GAAA,EAAAyB,EAAA0xB,EAAA9uB,OAAA0E,EAAA8jB,EAAA9jB,EAAAC,EAAA6jB,EAAA7jB,EAAA4oB,EAAAiR,EAAAh9B,EAAAstB,EAAAxN,KAAAkd,GAAA,EACA,GAAAA,GAAAhW,EAAAqT,GAAA,CAEA,KADA8W,GAAAplB,EAAA/E,EAAAsT,MAAAvO,EAAA/E,EAAAsT,MACAngC,EAAAyB,IACAhB,EAAA0yB,EAAAnzB,IACA+I,IACAtI,EAAAuI,IACAvI,EAAA0/B,GAAAvO,EACA7oB,GAAAtI,EAAAy/B,GAAAj7B,KAAAqF,IAAAuiB,EAAA9jB,EAAA8jB,EAAAqT,GAAAn3B,EAAA6oB,EAAA/rB,EAAApF,EAAAklB,KAAAiM,GAAA,GAEAnxB,EAAAwY,GAAA,EACAxY,EAAAy/B,IAAArT,EAAA9jB,EAAA8jB,EAAAqT,GAAAn3B,EACA8jB,EAAA7jB,GAAA4oB,EACA/E,EAAAsT,IAAAvO,MACO,CAEP,KADAolB,GAAAplB,EAAA/E,EAAAqT,MAAAtO,EAAA/E,EAAAqT,MACAlgC,EAAAyB,IACAhB,EAAA0yB,EAAAnzB,IACA+I,IACAtI,EAAAuI,IACAvI,EAAAy/B,GAAAtO,EACA5oB,GAAAvI,EAAA0/B,GAAAl7B,KAAAqF,IAAAuiB,EAAA7jB,EAAA6jB,EAAAsT,GAAAn3B,EAAA4oB,EAAA/rB,EAAApF,EAAAklB,KAAAiM,GAAA,GAEAnxB,EAAAwY,GAAA,EACAxY,EAAA0/B,IAAAtT,EAAA7jB,EAAA6jB,EAAAsT,GAAAn3B,EACA6jB,EAAA9jB,GAAA6oB,EACA/E,EAAAqT,IAAAtO,GAGA,SAAAshD,EAAA5yE,GACA,IAAAw8B,EAAAq2C,GAAA3H,EAAAlrE,GAAAhB,EAAAw9B,EAAA,GAOA,OANAx9B,EAAAyJ,EAAAzJ,EAAA0J,EAAA,EACA1J,EAAA2B,OAAA3B,EAAA4gC,GAAA32B,EAAA,GAAAjK,EAAA6gC,GAAA52B,EAAA,IAA2DjK,EAAA4gC,GAAA5gC,EAAA6gC,GAAA,EAC3DgzC,GAAA3H,EAAAS,QAAA3sE,GACAgV,EAAA,CAAAhV,KAAA4gC,GAAA5gC,EAAA6gC,GAAA7gC,EAAA2B,QACAkyE,EAAAO,EAAAJ,GAAAh0E,GACA8zE,IAAAD,EAAAr2C,GACAA,EA0CA,OAxCAo2C,EAAA3pE,KAAA,SAAAR,GACA,OAAA1C,UAAAhC,QACAkF,EAAAR,EACAmqE,GAFA3pE,GAIA2pE,EAAAt4D,QAAA,SAAA7R,GACA,IAAA1C,UAAAhC,OAAA,OAAAuW,EAKA,SAAAi5D,EAAA1nD,GACA,OAAA+jD,GAAA/jD,EAAApjB,GAEA,IAAAguB,EAGA,OAFAjd,EAAA,OAAAc,EAAA7R,GAAAknE,GAAA,aAAAl5C,SAAAhuB,GARA,SAAAojB,GACA,IAAArqB,EAAAiH,EAAA5I,KAAA+yE,EAAA/mD,IAAAqJ,OACA,aAAA1zB,EAAAmuE,GAAA9jD,GAAA+jD,GAAA/jD,EAAA,iBAAArqB,EAAA,CAAAA,aAMA,WAAAi1B,GAAAhuB,EAAA,CAAAA,SACA8qE,KACAX,GAEAA,EAAArtE,MAAA,SAAAkD,GACA,OAAA1C,UAAAhC,QACAwB,EAAAkD,EAAA9D,KAAAY,MAAAsmE,OACA+G,GAFArtE,GAAAsmE,QAIA+G,EAAAE,OAAA,SAAArqE,GACA,OAAA1C,UAAAhC,QACA+uE,EAAArqE,EACAoqE,EAAA,KACAD,GAHAE,GAKAF,EAAAG,MAAA,SAAAtqE,GACA,OAAA1C,UAAAhC,QACAgvE,EAAAtqE,EACAmqE,GAFAG,GAIAH,EAAA/xE,KAAA,SAAA4H,GACA,OAAA1C,UAAAhC,QACAlD,EAAA4H,EAAA,GACAmqE,GAFA/xE,GAIAoqE,GAAA2H,EAAA1H,IA2BAppE,EAAAuwB,OAAA,CACAs0B,OAAA,SAAA6sB,EAAAC,GACA,IAAAtyE,EAAA4E,UAAAhC,OAGA,OAFA5C,EAAA,IAAAsyE,EAAA,GACAtyE,EAAA,IAAAqyE,EAAA,GACA,WACA,IAAA/qE,EAAAC,EAAAlI,EACA,GAGAA,GAFAiI,EAAA,EAAA9D,KAAA0tB,SAAA,GAEA5pB,GADAC,EAAA,EAAA/D,KAAA0tB,SAAA,GACA3pB,SACSlI,KAAA,GACT,OAAAgzE,EAAAC,EAAAhrE,EAAA9D,KAAAgtB,MAAA,EAAAhtB,KAAAq9B,IAAAxhC,QAGAkzE,UAAA,WACA,IAAArhD,EAAAvwB,EAAAuwB,OAAAs0B,OAAAjgD,MAAA5E,EAAAiE,WACA,kBACA,OAAApB,KAAAs8B,IAAA5O,OAGAshD,MAAA,SAAA7zE,GACA,IAAAuyB,EAAAvwB,EAAAuwB,OAAAuhD,UAAA9zE,GACA,kBACA,OAAAuyB,IAAAvyB,IAGA8zE,UAAA,SAAA9zE,GACA,kBACA,QAAA2B,EAAA,EAAAiI,EAAA,EAA8BA,EAAA5J,EAAO4J,IAAAjI,GAAAkD,KAAA0tB,SACrC,OAAA5wB,KAIAK,EAAAkS,MAAA,GAkCA,IAAAq8D,GAAA,CACAhrE,MAAAivB,EACAhvB,KAAAgvB,GAEA,SAAAu/C,GAAA/uE,EAAAuR,EAAA45D,EAAAvtD,GACA,IAAA6f,EAAA,GAAA7iC,EAAA,GAAAgK,EAAA,EAAA0C,EAAAzH,KAAAqF,IAAAlF,EAAAf,OAAAsS,EAAAtS,QAAA,EAKA,IAJAe,EAAAsH,GAAAtH,EAAA,KACAA,IAAA+K,QAAA4nC,UACAphC,IAAAxG,QAAA4nC,aAEA/tC,GAAA0C,GACAm2B,EAAAh/B,KAAA0sE,EAAAnrE,EAAA4E,EAAA,GAAA5E,EAAA4E,KACAhK,EAAA6D,KAAAmf,EAAArM,EAAA3M,EAAA,GAAA2M,EAAA3M,KAEA,gBAAAjB,GACA,IAAAiB,EAAA5H,EAAAiwB,OAAAjtB,EAAA2D,EAAA,EAAA2D,GAAA,EACA,OAAA1M,EAAAgK,GAAA64B,EAAA74B,GAAAjB,KA0DA,SAAAqrE,GAAA9/D,EAAAqD,GACA,OAAAvV,EAAA0zB,OAAAxhB,EAAAqD,EAAA,4CAEA,SAAA08D,GAAAjvE,EAAAhF,GAGA,OAFAowE,GAAAprE,EAAAsrE,GAAA4D,GAAAlvE,EAAAhF,GAAA,KACAowE,GAAAprE,EAAAsrE,GAAA4D,GAAAlvE,EAAAhF,GAAA,KACAgF,EAEA,SAAAkvE,GAAAlvE,EAAAhF,GACA,MAAAA,MAAA,IACA,IAAA+X,EAAAg4D,GAAA/qE,GAAAupB,EAAAxW,EAAA,GAAAA,EAAA,GAAA2b,EAAA7uB,KAAAq/B,IAAA,GAAAr/B,KAAAU,MAAAV,KAAAq9B,IAAA3T,EAAAvuB,GAAA6E,KAAA8xC,OAAAw9B,EAAAn0E,EAAAuuB,EAAAmF,EAKA,OAJAygD,GAAA,IAAAzgD,GAAA,GAA+BygD,GAAA,IAAAzgD,GAAA,EAAgCygD,GAAA,MAAAzgD,GAAA,GAC/D3b,EAAA,GAAAlT,KAAAW,KAAAuS,EAAA,GAAA2b,KACA3b,EAAA,GAAAlT,KAAAU,MAAAwS,EAAA,GAAA2b,KAAA,GAAAA,EACA3b,EAAA,GAAA2b,EACA3b,EAEA,SAAAq8D,GAAApvE,EAAAhF,GACA,OAAAgC,EAAAuU,MAAA3P,MAAA5E,EAAAkyE,GAAAlvE,EAAAhF,IAEA,SAAAq0E,GAAArvE,EAAAhF,EAAA+G,GACA,IAAAwP,EAAA29D,GAAAlvE,EAAAhF,GACA,GAAA+G,EAAA,CACA,IAAAw1B,EAAAsb,GAAApP,KAAA1hC,GAEA,GADAw1B,EAAA6tB,QACA,MAAA7tB,EAAA,IACA,IAAA/B,EAAAx4B,EAAA42C,aAAA/zC,KAAAiF,IAAAhF,EAAAyR,EAAA,IAAAzR,EAAAyR,EAAA,MAIA,OAHAgmB,EAAA,KAAAA,EAAA,OAAA+3C,GAAA95C,EAAAtmB,MAAAqC,EAAA,MACAgmB,EAAA,OACAx1B,EAAA/E,EAAA+E,OAAAw1B,EAAAqY,KAAA,KACA,SAAA10C,GACA,OAAA6G,EAAAyzB,EAAAtmB,MAAAhU,IAAAs6B,EAAAsc,QAGAva,EAAA,KAAAA,EAAA,OAiBA,SAAA5F,EAAApgB,GACA,IAAA7U,EAAA4yE,GAAA/9D,EAAA,IACA,OAAAogB,KAAA49C,GAAA1vE,KAAAC,IAAApD,EAAA4yE,GAAAzvE,KAAAiF,IAAAhF,EAAAyR,EAAA,IAAAzR,EAAAyR,EAAA,gBAAAogB,GAAAj1B,EAAA,SAAAi1B,GAnBA69C,CAAAj4C,EAAA,GAAAhmB,IACAxP,EAAAw1B,EAAAqY,KAAA,SAEA7tC,EAAA,KAAAutE,GAAA/9D,EAAA,QAEA,OAAAvU,EAAA+E,UA9FA/E,EAAAkS,MAAAqD,OAAA,WACA,OAEA,SAAAk9D,EAAAzvE,EAAAuR,EAAAqM,EAAA8xD,GACA,IAAAxnB,EAAAiN,EACA,SAAA9hD,IACA,IAAAd,EAAA1S,KAAAqF,IAAAlF,EAAAf,OAAAsS,EAAAtS,QAAA,EAAA8vE,GAAA7D,GAAAC,EAAAuE,EAAApN,GAAAD,GAGA,OAFAna,EAAA31C,EAAAvS,EAAAuR,EAAA45D,EAAAvtD,GACAu3C,EAAA5iD,EAAAhB,EAAAvR,EAAAmrE,EAAAtP,IACA3sD,EAEA,SAAAA,EAAAvL,GACA,OAAAukD,EAAAvkD,GAEAuL,EAAAiwB,OAAA,SAAAv7B,GACA,OAAAuxD,EAAAvxD,IAEAsL,EAAAlP,OAAA,SAAA2D,GACA,OAAA1C,UAAAhC,QACAe,EAAA2D,EAAAyN,IAAA21D,QACA1zD,KAFArT,GAIAkP,EAAAqC,MAAA,SAAA5N,GACA,OAAA1C,UAAAhC,QACAsS,EAAA5N,EACA0P,KAFA9B,GAIArC,EAAAwD,WAAA,SAAA/O,GACA,OAAAuL,EAAAqC,MAAA5N,GAAAia,YAAAmiD,KAEA7wD,EAAAwgE,MAAA,SAAA/rE,GACA,OAAA1C,UAAAhC,QACAywE,EAAA/rE,EACA0P,KAFAq8D,GAIAxgE,EAAA0O,YAAA,SAAAja,GACA,OAAA1C,UAAAhC,QACA2e,EAAAja,EACA0P,KAFAuK,GAIA1O,EAAA2C,MAAA,SAAA7W,GACA,OAAAo0E,GAAApvE,EAAAhF,IAEAkU,EAAAygE,WAAA,SAAA30E,EAAA+G,GACA,OAAAstE,GAAArvE,EAAAhF,EAAA+G,IAEAmN,EAAAm8D,KAAA,SAAArwE,GAEA,OADAi0E,GAAAjvE,EAAAhF,GACAqY,KAEAnE,EAAAkyB,KAAA,WACA,OAAAquC,EAAAzvE,EAAAuR,EAAAqM,EAAA8xD,IAEA,OAAAr8D,IApDAo8D,CAAA,YAAA5T,IAAA,IA+FA,IAAA0T,GAAA,CACA5yE,EAAA,EACAmN,EAAA,EACApN,EAAA,EACAhB,EAAA,EACA4C,EAAA,GAEA,SAAAgxE,GAAAzzE,GACA,OAAAgE,KAAAU,MAAAV,KAAAq9B,IAAArhC,GAAAgE,KAAA8xC,KAAA,KAMA30C,EAAAkS,MAAAguB,IAAA,WACA,OAEA,SAAA0yC,EAAAr9D,EAAAs9D,EAAAC,EAAA9vE,GACA,SAAAk9B,EAAAv5B,GACA,OAAAmsE,EAAAjwE,KAAAq9B,IAAAv5B,EAAA,IAAAA,IAAA9D,KAAAq9B,IAAAv5B,EAAA,KAAAA,IAAA9D,KAAAq9B,IAAA2yC,GAEA,SAAA3wC,EAAAv7B,GACA,OAAAmsE,EAAAjwE,KAAAq/B,IAAA2wC,EAAAlsE,IAAA9D,KAAAq/B,IAAA2wC,GAAAlsE,GAEA,SAAAuL,EAAAvL,GACA,OAAA4O,EAAA2qB,EAAAv5B,IAEAuL,EAAAiwB,OAAA,SAAAx7B,GACA,OAAAu7B,EAAA3sB,EAAA4sB,OAAAx7B,KAEAuL,EAAAlP,OAAA,SAAA2D,GACA,OAAA1C,UAAAhC,QACA6wE,EAAAnsE,EAAA,MACA4O,EAAAvS,UAAA2D,EAAAyN,IAAA21D,SAAA31D,IAAA8rB,IACAhuB,GAHAlP,GAKAkP,EAAA2gE,KAAA,SAAA7uE,GACA,OAAAC,UAAAhC,QACA4wE,GAAA7uE,EACAuR,EAAAvS,SAAAoR,IAAA8rB,IACAhuB,GAHA2gE,GAKA3gE,EAAAm8D,KAAA,WACA,IAAA0E,EAAA3E,GAAAprE,EAAAoR,IAAA8rB,GAAA4yC,EAAAjwE,KAAAmwE,IAGA,OAFAz9D,EAAAvS,OAAA+vE,GACA/vE,EAAA+vE,EAAA3+D,IAAA8tB,GACAhwB,GAEAA,EAAA2C,MAAA,WACA,IAAAkB,EAAAg4D,GAAA/qE,GAAA6R,EAAA,GAAA4rB,EAAA1qB,EAAA,GAAAyZ,EAAAzZ,EAAA,GAAAnY,EAAAiF,KAAAU,MAAA28B,EAAAO,IAAA74B,EAAA/E,KAAAW,KAAA08B,EAAA1Q,IAAAnwB,EAAAwzE,EAAA,IAAAA,EACA,GAAAt+B,SAAA3sC,EAAAhK,GAAA,CACA,GAAAk1E,EAAA,CACA,KAAgBl1E,EAAAgK,EAAMhK,IAAA,QAAA0M,EAAA,EAAqBA,EAAAjL,EAAOiL,IAAAuK,EAAApT,KAAAygC,EAAAtkC,GAAA0M,GAClDuK,EAAApT,KAAAygC,EAAAtkC,SAGA,IADAiX,EAAApT,KAAAygC,EAAAtkC,IACgBA,IAAAgK,GAAQ,QAAA0C,EAAAjL,EAAA,EAAsBiL,EAAA,EAAOA,IAAAuK,EAAApT,KAAAygC,EAAAtkC,GAAA0M,GAErD,IAAA1M,EAAA,EAAmBiX,EAAAjX,GAAA6iC,EAAc7iC,KACjC,IAAAgK,EAAAiN,EAAA5S,OAA8B4S,EAAAjN,EAAA,GAAA4nB,EAAkB5nB,KAChDiN,IAAA9G,MAAAnQ,EAAAgK,GAEA,OAAAiN,GAEA3C,EAAAygE,WAAA,SAAAtzE,EAAA0F,GACA,IAAAd,UAAAhC,OAAA,OAAAgxE,GACAhvE,UAAAhC,OAAA,EAAA8C,EAAAkuE,GAA4D,mBAAAluE,MAAA/E,EAAA+E,WAC5D,IAAAuF,EAAAzH,KAAAiF,IAAA,EAAA+qE,EAAAxzE,EAAA6S,EAAA2C,QAAA5S,QACA,gBAAA/D,GACA,IAAAN,EAAAM,EAAAgkC,EAAAr/B,KAAAY,MAAAy8B,EAAAhiC,KAEA,OADAN,EAAAi1E,IAAA,KAAAj1E,GAAAi1E,GACAj1E,GAAA0M,EAAAvF,EAAA7G,GAAA,KAGAgU,EAAAkyB,KAAA,WACA,OAAAwuC,EAAAr9D,EAAA6uB,OAAAyuC,EAAAC,EAAA9vE,IAEA,OAAAgvE,GAAA9/D,EAAAqD,GA9DAq9D,CAAA5yE,EAAAkS,MAAAqD,SAAAvS,OAAA,sBAgEA,IAAAiwE,GAAAjzE,EAAA+E,OAAA,OAAAiuE,GAAA,CACAzvE,MAAA,SAAAoD,GACA,OAAA9D,KAAAW,MAAAmD,IAEAnD,KAAA,SAAAmD,GACA,OAAA9D,KAAAU,OAAAoD,KAwCA,SAAAusE,GAAA5xE,GACA,gBAAAqF,GACA,OAAAA,EAAA,GAAA9D,KAAAq/B,KAAAv7B,EAAArF,GAAAuB,KAAAq/B,IAAAv7B,EAAArF,IAvCAtB,EAAAkS,MAAAgwB,IAAA,WACA,OAEA,SAAAixC,EAAA59D,EAAA8gC,EAAArzC,GACA,IAAAowE,EAAAF,GAAA78B,GAAAg9B,EAAAH,GAAA,EAAA78B,GACA,SAAAnkC,EAAAvL,GACA,OAAA4O,EAAA69D,EAAAzsE,IAEAuL,EAAAiwB,OAAA,SAAAx7B,GACA,OAAA0sE,EAAA99D,EAAA4sB,OAAAx7B,KAEAuL,EAAAlP,OAAA,SAAA2D,GACA,OAAA1C,UAAAhC,QACAsT,EAAAvS,UAAA2D,EAAAyN,IAAA21D,SAAA31D,IAAAg/D,IACAlhE,GAFAlP,GAIAkP,EAAA2C,MAAA,SAAA7W,GACA,OAAAo0E,GAAApvE,EAAAhF,IAEAkU,EAAAygE,WAAA,SAAA30E,EAAA+G,GACA,OAAAstE,GAAArvE,EAAAhF,EAAA+G,IAEAmN,EAAAm8D,KAAA,SAAArwE,GACA,OAAAkU,EAAAlP,OAAAivE,GAAAjvE,EAAAhF,KAEAkU,EAAAmkC,SAAA,SAAA1vC,GACA,OAAA1C,UAAAhC,QACAmxE,EAAAF,GAAA78B,EAAA1vC,GACA0sE,EAAAH,GAAA,EAAA78B,GACA9gC,EAAAvS,SAAAoR,IAAAg/D,IACAlhE,GAJAmkC,GAMAnkC,EAAAkyB,KAAA,WACA,OAAA+uC,EAAA59D,EAAA6uB,OAAAiS,EAAArzC,IAEA,OAAAgvE,GAAA9/D,EAAAqD,GAlCA49D,CAAAnzE,EAAAkS,MAAAqD,SAAA,UAyCAvV,EAAAkS,MAAA2d,KAAA,WACA,OAAA7vB,EAAAkS,MAAAgwB,MAAAmU,SAAA,KAEAr2C,EAAAkS,MAAAnP,QAAA,WACA,OAKA,SAAAuwE,EAAAtwE,EAAA2rE,GACA,IAAA1nE,EAAAsN,EAAAg/D,EACA,SAAArhE,EAAAvL,GACA,OAAA4N,IAAAtN,EAAAxI,IAAAkI,KAAA,UAAAgoE,EAAA7vE,EAAAmI,EAAAmU,IAAAzU,EAAA3D,EAAAvB,KAAAkF,IAAAioB,MAAA,GAAAra,EAAAtS,QAEA,SAAAuxE,EAAAtxD,EAAAwP,GACA,OAAA1xB,EAAAuU,MAAAvR,EAAAf,QAAAmS,IAAA,SAAAxW,GACA,OAAAskB,EAAAwP,EAAA9zB,IAGAsU,EAAAlP,OAAA,SAAA2D,GACA,IAAA1C,UAAAhC,OAAA,OAAAe,EACAA,EAAA,GACAiE,EAAA,IAAAuqB,EAEA,IADA,IAAAiiD,EAAA71E,GAAA,EAAAyB,EAAAsH,EAAA1E,SACArE,EAAAyB,GAAA4H,EAAA7F,IAAAqyE,EAAA9sE,EAAA/I,KAAAqJ,EAAAmU,IAAAq4D,EAAAzwE,EAAAvB,KAAAgyE,IACA,OAAAvhE,EAAAy8D,EAAA7vE,GAAA8F,MAAAsN,EAAAy8D,EAAA1hE,IAEAiF,EAAAqC,MAAA,SAAA5N,GACA,OAAA1C,UAAAhC,QACAsS,EAAA5N,EACA4sE,EAAA,EACA5E,EAAA,CACA7vE,EAAA,QACAmO,EAAAhJ,WAEAiO,GAPAqC,GASArC,EAAAwhE,YAAA,SAAA/sE,EAAA6R,GACAvU,UAAAhC,OAAA,IAAAuW,EAAA,GACA,IAAA0J,EAAAvb,EAAA,GAAA8qB,EAAA9qB,EAAA,GAAA+qB,EAAA1uB,EAAAf,OAAA,GAAAigB,KAAAuP,GAAA,EACA,IAAAA,EAAAvP,IAAAlf,EAAAf,OAAA,EAAAuW,GAOA,OANAjE,EAAAi/D,EAAAtxD,EAAAwP,EAAAlZ,EAAA,EAAAkZ,GACA6hD,EAAA,EACA5E,EAAA,CACA7vE,EAAA,cACAmO,EAAAhJ,WAEAiO,GAEAA,EAAAyhE,iBAAA,SAAAhtE,EAAA6R,GACAvU,UAAAhC,OAAA,IAAAuW,EAAA,GACA,IAAA0J,EAAAvb,EAAA,GAAA8qB,EAAA9qB,EAAA,GAAA+qB,EAAA1uB,EAAAf,OAAA,GAAAigB,EAAAuP,EAAA5uB,KAAAY,OAAAye,EAAAuP,GAAA,GACA,IAAAA,EAAAvP,IAAAlf,EAAAf,OAAA,EAAAuW,GAAA,EAOA,OANAjE,EAAAi/D,EAAAtxD,EAAArf,KAAAY,MAAAiuB,EAAAlZ,EAAA,GAAAiZ,EAAAvP,GAAAlf,EAAAf,OAAA,EAAAuW,GAAAkZ,GAAA,GAAAA,GACA6hD,EAAA,EACA5E,EAAA,CACA7vE,EAAA,mBACAmO,EAAAhJ,WAEAiO,GAEAA,EAAA0hE,WAAA,SAAAjtE,EAAA6R,EAAAq7D,GACA5vE,UAAAhC,OAAA,IAAAuW,EAAA,GACAvU,UAAAhC,OAAA,IAAA4xE,EAAAr7D,GACA,IAAAm9B,EAAAhvC,EAAA,GAAAA,EAAA,GAAAub,EAAAvb,EAAAgvC,EAAA,GAAAlkB,EAAA9qB,EAAA,EAAAgvC,GAAAjkB,GAAAD,EAAAvP,IAAAlf,EAAAf,OAAAuW,EAAA,EAAAq7D,GAQA,OAPAt/D,EAAAi/D,EAAAtxD,EAAAwP,EAAAmiD,EAAAniD,GACAikB,GAAAphC,EAAAohC,UACA49B,EAAA7hD,GAAA,EAAAlZ,GACAm2D,EAAA,CACA7vE,EAAA,aACAmO,EAAAhJ,WAEAiO,GAEAA,EAAA4hE,gBAAA,SAAAntE,EAAA6R,EAAAq7D,GACA5vE,UAAAhC,OAAA,IAAAuW,EAAA,GACAvU,UAAAhC,OAAA,IAAA4xE,EAAAr7D,GACA,IAAAm9B,EAAAhvC,EAAA,GAAAA,EAAA,GAAAub,EAAAvb,EAAAgvC,EAAA,GAAAlkB,EAAA9qB,EAAA,EAAAgvC,GAAAjkB,EAAA7uB,KAAAU,OAAAkuB,EAAAvP,IAAAlf,EAAAf,OAAAuW,EAAA,EAAAq7D,IAQA,OAPAt/D,EAAAi/D,EAAAtxD,EAAArf,KAAAY,OAAAguB,EAAAvP,GAAAlf,EAAAf,OAAAuW,GAAAkZ,GAAA,GAAAA,GACAikB,GAAAphC,EAAAohC,UACA49B,EAAA1wE,KAAAY,MAAAiuB,GAAA,EAAAlZ,IACAm2D,EAAA,CACA7vE,EAAA,kBACAmO,EAAAhJ,WAEAiO,GAEAA,EAAAqhE,UAAA,WACA,OAAAA,GAEArhE,EAAA+7D,YAAA,WACA,OAAAF,GAAAY,EAAA1hE,EAAA,KAEAiF,EAAAkyB,KAAA,WACA,OAAAkvC,EAAAtwE,EAAA2rE,IAEA,OAAAz8D,EAAAlP,UA5FAswE,CAAA,IACAx0E,EAAA,QACAmO,EAAA,QA4FAjN,EAAAkS,MAAAC,WAAA,WACA,OAAAnS,EAAAkS,MAAAnP,UAAAwR,MAAAw/D,KAEA/zE,EAAAkS,MAAA8hE,WAAA,WACA,OAAAh0E,EAAAkS,MAAAnP,UAAAwR,MAAA0/D,KAEAj0E,EAAAkS,MAAAgiE,YAAA,WACA,OAAAl0E,EAAAkS,MAAAnP,UAAAwR,MAAA4/D,KAEAn0E,EAAAkS,MAAAoH,YAAA,WACA,OAAAtZ,EAAAkS,MAAAnP,UAAAwR,MAAA6/D,KAEA,IAAAL,GAAA,sFAAA3/D,IAAAkyB,IACA2tC,GAAA,gLAAA7/D,IAAAkyB,IACA6tC,GAAA,8KAAA//D,IAAAkyB,IACA8tC,GAAA,+KAAAhgE,IAAAkyB,IA0HA,SAAA+tC,KACA,SA1HAr0E,EAAAkS,MAAAod,SAAA,WACA,OAEA,SAAAglD,EAAAtxE,EAAAuR,GACA,IAAAw6D,EACA,SAAA14D,IACA,IAAA/L,EAAA,EAAAg5B,EAAA/uB,EAAAtS,OAEA,IADA8sE,EAAA,KACAzkE,EAAAg5B,GAAAyrC,EAAAzkE,EAAA,GAAAtK,EAAAsvB,SAAAtsB,EAAAsH,EAAAg5B,GACA,OAAApxB,EAEA,SAAAA,EAAAvL,GACA,IAAAgT,MAAAhT,MAAA,OAAA4N,EAAAvU,EAAAiwB,OAAA8+C,EAAApoE,IAEAuL,EAAAlP,OAAA,SAAA2D,GACA,OAAA1C,UAAAhC,QACAe,EAAA2D,EAAAyN,IAAAya,GAAA3pB,OAAA4pB,GAAA5gB,KAAAygB,GACAtY,KAFArT,GAIAkP,EAAAqC,MAAA,SAAA5N,GACA,OAAA1C,UAAAhC,QACAsS,EAAA5N,EACA0P,KAFA9B,GAIArC,EAAAqiE,UAAA,WACA,OAAAxF,GAEA78D,EAAAsiE,aAAA,SAAA5tE,GAEA,OADAA,EAAA2N,EAAAhT,QAAAqF,IACA,GAAAgoB,SAAA,CAAAhoB,EAAA,EAAAmoE,EAAAnoE,EAAA,GAAA5D,EAAA,GAAA4D,EAAAmoE,EAAA9sE,OAAA8sE,EAAAnoE,GAAA5D,IAAAf,OAAA,KAEAiQ,EAAAkyB,KAAA,WACA,OAAAkwC,EAAAtxE,EAAAuR,IAEA,OAAA8B,IAjCAi+D,CAAA,QAmCAt0E,EAAAkS,MAAAuiE,SAAA,WACA,OAEA,SAAAC,EAAA7pD,EAAAmW,EAAAzsB,GACA,IAAA0uD,EAAArlE,EACA,SAAAsU,EAAAvL,GACA,OAAA4N,EAAA1R,KAAAiF,IAAA,EAAAjF,KAAAqF,IAAAtK,EAAAiF,KAAAU,MAAA0/D,GAAAt8D,EAAAkkB,OAEA,SAAAxU,IAGA,OAFA4sD,EAAA1uD,EAAAtS,QAAA++B,EAAAnW,GACAjtB,EAAA2W,EAAAtS,OAAA,EACAiQ,EAEAA,EAAAlP,OAAA,SAAA2D,GACA,OAAA1C,UAAAhC,QACA4oB,GAAAlkB,EAAA,GACAq6B,GAAAr6B,IAAA1E,OAAA,GACAoU,KAHA,CAAAwU,EAAAmW,IAKA9uB,EAAAqC,MAAA,SAAA5N,GACA,OAAA1C,UAAAhC,QACAsS,EAAA5N,EACA0P,KAFA9B,GAIArC,EAAAsiE,aAAA,SAAA5tE,GAGA,OADAA,GADAA,EAAA2N,EAAAhT,QAAAqF,IACA,EAAAgoB,IAAAhoB,EAAAq8D,EAAAp4C,EACAjkB,EAAA,EAAAq8D,IAEA/wD,EAAAkyB,KAAA,WACA,OAAAswC,EAAA7pD,EAAAmW,EAAAzsB,IAEA,OAAA8B,IA/BAq+D,CAAA,YAiCA10E,EAAAkS,MAAAyiE,UAAA,WACA,OAEA,SAAAC,EAAA5xE,EAAAuR,GACA,SAAArC,EAAAvL,GACA,GAAAA,KAAA,OAAA4N,EAAAvU,EAAAiwB,OAAAjtB,EAAA2D,IAEAuL,EAAAlP,OAAA,SAAAgB,GACA,OAAAC,UAAAhC,QACAe,EAAAgB,EACAkO,GAFAlP,GAIAkP,EAAAqC,MAAA,SAAAvQ,GACA,OAAAC,UAAAhC,QACAsS,EAAAvQ,EACAkO,GAFAqC,GAIArC,EAAAsiE,aAAA,SAAA5tE,GAEA,OADAA,EAAA2N,EAAAhT,QAAAqF,GACA,CAAA5D,EAAA4D,EAAA,GAAA5D,EAAA4D,KAEAsL,EAAAkyB,KAAA,WACA,OAAAwwC,EAAA5xE,EAAAuR,IAEA,OAAArC,EAvBA0iE,CAAA,aAyBA50E,EAAAkS,MAAA2iE,SAAA,WACA,OAEA,SAAAC,EAAA9xE,GACA,SAAA6xE,EAAAluE,GACA,OAAAA,EAEAkuE,EAAA1yC,OAAA0yC,EACAA,EAAA7xE,OAAA6xE,EAAAtgE,MAAA,SAAA5N,GACA,OAAA1C,UAAAhC,QACAe,EAAA2D,EAAAyN,IAAAygE,GACAA,GAFA7xE,GAIA6xE,EAAAhgE,MAAA,SAAA7W,GACA,OAAAo0E,GAAApvE,EAAAhF,IAEA62E,EAAAlC,WAAA,SAAA30E,EAAA+G,GACA,OAAAstE,GAAArvE,EAAAhF,EAAA+G,IAEA8vE,EAAAzwC,KAAA,WACA,OAAA0wC,EAAA9xE,IAEA,OAAA6xE,EArBAC,CAAA,QAuBA90E,EAAAwO,IAAA,GAIAxO,EAAAwO,IAAAmQ,IAAA,WACA,IAAAa,EAAAu1D,GAAAt1D,EAAAu1D,GAAAC,EAAAZ,GAAAa,EAAAC,GAAA30D,EAAA40D,GAAA70D,EAAA80D,GAAApL,EAAAqL,GACA,SAAA32D,IACA,IAAA2hB,EAAAz9B,KAAAiF,IAAA,GAAA0X,EAAA5a,MAAAJ,KAAAP,YAAAs8B,EAAA19B,KAAAiF,IAAA,GAAA2X,EAAA7a,MAAAJ,KAAAP,YAAAsqD,EAAA/tC,EAAA5b,MAAAJ,KAAAP,WAAAw6B,GAAA0rB,EAAA5pC,EAAA3b,MAAAJ,KAAAP,WAAAw6B,GAAAyrC,EAAArnE,KAAAC,IAAAqnD,EAAAoE,GAAAgnB,EAAAhnB,EAAApE,EAAA,IAEA,GADA5pB,EAAAD,IAAAk1C,EAAAj1C,IAAAD,IAAAk1C,GACAtL,GAAA1rC,GAAA,OAAAi3C,EAAAl1C,EAAAg1C,IAAAj1C,EAAAm1C,EAAAn1C,EAAA,EAAAi1C,GAAA,QACA,IAAAC,EAAAtlB,EAAAwlB,EAAAC,EAAA9qD,EAAA3O,EAAA8kB,EAAAC,EAAA6tB,EAAAC,EAAA4I,EAAAG,EAAAr4B,EAAA,EAAA7O,EAAA,EAAA/P,EAAA,GAOA,IANA80D,IAAA1L,EAAArlE,MAAAJ,KAAAP,YAAA,QACAyxE,EAAAR,IAAAC,GAAAtyE,KAAAgtB,KAAAyQ,IAAAC,MAAA20C,EAAAtwE,MAAAJ,KAAAP,WACAsxE,IAAA3kD,IAAA,GACA2P,IAAA3P,EAAAoO,GAAA02C,EAAAn1C,EAAA19B,KAAAw8B,IAAAs2C,KACAr1C,IAAAb,EAAAT,GAAA02C,EAAAp1C,EAAAz9B,KAAAw8B,IAAAs2C,MAEAp1C,EAAA,CACA1V,EAAA0V,EAAA19B,KAAA6iC,IAAA6oB,EAAA39B,GACA1U,EAAAqkB,EAAA19B,KAAAw8B,IAAAkvB,EAAA39B,GACAoQ,EAAAT,EAAA19B,KAAA6iC,IAAAykB,EAAAv5B,GACAqQ,EAAAV,EAAA19B,KAAAw8B,IAAA8qB,EAAAv5B,GACA,IAAA4S,EAAA3gC,KAAAC,IAAAqnD,EAAAoE,EAAA,EAAA39B,IAAAyN,GAAA,IACA,GAAAzN,GAAAglD,GAAA/qD,EAAA3O,EAAA8kB,EAAAC,KAAAs0C,EAAA/xC,EAAA,CACA,IAAAqyC,GAAAtnB,EAAApE,GAAA,EACAt/B,EAAA0V,EAAA19B,KAAA6iC,IAAAmwC,GACA35D,EAAAqkB,EAAA19B,KAAAw8B,IAAAw2C,GACA70C,EAAAC,EAAA,WAGApW,EAAA3O,EAAA,EAEA,GAAAokB,EAAA,CACAwuB,EAAAxuB,EAAAz9B,KAAA6iC,IAAAykB,EAAA1qB,GACAsvB,EAAAzuB,EAAAz9B,KAAAw8B,IAAA8qB,EAAA1qB,GACAk4B,EAAAr3B,EAAAz9B,KAAA6iC,IAAA6oB,EAAA9uB,GACAq4B,EAAAx3B,EAAAz9B,KAAAw8B,IAAAkvB,EAAA9uB,GACA,IAAA8D,EAAA1gC,KAAAC,IAAAyrD,EAAApE,EAAA,EAAA1qB,IAAApB,GAAA,IACA,GAAAoB,GAAAm2C,GAAA9mB,EAAAC,EAAA4I,EAAAG,KAAA,EAAAyd,EAAAhyC,EAAA,CACA,IAAAuyC,GAAAvnB,EAAApE,GAAA,EACA2E,EAAAxuB,EAAAz9B,KAAA6iC,IAAAowC,GACA/mB,EAAAzuB,EAAAz9B,KAAAw8B,IAAAy2C,GACAne,EAAAG,EAAA,WAGAhJ,EAAAC,EAAA,EAEA,GAAAmb,EAAA/rC,KAAAq3C,EAAA3yE,KAAAqF,IAAArF,KAAAC,IAAAy9B,EAAAD,GAAA,GAAA20C,EAAArwE,MAAAJ,KAAAP,aAAA,MACAisD,EAAA5vB,EAAAC,EAAAg1C,EAAA,IACA,IAAAQ,EAAAP,EAAAQ,EAAAR,EACA,GAAAtL,EAAA7rC,GAAA,CACA,IAAA43C,EAAA,MAAAte,EAAA,CAAA7I,EAAAC,GAAA,MAAA/tB,EAAA,CAAAnW,EAAA3O,GAAAw7C,GAAA,CAAA7sC,EAAA3O,GAAA,CAAAy7C,EAAAG,GAAA,CAAA92B,EAAAC,GAAA,CAAA6tB,EAAAC,IAAA7F,EAAAr+B,EAAAorD,EAAA,GAAA9sB,EAAAjtC,EAAA+5D,EAAA,GAAAxb,EAAAz5B,EAAAi1C,EAAA,GAAAhoE,EAAAgzB,EAAAg1C,EAAA,GAAAC,EAAA,EAAArzE,KAAAw8B,IAAAx8B,KAAAk8B,MAAAmqB,EAAAuR,EAAAtR,EAAAl7C,IAAApL,KAAAgtB,KAAAq5B,IAAAC,KAAAtmD,KAAAgtB,KAAA4qC,IAAAxsD,OAAA,GAAAkoE,EAAAtzE,KAAAgtB,KAAAomD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAD,EAAAnzE,KAAAqF,IAAAstE,GAAAl1C,EAAA61C,IAAAD,EAAA,IACAH,EAAAlzE,KAAAqF,IAAAstE,GAAAj1C,EAAA41C,IAAAD,EAAA,IAEA,SAAAl1C,EAAA,CACA,IAAAo1C,EAAAC,GAAA,MAAA1e,EAAA,CAAA7I,EAAAC,GAAA,CAAA4I,EAAAG,GAAA,CAAAjtC,EAAA3O,GAAAqkB,EAAAw1C,EAAAR,GAAAe,EAAAD,GAAA,CAAAr1C,EAAAC,GAAA,CAAA6tB,EAAAC,GAAAxuB,EAAAw1C,EAAAR,GACAC,IAAAO,EACAl1D,EAAApf,KAAA,IAAA20E,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAA7lB,EAAA,IAAAkmB,EAAA,OAAA71C,EAAA,IAAAA,EAAA,QAAAg1C,EAAAK,GAAAQ,EAAA,MAAAA,EAAA,MAAAE,EAAA,MAAAA,EAAA,WAAAf,EAAA,IAAAe,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAA7lB,EAAA,IAAAomB,EAAA,IAEAz1D,EAAApf,KAAA,IAAA20E,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAA7lB,EAAA,IAAAomB,EAAA,SAGAz1D,EAAApf,KAAA,IAAAopB,EAAA,IAAA3O,GAEA,SAAAy7C,EAAA,CACA,IAAA4e,EAAAF,GAAA,CAAAxrD,EAAA3O,GAAA,CAAAy7C,EAAAG,GAAAx3B,GAAA01C,EAAAT,GAAAiB,EAAAH,GAAA,CAAAvnB,EAAAC,GAAA,MAAA/tB,EAAA,CAAAnW,EAAA3O,GAAA,CAAA8kB,EAAAC,GAAAX,GAAA01C,EAAAT,GACAC,IAAAQ,EACAn1D,EAAApf,KAAA,IAAA+0E,EAAA,OAAAR,EAAA,IAAAA,EAAA,QAAA9lB,EAAA,IAAAsmB,EAAA,OAAAl2C,EAAA,IAAAA,EAAA,MAAAi1C,EAAAK,GAAAY,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAAhB,EAAA,IAAAgB,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAA9lB,EAAA,IAAAqmB,EAAA,IAEA11D,EAAApf,KAAA,IAAA+0E,EAAA,OAAAR,EAAA,IAAAA,EAAA,QAAA9lB,EAAA,IAAAqmB,EAAA,SAGA11D,EAAApf,KAAA,IAAAqtD,EAAA,IAAAC,QAGAluC,EAAApf,KAAA,IAAAopB,EAAA,IAAA3O,GACA,MAAA8kB,GAAAngB,EAAApf,KAAA,IAAA8+B,EAAA,IAAAA,EAAA,MAAAiD,EAAA,IAAA+xC,EAAA,IAAAv0C,EAAA,IAAAC,GACApgB,EAAApf,KAAA,IAAAqtD,EAAA,IAAAC,GACA,MAAA4I,GAAA92C,EAAApf,KAAA,IAAA6+B,EAAA,IAAAA,EAAA,MAAAiD,EAAA,MAAAgyC,EAAA,IAAA5d,EAAA,IAAAG,GAGA,OADAj3C,EAAApf,KAAA,KACAof,EAAA+xB,KAAA,IAEA,SAAA6iC,EAAAl1C,EAAAg1C,GACA,YAAAh1C,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAg1C,EAAA,OAAAh1C,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAg1C,EAAA,MAAAh1C,EAyCA,OAvCA5hB,EAAAa,YAAA,SAAAgQ,GACA,OAAAvrB,UAAAhC,QACAud,EAAA2wB,GAAA3gB,GACA7Q,GAFAa,GAIAb,EAAAc,YAAA,SAAA+P,GACA,OAAAvrB,UAAAhC,QACAwd,EAAA0wB,GAAA3gB,GACA7Q,GAFAc,GAIAd,EAAAs2D,aAAA,SAAAzlD,GACA,OAAAvrB,UAAAhC,QACAgzE,EAAA9kC,GAAA3gB,GACA7Q,GAFAs2D,GAIAt2D,EAAAu2D,UAAA,SAAA1lD,GACA,OAAAvrB,UAAAhC,QACAizE,EAAA1lD,GAAA2lD,MAAAhlC,GAAA3gB,GACA7Q,GAFAu2D,GAIAv2D,EAAA6B,WAAA,SAAAgP,GACA,OAAAvrB,UAAAhC,QACAue,EAAA2vB,GAAA3gB,GACA7Q,GAFA6B,GAIA7B,EAAA4B,SAAA,SAAAiP,GACA,OAAAvrB,UAAAhC,QACAse,EAAA4vB,GAAA3gB,GACA7Q,GAFA4B,GAIA5B,EAAAsrD,SAAA,SAAAz6C,GACA,OAAAvrB,UAAAhC,QACAgoE,EAAA95B,GAAA3gB,GACA7Q,GAFAsrD,GAIAtrD,EAAAe,SAAA,WACA,IAAAhhB,IAAA8gB,EAAA5a,MAAAJ,KAAAP,aAAAwb,EAAA7a,MAAAJ,KAAAP,YAAA,EAAAgJ,IAAAuT,EAAA5b,MAAAJ,KAAAP,aAAAsc,EAAA3b,MAAAJ,KAAAP,YAAA,EAAAw6B,GACA,OAAA57B,KAAA6iC,IAAAz4B,GAAAvO,EAAAmE,KAAAw8B,IAAApyB,GAAAvO,IAEAigB,GAEA,IAAAw2D,GAAA,OACA,SAAAJ,GAAA72E,GACA,OAAAA,EAAAshB,YAEA,SAAAw1D,GAAA92E,GACA,OAAAA,EAAAuhB,YAEA,SAAA21D,GAAAl3E,GACA,OAAAA,EAAAsiB,WAEA,SAAA60D,GAAAn3E,GACA,OAAAA,EAAAqiB,SAEA,SAAA+0D,GAAAp3E,GACA,OAAAA,KAAA+rE,SAEA,SAAA2L,GAAA/qD,EAAA3O,EAAA8kB,EAAAC,GACA,OAAApW,EAAAmW,GAAA9kB,KAAA+kB,GAAApW,EAAA,MAEA,SAAAwrD,GAAA52C,EAAA7O,EAAA2P,EAAAi1C,EAAAD,GACA,IAAAkB,EAAAh3C,EAAA,GAAA7O,EAAA,GAAA8lD,EAAAj3C,EAAA,GAAA7O,EAAA,GAAA3B,GAAAsmD,EAAAC,MAAA3yE,KAAAgtB,KAAA4mD,IAAAC,KAAAC,EAAA1nD,EAAAynD,EAAAE,GAAA3nD,EAAAwnD,EAAAz1C,EAAAvB,EAAA,GAAAk3C,EAAA11C,EAAAxB,EAAA,GAAAm3C,EAAA9nB,EAAAl+B,EAAA,GAAA+lD,EAAA5nB,EAAAn+B,EAAA,GAAAgmD,EAAAjf,GAAA32B,EAAA8tB,GAAA,EAAAgJ,GAAA72B,EAAA8tB,GAAA,EAAAjxB,EAAAgxB,EAAA9tB,EAAAjD,EAAAgxB,EAAA9tB,EAAAhB,EAAAnC,IAAAC,IAAAr/B,EAAA6hC,EAAAi1C,EAAAqB,EAAA71C,EAAA+tB,EAAAD,EAAA7tB,EAAA/iC,GAAA6/B,EAAA,QAAAl7B,KAAAgtB,KAAAhtB,KAAAiF,IAAA,EAAApJ,IAAAuhC,EAAA42C,MAAAC,GAAAD,EAAA94C,EAAAD,EAAA5/B,GAAA+hC,EAAAm0B,IAAAyiB,EAAA/4C,EAAAC,EAAA7/B,GAAA+hC,EAAA82C,GAAAF,EAAA94C,EAAAD,EAAA5/B,GAAA+hC,EAAAq0B,IAAAuiB,EAAA/4C,EAAAC,EAAA7/B,GAAA+hC,EAAA+2C,EAAAF,EAAAnf,EAAAsf,EAAA7iB,EAAA0D,EAAAof,EAAAH,EAAApf,EAAAwf,EAAA7iB,EAAAwD,EAEA,OADAkf,IAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAA3iB,EAAAE,GACA,EAAAwiB,EAAAH,EAAAviB,EAAAwiB,GAAA,CAAAE,EAAAv2C,EAAA7hC,EAAA01D,EAAA7zB,EAAA7hC,IAEA,SAAA04E,GAAAvuD,GACA,IAAAliB,EAAA4vD,GAAA3vD,EAAA4vD,GAAAnzC,EAAAyiC,GAAAllC,EAAAy2D,GAAAC,EAAA12D,EAAAzhB,IAAAikB,EAAA,GACA,SAAAD,EAAA1c,GACA,IAAAvI,EAAA8nD,EAAA,GAAAt+C,EAAA,GAAA9J,GAAA,EAAAyB,EAAAoH,EAAAxE,OAAAg1D,EAAA9mB,GAAAxpC,GAAAuwD,EAAA/mB,GAAAvpC,GACA,SAAAu/C,IACAH,EAAAvkD,KAAA,IAAAmf,EAAAiI,EAAAnhB,GAAA0b,IAEA,OAAAxlB,EAAAyB,GACAgkB,EAAAtlB,KAAAyG,KAAAtG,EAAAuI,EAAA7I,MACA8J,EAAAjG,KAAA,EAAAw1D,EAAAl5D,KAAAyG,KAAAtG,EAAAN,IAAAs5D,EAAAn5D,KAAAyG,KAAAtG,EAAAN,KACS8J,EAAAzF,SACTkkD,IACAz+C,EAAA,IAIA,OADAA,EAAAzF,QAAAkkD,IACAH,EAAA/jD,OAAA+jD,EAAApT,KAAA,SA2BA,OAzBAzvB,EAAAxc,EAAA,SAAA3C,GACA,OAAAC,UAAAhC,QACA0E,EAAA3C,EACAmf,GAFAxc,GAIAwc,EAAAvc,EAAA,SAAA5C,GACA,OAAAC,UAAAhC,QACA2E,EAAA5C,EACAmf,GAFAvc,GAIAuc,EAAAE,QAAA,SAAArf,GACA,OAAAC,UAAAhC,QACAohB,EAAArf,EACAmf,GAFAE,GAIAF,EAAAvC,YAAA,SAAA5c,GACA,OAAAC,UAAAhC,QACAq1E,EAAA,mBAAAtzE,EAAA4c,EAAA5c,GAAoE4c,EAAA22D,GAAA94E,IAAAuF,IAAAqzE,IAAAl4E,IACpEgkB,GAFAm0D,GAIAn0D,EAAAC,QAAA,SAAApf,GACA,OAAAC,UAAAhC,QACAmhB,EAAApf,EACAmf,GAFAC,GAIAD,EAEAnjB,EAAAwO,IAAA2U,KAAA,WACA,OAAAi0D,GAAA5kD,IAEA,IAAA+kD,GAAAv3E,EAAAoU,IAAA,CACAmB,OAAA8hE,GACAG,gBAAAC,GACA/lD,KAsBA,SAAAhqB,GACA,IAAA9J,EAAA,EAAAyB,EAAAqI,EAAAzF,OAAAvC,EAAAgI,EAAA,GAAAmZ,EAAA,CAAAnhB,EAAA,OAAAA,EAAA,IACA,OAAA9B,EAAAyB,GAAAwhB,EAAApf,KAAA,KAAA/B,EAAA,IAAAA,EAAAgI,EAAA9J,IAAA,UAAA8B,EAAA,IACAL,EAAA,GAAAwhB,EAAApf,KAAA,IAAA/B,EAAA,IACA,OAAAmhB,EAAA+xB,KAAA,KAzBA8kC,cAAAC,GACAC,aAAAC,GACAC,MAAAC,GACAC,aAiGA,SAAAtwE,GACA,GAAAA,EAAAzF,OAAA,SAAAo1E,GAAA3vE,GACA,IAAAuwE,EAAAp3D,EAAA,GAAAjjB,GAAA,EAAAyB,EAAAqI,EAAAzF,OAAAqkE,EAAA,IAAAC,EAAA,IACA,OAAA3oE,EAAA,GACAq6E,EAAAvwE,EAAA9J,GACA0oE,EAAA7kE,KAAAw2E,EAAA,IACA1R,EAAA9kE,KAAAw2E,EAAA,IAEAp3D,EAAApf,KAAAy2E,GAAAC,GAAA7R,GAAA,IAAA4R,GAAAC,GAAA5R,MACA3oE,EACA,OAAAA,EAAAyB,GACA44E,EAAAvwE,EAAA9J,GACA0oE,EAAAle,QACAke,EAAA7kE,KAAAw2E,EAAA,IACA1R,EAAAne,QACAme,EAAA9kE,KAAAw2E,EAAA,IACAG,GAAAv3D,EAAAylD,EAAAC,GAEA,OAAA1lD,EAAA+xB,KAAA,KAlHAylC,eAoHA,SAAA3wE,GACA,IAAAmZ,EAAAo3D,EAAAr6E,GAAA,EAAAyB,EAAAqI,EAAAzF,OAAAjE,EAAAqB,EAAA,EAAAinE,EAAA,GAAAC,EAAA,GACA,OAAA3oE,EAAA,GACAq6E,EAAAvwE,EAAA9J,EAAAyB,GACAinE,EAAA7kE,KAAAw2E,EAAA,IACA1R,EAAA9kE,KAAAw2E,EAAA,IAEAp3D,EAAA,CAAAq3D,GAAAC,GAAA7R,GAAA,IAAA4R,GAAAC,GAAA5R,MACA3oE,EACA,OAAAA,EAAAI,GACAi6E,EAAAvwE,EAAA9J,EAAAyB,GACAinE,EAAAle,QACAke,EAAA7kE,KAAAw2E,EAAA,IACA1R,EAAAne,QACAme,EAAA9kE,KAAAw2E,EAAA,IACAG,GAAAv3D,EAAAylD,EAAAC,GAEA,OAAA1lD,EAAA+xB,KAAA,KApIA8zB,OAsIA,SAAAh/D,EAAA0b,GACA,IAAA/jB,EAAAqI,EAAAzF,OAAA,EACA,GAAA5C,EAEA,IADA,IAAAK,EAAAZ,EAAA+rB,EAAAnjB,EAAA,MAAAwU,EAAAxU,EAAA,MAAAo2B,EAAAp2B,EAAArI,GAAA,GAAAwrB,EAAAkT,EAAAr2B,EAAArI,GAAA,GAAA6c,EAAAte,GAAA,IACAA,GAAAyB,GACAK,EAAAgI,EAAA9J,GACAkB,EAAAlB,EAAAyB,EACAK,EAAA,GAAA0jB,EAAA1jB,EAAA,MAAA0jB,IAAAyH,EAAA/rB,EAAAg/B,GACAp+B,EAAA,GAAA0jB,EAAA1jB,EAAA,MAAA0jB,IAAAlH,EAAApd,EAAAi/B,GAGA,OAAAg6C,GAAArwE,IAhJA4wE,SAsCA,SAAA5wE,EAAA0b,GACA,OAAA1b,EAAAzF,OAAA,EAAAo1E,GAAA3vE,KAAA,GAAA6wE,GAAA7wE,EAAA8wE,GAAA9wE,EAAA0b,KAtCAq1D,gBA8BA,SAAA/wE,EAAA0b,GACA,OAAA1b,EAAAzF,OAAA,EAAAo1E,GAAA3vE,KAAA,GAAA6wE,GAAA7wE,EAAAqG,MAAA,MAAAyqE,GAAA9wE,EAAA0b,KA9BAs1D,kBAgCA,SAAAhxE,EAAA0b,GACA,OAAA1b,EAAAzF,OAAA,EAAAw1E,GAAA/vE,KAAA,GAAA6wE,IAAA7wE,EAAAjG,KAAAiG,EAAA,IACAA,GAAA8wE,GAAA,CAAA9wE,IAAAzF,OAAA,IAAAsZ,OAAA7T,EAAA,CAAAA,EAAA,KAAA0b,KAjCAu1D,SAyLA,SAAAjxE,GACA,OAAAA,EAAAzF,OAAA,EAAAo1E,GAAA3vE,KAAA,GAAA6wE,GAAA7wE,EAzBA,SAAAA,GACA,IAAAxJ,EAAA+O,EAAAwT,EAAA9gB,EAAAi5E,EAAA,GAAA56E,EATA,SAAA0J,GACA,IAAA9J,EAAA,EAAAgK,EAAAF,EAAAzF,OAAA,EAAAjE,EAAA,GAAAyhC,EAAA/3B,EAAA,GAAAkpB,EAAAlpB,EAAA,GAAAxJ,EAAAF,EAAA,GAAA66E,GAAAp5C,EAAA7O,GACA,OAAAhzB,EAAAgK,GACA5J,EAAAJ,IAAAM,KAAA26E,GAAAp5C,EAAA7O,IAAAlpB,EAAA9J,EAAA,QAGA,OADAI,EAAAJ,GAAAM,EACAF,EAGA86E,CAAApxE,GAAA9J,GAAA,EAAAgK,EAAAF,EAAAzF,OAAA,EACA,OAAArE,EAAAgK,GACA1J,EAAA26E,GAAAnxE,EAAA9J,GAAA8J,EAAA9J,EAAA,IACAkF,EAAA5E,GAAAigC,GACAngC,EAAAJ,GAAAI,EAAAJ,EAAA,MAEAqP,EAAAjP,EAAAJ,GAAAM,EACAuiB,EAAAziB,EAAAJ,EAAA,GAAAM,GACAyB,EAAAsN,IAAAwT,KACA,IACA9gB,EAAA,EAAAzB,EAAA2E,KAAAgtB,KAAAlwB,GACA3B,EAAAJ,GAAA+B,EAAAsN,EACAjP,EAAAJ,EAAA,GAAA+B,EAAA8gB,IAIA7iB,GAAA,EACA,OAAAA,GAAAgK,GACAjI,GAAA+H,EAAA7E,KAAAqF,IAAAN,EAAAhK,EAAA,OAAA8J,EAAA7E,KAAAiF,IAAA,EAAAlK,EAAA,cAAAI,EAAAJ,GAAAI,EAAAJ,KACAg7E,EAAAn3E,KAAA,CAAA9B,GAAA,EAAA3B,EAAAJ,GAAA+B,GAAA,IAEA,OAAAi5E,EAGAG,CAAArxE,OApLA,SAAA2vE,GAAA3vE,GACA,OAAAA,EAAAzF,OAAA,EAAAyF,EAAAkrC,KAAA,KAAAlrC,EAAA,IAEA,SAAA+vE,GAAA/vE,GACA,OAAAA,EAAAkrC,KAAA,SAQA,SAAA+kC,GAAAjwE,GAEA,IADA,IAAA9J,EAAA,EAAAyB,EAAAqI,EAAAzF,OAAAvC,EAAAgI,EAAA,GAAAmZ,EAAA,CAAAnhB,EAAA,OAAAA,EAAA,MACA9B,EAAAyB,GAAAwhB,EAAApf,KAAA,KAAA/B,EAAAgI,EAAA9J,IAAA,OAAA8B,EAAA,IACA,OAAAmhB,EAAA+xB,KAAA,IAEA,SAAAilC,GAAAnwE,GAEA,IADA,IAAA9J,EAAA,EAAAyB,EAAAqI,EAAAzF,OAAAvC,EAAAgI,EAAA,GAAAmZ,EAAA,CAAAnhB,EAAA,OAAAA,EAAA,MACA9B,EAAAyB,GAAAwhB,EAAApf,KAAA,KAAA/B,EAAAgI,EAAA9J,IAAA,OAAA8B,EAAA,IACA,OAAAmhB,EAAA+xB,KAAA,IAYA,SAAA2lC,GAAA7wE,EAAAkxE,GACA,GAAAA,EAAA32E,OAAA,GAAAyF,EAAAzF,QAAA22E,EAAA32E,QAAAyF,EAAAzF,QAAA22E,EAAA32E,OAAA,EACA,OAAAo1E,GAAA3vE,GAEA,IAAAi6D,EAAAj6D,EAAAzF,QAAA22E,EAAA32E,OAAA4e,EAAA,GAAA4e,EAAA/3B,EAAA,GAAAhI,EAAAgI,EAAA,GAAA8sC,EAAAokC,EAAA,GAAA95E,EAAA01C,EAAAyjC,EAAA,EAMA,GALAtW,IACA9gD,GAAA,KAAAnhB,EAAA,KAAA80C,EAAA,WAAA90C,EAAA,KAAA80C,EAAA,UAAA90C,EAAA,OAAAA,EAAA,GACA+/B,EAAA/3B,EAAA,GACAuwE,EAAA,GAEAW,EAAA32E,OAAA,GACAnD,EAAA85E,EAAA,GACAl5E,EAAAgI,EAAAuwE,GACAA,IACAp3D,GAAA,KAAA4e,EAAA,GAAA+U,EAAA,SAAA/U,EAAA,GAAA+U,EAAA,SAAA90C,EAAA,GAAAZ,EAAA,SAAAY,EAAA,GAAAZ,EAAA,QAAAY,EAAA,OAAAA,EAAA,GACA,QAAA9B,EAAA,EAAqBA,EAAAg7E,EAAA32E,OAAqBrE,IAAAq6E,IAC1Cv4E,EAAAgI,EAAAuwE,GACAn5E,EAAA85E,EAAAh7E,GACAijB,GAAA,KAAAnhB,EAAA,GAAAZ,EAAA,SAAAY,EAAA,GAAAZ,EAAA,QAAAY,EAAA,OAAAA,EAAA,GAGA,GAAAiiE,EAAA,CACA,IAAAqX,EAAAtxE,EAAAuwE,GACAp3D,GAAA,KAAAnhB,EAAA,KAAAZ,EAAA,WAAAY,EAAA,KAAAZ,EAAA,UAAAk6E,EAAA,OAAAA,EAAA,GAEA,OAAAn4D,EAEA,SAAA23D,GAAA9wE,EAAA0b,GAEA,IADA,IAAAqc,EAAAm5C,EAAA,GAAA3rE,GAAA,EAAAmW,GAAA,EAAAwN,EAAAlpB,EAAA,GAAAqU,EAAArU,EAAA,GAAA9J,EAAA,EAAAyB,EAAAqI,EAAAzF,SACArE,EAAAyB,GACAogC,EAAA7O,EACAA,EAAA7U,EACAA,EAAArU,EAAA9J,GACAg7E,EAAAn3E,KAAA,CAAAwL,GAAA8O,EAAA,GAAA0jB,EAAA,IAAAxyB,GAAA8O,EAAA,GAAA0jB,EAAA,MAEA,OAAAm5C,EAEA,SAAAb,GAAArwE,GACA,GAAAA,EAAAzF,OAAA,SAAAo1E,GAAA3vE,GACA,IAAA9J,EAAA,EAAAyB,EAAAqI,EAAAzF,OAAAg2E,EAAAvwE,EAAA,GAAAmjB,EAAAotD,EAAA,GAAA/7D,EAAA+7D,EAAA,GAAA3R,EAAA,CAAAz7C,OAAAotD,EAAAvwE,EAAA,QAAA6+D,EAAA,CAAArqD,MAAA+7D,EAAA,IAAAp3D,EAAA,CAAAgK,EAAA,IAAA3O,EAAA,IAAAg8D,GAAAC,GAAA7R,GAAA,IAAA4R,GAAAC,GAAA5R,IAEA,IADA7+D,EAAAjG,KAAAiG,EAAArI,EAAA,MACAzB,GAAAyB,GACA44E,EAAAvwE,EAAA9J,GACA0oE,EAAAle,QACAke,EAAA7kE,KAAAw2E,EAAA,IACA1R,EAAAne,QACAme,EAAA9kE,KAAAw2E,EAAA,IACAG,GAAAv3D,EAAAylD,EAAAC,GAIA,OAFA7+D,EAAAygD,MACAtnC,EAAApf,KAAA,IAAAw2E,GACAp3D,EAAA+xB,KAAA,IAsDA,SAAAslC,GAAAjrE,EAAAwT,GACA,OAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GAAAxT,EAAA,GAAAwT,EAAA,GA9IA82D,GAAAj8D,QAAA,SAAAnc,EAAAN,GACAA,EAAAM,MACAN,EAAAqiD,OAAA,WAAAjmC,KAAA9b,KA8IA,IAAA85E,GAAA,cAAAC,GAAA,cAAAf,GAAA,gBACA,SAAAC,GAAAv3D,EAAAla,EAAAC,GACAia,EAAApf,KAAA,IAAAy2E,GAAAe,GAAAtyE,GAAA,IAAAuxE,GAAAe,GAAAryE,GAAA,IAAAsxE,GAAAgB,GAAAvyE,GAAA,IAAAuxE,GAAAgB,GAAAtyE,GAAA,IAAAsxE,GAAAC,GAAAxxE,GAAA,IAAAuxE,GAAAC,GAAAvxE,IAEA,SAAAiyE,GAAAp5C,EAAA7O,GACA,OAAAA,EAAA,GAAA6O,EAAA,KAAA7O,EAAA,GAAA6O,EAAA,IA2CA,SAAA05C,GAAAzxE,GAEA,IADA,IAAA2hB,EAAA3qB,EAAAuO,EAAArP,GAAA,EAAAyB,EAAAqI,EAAAzF,SACArE,EAAAyB,GAEAX,GADA2qB,EAAA3hB,EAAA9J,IACA,GACAqP,EAAAoc,EAAA,GAAAoV,GACApV,EAAA,GAAA3qB,EAAAmE,KAAA6iC,IAAAz4B,GACAoc,EAAA,GAAA3qB,EAAAmE,KAAAw8B,IAAApyB,GAEA,OAAAvF,EAEA,SAAA0xE,GAAAvwD,GACA,IAAAgC,EAAA0rC,GAAAv1B,EAAAu1B,GAAAr6C,EAAA,EAAA+kB,EAAAu1B,GAAAnzC,EAAAyiC,GAAAllC,EAAAy2D,GAAAC,EAAA12D,EAAAzhB,IAAAk6E,EAAAz4D,EAAA26B,EAAA,IAAAn4B,EAAA,GACA,SAAAG,EAAA9c,GACA,IAAAvI,EAIOyI,EAAAC,EAJPo/C,EAAA,GAAAszB,EAAA,GAAAC,EAAA,GAAA37E,GAAA,EAAAyB,EAAAoH,EAAAxE,OAAAu3E,EAAArpC,GAAAtlB,GAAA4uD,EAAAtpC,GAAAj0B,GAAAw9D,EAAA7uD,IAAAmW,EAAA,WACA,OAAAr6B,GACOwpC,GAAAnP,GAAA24C,EAAAz9D,IAAA+kB,EAAA,WACP,OAAAr6B,GACOupC,GAAAlP,GACP,SAAAklB,IACAH,EAAAvkD,KAAA,IAAAmf,EAAAiI,EAAA0wD,GAAAn2D,GAAAm4B,EAAA89B,EAAAxwD,EAAAywD,EAAA3jC,WAAAvyB,GAAA,KAEA,OAAAxlB,EAAAyB,GACAgkB,EAAAtlB,KAAAyG,KAAAtG,EAAAuI,EAAA7I,OACA07E,EAAA73E,KAAA,CAAAkF,GAAA6yE,EAAAz7E,KAAAyG,KAAAtG,EAAAN,GAAAgJ,GAAA6yE,EAAA17E,KAAAyG,KAAAtG,EAAAN,KACA27E,EAAA93E,KAAA,EAAAi4E,EAAA37E,KAAAyG,KAAAtG,EAAAN,IAAA+7E,EAAA57E,KAAAyG,KAAAtG,EAAAN,MACS07E,EAAAr3E,SACTkkD,IACAmzB,EAAA,GACAC,EAAA,IAIA,OADAD,EAAAr3E,QAAAkkD,IACAH,EAAA/jD,OAAA+jD,EAAApT,KAAA,SAiDA,OA/CArvB,EAAA5c,EAAA,SAAA3C,GACA,OAAAC,UAAAhC,QACA4oB,EAAAmW,EAAAh9B,EACAuf,GAFAyd,GAIAzd,EAAAsH,GAAA,SAAA7mB,GACA,OAAAC,UAAAhC,QACA4oB,EAAA7mB,EACAuf,GAFAsH,GAIAtH,EAAAyd,GAAA,SAAAh9B,GACA,OAAAC,UAAAhC,QACA++B,EAAAh9B,EACAuf,GAFAyd,GAIAzd,EAAA3c,EAAA,SAAA5C,GACA,OAAAC,UAAAhC,QACAia,EAAA+kB,EAAAj9B,EACAuf,GAFA0d,GAIA1d,EAAArH,GAAA,SAAAlY,GACA,OAAAC,UAAAhC,QACAia,EAAAlY,EACAuf,GAFArH,GAIAqH,EAAA0d,GAAA,SAAAj9B,GACA,OAAAC,UAAAhC,QACAg/B,EAAAj9B,EACAuf,GAFA0d,GAIA1d,EAAAF,QAAA,SAAArf,GACA,OAAAC,UAAAhC,QACAohB,EAAArf,EACAuf,GAFAF,GAIAE,EAAA3C,YAAA,SAAA5c,GACA,OAAAC,UAAAhC,QACAq1E,EAAA,mBAAAtzE,EAAA4c,EAAA5c,GAAoE4c,EAAA22D,GAAA94E,IAAAuF,IAAAqzE,IAAAl4E,IACpEk6E,EAAAz4D,EAAA+0B,SAAA/0B,EACA26B,EAAA36B,EAAAsgC,OAAA,QACA39B,GAJA+zD,GAMA/zD,EAAAH,QAAA,SAAApf,GACA,OAAAC,UAAAhC,QACAmhB,EAAApf,EACAuf,GAFAH,GAIAG,EAqEA,SAAAq2D,GAAA17E,GACA,OAAAA,EAAAgjB,OAgCA,SAAA24D,GAAA37E,GACA,OAAAA,EAAAyI,EAAAzI,EAAA0I,GAgCA,SAAAkzE,KACA,UAEA,SAAAC,KACA,eAEA,SAAAC,GAAA7yE,GACA,IAAAzI,EAAAmE,KAAAgtB,KAAA1oB,EAAAk3B,IACA,YAAA3/B,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IAvOAsB,EAAAwO,IAAA2U,KAAA82D,OAAA,WACA,IAAA92D,EAAAi0D,GAAA+B,IAGA,OAFAh2D,EAAAjC,OAAAiC,EAAAxc,SAAAwc,EAAAxc,EACAwc,EAAA7C,MAAA6C,EAAAvc,SAAAuc,EAAAvc,EACAuc,GAsFAw0D,GAAAhiC,QAAAkiC,GACAA,GAAAliC,QAAAgiC,GACA33E,EAAAwO,IAAA+U,KAAA,WACA,OAAA61D,GAAA5mD,IAEAxyB,EAAAwO,IAAA+U,KAAA02D,OAAA,WACA,IAAA12D,EAAA61D,GAAAD,IAOA,OANA51D,EAAArC,OAAAqC,EAAA5c,SAAA4c,EAAA5c,EACA4c,EAAA/D,YAAA+D,EAAAsH,UAAAtH,EAAAsH,GACAtH,EAAA9D,YAAA8D,EAAAyd,UAAAzd,EAAAyd,GACAzd,EAAAjD,MAAAiD,EAAA3c,SAAA2c,EAAA3c,EACA2c,EAAA/C,WAAA+C,EAAArH,UAAAqH,EAAArH,GACAqH,EAAAhD,SAAAgD,EAAA0d,UAAA1d,EAAA0d,GACA1d,GAEAvjB,EAAAwO,IAAAm4D,MAAA,WACA,IAAAh0C,EAAA4/B,GAAA7/B,EAAA8/B,GAAAtxC,EAAA04D,GAAAp5D,EAAA40D,GAAA70D,EAAA80D,GACA,SAAA1O,EAAAzoE,EAAAN,GACA,IAaAqP,EAAAwT,EAbA9gB,EAAAo2B,EAAAvxB,KAAAmuB,EAAAz0B,EAAAN,GAAAkB,EAAAi3B,EAAAvxB,KAAAkuB,EAAAx0B,EAAAN,GACA,UAAA+B,EAAA8/B,GAAA9gB,EAAAhf,EAAAjB,EAAAiB,EAAAixB,GAAAjxB,EAAAwqD,GAAAxqD,EAAA4uD,KAYA9tC,EAZA3hB,GAYAmO,EAZAtN,GAaA4uD,IAAA9tC,EAAA8tC,IAAAthD,EAAAk9C,IAAA1pC,EAAA0pC,GAbA+vB,EAAAv6E,EAAAjB,EAAAiB,EAAAixB,GAAAjxB,EAAAjB,EAAAiB,EAAA8/B,IAAAy6C,EAAAv6E,EAAAjB,EAAAiB,EAAAixB,GAAA9xB,EAAAJ,EAAAI,EAAA2gC,IAAA9gB,EAAA7f,EAAAJ,EAAAI,EAAA8xB,GAAA9xB,EAAAqrD,GAAArrD,EAAAyvD,IAAA2rB,EAAAp7E,EAAAJ,EAAAI,EAAA8xB,GAAAjxB,EAAAjB,EAAAiB,EAAA8/B,KAAA,IAEA,SAAA1J,EAAAokD,EAAA1qE,EAAAvR,EAAAN,GACA,IAAAm4B,EAAAtmB,EAAA1R,KAAAo8E,EAAAj8E,EAAAN,GAAAc,EAAAwiB,EAAAnjB,KAAAo8E,EAAApkD,EAAAn4B,GAAA2wD,EAAA/tC,EAAAziB,KAAAo8E,EAAApkD,EAAAn4B,GAAA6gC,GAAA0rB,EAAA5pC,EAAAxiB,KAAAo8E,EAAApkD,EAAAn4B,GAAA6gC,GACA,OACA//B,IACA6vD,KACApE,KACA1qB,GAAA,CAAA/gC,EAAAmE,KAAA6iC,IAAA6oB,GAAA7vD,EAAAmE,KAAAw8B,IAAAkvB,IACA39B,GAAA,CAAAlyB,EAAAmE,KAAA6iC,IAAAykB,GAAAzrD,EAAAmE,KAAAw8B,IAAA8qB,KAMA,SAAAxrC,EAAAjgB,EAAAgB,EAAAuN,GACA,UAAAvO,EAAA,IAAAA,EAAA,SAAAuO,EAAAoxB,IAAA,MAAA3+B,EAEA,SAAAw6E,EAAA55C,EAAAb,EAAAc,EAAA3P,GACA,eAAAA,EA2BA,OAzBA+1C,EAAAzlD,OAAA,SAAAsO,GACA,OAAAvrB,UAAAhC,QACAif,EAAAivB,GAAA3gB,GACAm3C,GAFAzlD,GAIAylD,EAAAh0C,OAAA,SAAAnD,GACA,OAAAvrB,UAAAhC,QACA0wB,EAAAwd,GAAA3gB,GACAm3C,GAFAh0C,GAIAg0C,EAAAj0C,OAAA,SAAAlD,GACA,OAAAvrB,UAAAhC,QACAywB,EAAAyd,GAAA3gB,GACAm3C,GAFAj0C,GAIAi0C,EAAAnmD,WAAA,SAAAgP,GACA,OAAAvrB,UAAAhC,QACAue,EAAA2vB,GAAA3gB,GACAm3C,GAFAnmD,GAIAmmD,EAAApmD,SAAA,SAAAiP,GACA,OAAAvrB,UAAAhC,QACAse,EAAA4vB,GAAA3gB,GACAm3C,GAFApmD,GAIAomD,GAKA3mE,EAAAwO,IAAA4rE,SAAA,WACA,IAAAznD,EAAA4/B,GAAA7/B,EAAA8/B,GAAA3pC,EAAAgxD,GACA,SAAAO,EAAAl8E,EAAAN,GACA,IAAA6hC,EAAA9M,EAAA50B,KAAAyG,KAAAtG,EAAAN,GAAAy8E,EAAA3nD,EAAA30B,KAAAyG,KAAAtG,EAAAN,GAAAI,GAAAyhC,EAAA74B,EAAAyzE,EAAAzzE,GAAA,EAAAlH,EAAA,CAAA+/B,EAAA,CACA94B,EAAA84B,EAAA94B,EACAC,EAAA5I,GACO,CACP2I,EAAA0zE,EAAA1zE,EACAC,EAAA5I,GACOq8E,GAEP,WADA36E,IAAA0U,IAAAyU,IACA,OAAAnpB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAiBA,OAfA06E,EAAAznD,OAAA,SAAAhsB,GACA,OAAA1C,UAAAhC,QACA0wB,EAAAwd,GAAAxpC,GACAyzE,GAFAznD,GAIAynD,EAAA1nD,OAAA,SAAA/rB,GACA,OAAA1C,UAAAhC,QACAywB,EAAAyd,GAAAxpC,GACAyzE,GAFA1nD,GAIA0nD,EAAAvxD,WAAA,SAAAliB,GACA,OAAA1C,UAAAhC,QACA4mB,EAAAliB,EACAyzE,GAFAvxD,GAIAuxD,GAKAp6E,EAAAwO,IAAA4rE,SAAAH,OAAA,WACA,IAAAG,EAAAp6E,EAAAwO,IAAA4rE,WAAAvxD,EAAAgxD,GAAAS,EAAAF,EAAAvxD,WAIA,OAHAuxD,EAAAvxD,WAAA,SAAAliB,GACA,OAAA1C,UAAAhC,OAAAq4E,EAIA,SAAAzxD,GACA,kBACA,IAAA3qB,EAAA2qB,EAAAjkB,MAAAJ,KAAAP,WAAAvF,EAAAR,EAAA,GAAA+O,EAAA/O,EAAA,GAAAugC,GACA,OAAA//B,EAAAmE,KAAA6iC,IAAAz4B,GAAAvO,EAAAmE,KAAAw8B,IAAApyB,KAPAstE,CAAA1xD,EAAAliB,IAAAkiB,GAEAuxD,GAQAp6E,EAAAwO,IAAAsmC,OAAA,WACA,IAAAngB,EAAAolD,GAAA5yE,EAAA2yE,GACA,SAAAhlC,EAAA52C,EAAAN,GACA,OAAA48E,GAAA/7E,IAAAk2B,EAAA52B,KAAAyG,KAAAtG,EAAAN,KAAAo8E,IAAA7yE,EAAApJ,KAAAyG,KAAAtG,EAAAN,IAYA,OAVAk3C,EAAAngB,KAAA,SAAAhuB,GACA,OAAA1C,UAAAhC,QACA0yB,EAAAwb,GAAAxpC,GACAmuC,GAFAngB,GAIAmgB,EAAA3tC,KAAA,SAAAR,GACA,OAAA1C,UAAAhC,QACAkF,EAAAgpC,GAAAxpC,GACAmuC,GAFA3tC,GAIA2tC,GAYA,IAAA0lC,GAAAx6E,EAAAoU,IAAA,CACAoV,OAAAwwD,GACAS,MAAA,SAAAtzE,GACA,IAAAzI,EAAAmE,KAAAgtB,KAAA1oB,EAAA,KACA,aAAAzI,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEAg8E,QAAA,SAAAvzE,GACA,IAAAg1D,EAAAt5D,KAAAgtB,KAAA1oB,GAAA,EAAAwzE,KAAAze,EAAAC,EAAAwe,GACA,aAAAxe,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEA0e,OAAA,SAAAzzE,GACA,IAAAzI,EAAAmE,KAAAgtB,KAAA1oB,GAAA,EACA,WAAAzI,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEAm8E,gBAAA,SAAA1zE,GACA,IAAA+0D,EAAAr5D,KAAAgtB,KAAA1oB,EAAA2zE,IAAA3e,EAAAD,EAAA4e,GAAA,EACA,YAAA3e,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEA4e,cAAA,SAAA5zE,GACA,IAAA+0D,EAAAr5D,KAAAgtB,KAAA1oB,EAAA2zE,IAAA3e,EAAAD,EAAA4e,GAAA,EACA,aAAA3e,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,OAGAn8D,EAAAwO,IAAAwsE,YAAAR,GAAAvpD,OACA,IAAA6pD,GAAAj4E,KAAAgtB,KAAA,GAAA8qD,GAAA93E,KAAA2sC,IAAA,GAAA9Q,IACAzJ,EAAA3yB,WAAA,SAAAnE,GAOA,IANA,IAAA43B,EAAAhM,EAAAxb,EAAA41B,MAAA82C,GAAAh8E,EAAAi8E,GAAA/8E,GAAA83B,EAAA,GAAA3zB,EAAA64E,IAAA,CACAr2E,KAAAO,KAAAsoB,MACAnB,KAAAq2C,GACAx5D,MAAA,EACA7G,SAAA,KAEAoF,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GAAS,CAC9Ci4B,EAAAx0B,KAAAs0B,EAAA,IACA,QAAA50B,EAAAqD,KAAAoD,GAAAhK,GAAA,EAAAyB,EAAA8B,EAAAc,SAAyDrE,EAAAyB,IACzD0qB,EAAA5oB,EAAAvD,KAAAw9E,GAAArxD,EAAAnsB,EAAAqB,EAAAsP,EAAAjM,GACAyzB,EAAAt0B,KAAAsoB,GAGA,OAAAsxD,GAAAplD,EAAAh3B,EAAAsP,IAEA0mB,EAAAqmD,UAAA,SAAAn9E,GACA,OAAAqG,KAAA8K,KAAA,MAAAnR,EAAAqkC,GAAA+4C,GAAAL,GAAA/8E,MAEA,IAAAqkC,GAAA+4C,GAAAL,MACA,SAAAK,GAAAt8E,GACA,kBACA,IAAAu8E,EAAAC,EAAAC,GACAF,EAAAh3E,KAAAvF,MAAAy8E,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAAvnC,MAAAl2C,EAAA,KACAy9E,EAAAvnC,MAAAr1C,EAAA8vB,MACA4sD,EAAAhxE,aAAAgxE,EAAAC,UAAgDj3E,KAAAvF,GAChDu8E,EAAAE,QAAA,GACAA,EAAArsE,OAAAqsE,EAAArsE,MAAAisE,UAAAv9E,KAAAyG,UAAA2xB,SAAAulD,EAAAz0E,SAIA,SAAAo0E,GAAAh/D,EAAApd,EAAAsP,GAIA,OAHAumB,EAAAzY,EAAAs/D,IACAt/D,EAAA0b,UAAA94B,EACAod,EAAA9N,KACA8N,EAEA,IAAA8nB,GAAAg3C,GAAAQ,GAAA,GAAAV,GAAA,EAkEA,SAAAW,GAAAv/D,EAAAle,EAAAU,EAAA4tB,GACA,IAAAle,EAAA8N,EAAA9N,GAAAtP,EAAAod,EAAA0b,UACA,OAAAM,GAAAhc,EAAA,mBAAAxd,EAAA,SAAAkrB,EAAAnsB,EAAAgK,GACAmiB,EAAA9qB,GAAAsP,GAAAke,MAAArR,IAAAjd,EAAAsuB,EAAA5tB,EAAAd,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,OACK/I,EAAA4tB,EAAA5tB,GAAA,SAAAkrB,GACLA,EAAA9qB,GAAAsP,GAAAke,MAAArR,IAAAjd,EAAAU,MAqFA,SAAAg9E,GAAAp7D,GAEA,OADA,MAAAA,MAAA,IACA,WACAjc,KAAAqoB,YAAApM,GA6EA,SAAAy6D,GAAA/8E,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAEA,SAAAi9E,GAAArxD,EAAAnsB,EAAAqB,EAAAsP,EAAAutE,GACA,IAGKh3E,EAAAqvC,EAAA3xC,EAAAgqB,EAAAuvD,EAHLP,EAAAzxD,EAAA9qB,KAAA8qB,EAAA9qB,GAAA,CACAy8E,OAAA,EACAlxE,MAAA,IACKlI,EAAAk5E,EAAAjtE,GAOL,SAAA2T,EAAA85D,GACA,IAAAP,EAAAD,EAAAE,SAAAF,EAAAC,GAQA,QAAAQ,KAPAP,IACAA,EAAAvnC,MAAAl2C,EAAA,KACAy9E,EAAAvnC,MAAAr1C,EAAA8vB,MACA4sD,EAAAhxE,aACAgxE,EAAAC,GACAC,EAAArsE,OAAAqsE,EAAArsE,MAAAisE,UAAAv9E,KAAAgsB,IAAAoM,SAAAulD,EAAAz0E,QAEAu0E,EACA,IAAAS,EAAA1tE,EAAA,CACA,IAAA2tE,EAAAV,EAAAS,GACAC,EAAA/nC,MAAAl2C,EAAA,KACAi+E,EAAA/nC,MAAAr1C,EAAA8vB,MACA4sD,EAAAhxE,aACAgxE,EAAAS,GAGA9nC,EAAAl2C,EAAA2qE,EACA30B,GAAA,WAKA,OAJAE,EAAAl2C,GAAA2qE,EAAAoT,GAAA,KACA7nC,EAAAl2C,EAAA,KACAk2C,EAAAr1C,EAAA8vB,KAEA,GACO,EAAA9pB,GACP02E,EAAAE,OAAAntE,EACAjM,EAAA+M,OAAA/M,EAAA+M,MAAA6S,MAAAnkB,KAAAgsB,IAAAoM,SAAAv4B,GACAm+E,EAAA,GACAz5E,EAAAmqB,MAAAnR,QAAA,SAAAnc,EAAAN,IACAA,IAAAd,KAAAgsB,IAAAoM,SAAAv4B,KACAm+E,EAAAt6E,KAAA5C,KAGA2tB,EAAAlqB,EAAAkqB,KACAhqB,EAAAF,EAAAE,SAEA,SAAAomE,EAAAoT,GAEA,IADA,IAAAl9E,EAAAk9E,EAAAx5E,EAAAlB,EAAAkrB,EAAA1tB,GAAAO,EAAA08E,EAAA95E,OACA5C,EAAA,GACA08E,IAAA18E,GAAAtB,KAAAgsB,EAAAzoB,GAEA,GAAAxC,GAAA,EAGA,OAFAwD,EAAA+M,OAAA/M,EAAA+M,MAAA8S,IAAApkB,KAAAgsB,IAAAoM,SAAAv4B,KACA49E,EAAAhxE,aAAAgxE,EAAAjtE,UAA0Cwb,EAAA9qB,GAC1C,EAGAqD,IACAwC,EAAAg3E,EAAAh3E,KACAqvC,EAAAF,GAxDA,SAAA+nC,GACA,IAAA3yE,EAAA/G,EAAA+G,MAEA,GADA8qC,EAAAr1C,EAAAuK,EAAAvE,EACAuE,GAAA2yE,EAAA,OAAA95D,EAAA85D,EAAA3yE,GACA8qC,EAAAl2C,EAAAikB,GAoDA,EAAApd,GACAxC,EAAAk5E,EAAAjtE,GAAA,CACAke,MAAA,IAAA+E,EACA1sB,OACAqvC,QACA9qC,MAAAyyE,EAAAzyE,MACA7G,SAAAs5E,EAAAt5E,SACAgqB,KAAAsvD,EAAAtvD,KACAvlB,MAAArJ,GAEAk+E,EAAA,OACAN,EAAAhxE,OAtTAmxE,GAAA59E,KAAAk3B,EAAAl3B,KACA49E,GAAAlzE,MAAAwsB,EAAAxsB,MACAkzE,GAAA5xD,KAAAkL,EAAAlL,KACA4xD,GAAAx0E,KAAA8tB,EAAA9tB,KACAnH,EAAAsC,WAAA,SAAAqzB,EAAAx3B,GACA,OAAAw3B,KAAArzB,WAAA6hC,GAAAxO,EAAArzB,WAAAnE,GAAAw3B,EAAA31B,EAAA21B,YAAArzB,WAAAqzB,IAEA31B,EAAAsC,WAAA9C,UAAAm8E,GACAA,GAAAnzE,OAAA,SAAAqtB,GACA,IAAAE,EAAAC,EAAAjM,EAAAxb,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UAAA9B,EAAA,GACAJ,EAAAD,EAAAC,GACA,QAAAjuB,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GAAS,CAC9Ci4B,EAAAx0B,KAAAs0B,EAAA,IACA,QAAA50B,EAAAqD,KAAAoD,GAAAhK,GAAA,EAAAyB,EAAA8B,EAAAc,SAAyDrE,EAAAyB,IACzD0qB,EAAA5oB,EAAAvD,MAAAo4B,EAAAH,EAAA93B,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,KACA,aAAAmiB,IAAAiM,EAAAG,SAAApM,EAAAoM,UACAilD,GAAAplD,EAAAp4B,EAAAqB,EAAAsP,EAAAwb,EAAA9qB,GAAAsP,IACAwnB,EAAAt0B,KAAAu0B,IAEAD,EAAAt0B,KAAA,MAIA,OAAA45E,GAAAplD,EAAAh3B,EAAAsP,IAEAotE,GAAAxtE,UAAA,SAAA0nB,GACA,IAAAE,EAAAomD,EAAApyD,EAAAiM,EAAA1zB,EAAAiM,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UAAA9B,EAAA,GACAJ,EAAAC,EAAAD,GACA,QAAAjuB,GAAA,EAAA5J,EAAAwG,KAAAvC,SAAqC2F,EAAA5J,GACrC,QAAAmD,EAAAqD,KAAAoD,GAAAhK,GAAA,EAAAyB,EAAA8B,EAAAc,SAAyDrE,EAAAyB,GACzD,GAAA0qB,EAAA5oB,EAAAvD,GAAA,CACA0E,EAAAynB,EAAA9qB,GAAAsP,GACA4tE,EAAAtmD,EAAA93B,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,GACAquB,EAAAx0B,KAAAs0B,EAAA,IACA,QAAAzrB,GAAA,EAAAjM,EAAA89E,EAAAl6E,SAA+CqI,EAAAjM,IAC/C23B,EAAAmmD,EAAA7xE,KAAA8wE,GAAAplD,EAAA1rB,EAAArL,EAAAsP,EAAAjM,GACAyzB,EAAAt0B,KAAAu0B,GAKA,OAAAqlD,GAAAplD,EAAAh3B,EAAAsP,IAEAotE,GAAAz2E,OAAA,SAAAA,GACA,IAAA6wB,EAAAhM,EAAAkM,EAAA,GACA,mBAAA/wB,MAAAkzB,GAAAlzB,IACA,QAAA0C,EAAA,EAAA5J,EAAAwG,KAAAvC,OAAoC2F,EAAA5J,EAAO4J,IAAA,CAC3CquB,EAAAx0B,KAAAs0B,EAAA,IACA,QAAA50B,EAAAvD,EAAA,EAAAyB,GAAA8B,EAAAqD,KAAAoD,IAAA3F,OAAwDrE,EAAAyB,EAAOzB,KAC/DmsB,EAAA5oB,EAAAvD,KAAAsH,EAAAnH,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,IACAmuB,EAAAt0B,KAAAsoB,GAIA,OAAAsxD,GAAAplD,EAAAzxB,KAAAuzB,UAAAvzB,KAAA+J,KAEAotE,GAAAlvD,MAAA,SAAAtuB,EAAAsuB,GACA,IAAAle,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UACA,OAAA9zB,UAAAhC,OAAA,EAAAuC,KAAAulB,OAAA9qB,GAAAsP,GAAAke,MAAAhuB,IAAAN,GACAk6B,GAAA7zB,KAAA,MAAAioB,EAAA,SAAA1C,GACAA,EAAA9qB,GAAAsP,GAAAke,MAAA/d,OAAAvQ,IACK,SAAA4rB,GACLA,EAAA9qB,GAAAsP,GAAAke,MAAArR,IAAAjd,EAAAsuB,MAWAkvD,GAAAhtE,KAAA,SAAAytE,EAAAv9E,GACA,GAAAoF,UAAAhC,OAAA,GACA,IAAApD,KAAAu9E,EAAA53E,KAAAmK,KAAA9P,EAAAu9E,EAAAv9E,IACA,OAAA2F,KAEA,IAAAoc,EAAA,aAAAw7D,EAAA5X,GAAA3F,GAAA1gE,EAAA6B,EAAAf,GAAA03B,QAAAylD,GACA,SAAAC,IACA73E,KAAAqyB,gBAAA14B,GAEA,SAAAm+E,IACA93E,KAAAoyB,kBAAAz4B,EAAAqwB,MAAArwB,EAAAswB,OAkBA,OAAAmtD,GAAAp3E,KAAA,QAAA43E,EAAAv9E,EAAAV,EAAAswB,MARA,SAAAhO,GACA,aAAAA,EAAA67D,GAAA77D,GAAA,cACA,IAAA7iB,EAAAqP,EAAAzI,KAAAi0B,eAAAt6B,EAAAqwB,MAAArwB,EAAAswB,OACA,OAAAxhB,IAAAwT,IAAA7iB,EAAAgjB,EAAA3T,EAAAwT,GAAA,SAAA3hB,GACA0F,KAAA4pB,eAAAjwB,EAAAqwB,MAAArwB,EAAAswB,MAAA7wB,EAAAkB,SAZA,SAAA2hB,GACA,aAAAA,EAAA47D,GAAA57D,GAAA,cACA,IAAA7iB,EAAAqP,EAAAzI,KAAAgzB,aAAAr5B,GACA,OAAA8O,IAAAwT,IAAA7iB,EAAAgjB,EAAA3T,EAAAwT,GAAA,SAAA3hB,GACA0F,KAAA0pB,aAAA/vB,EAAAP,EAAAkB,WAcA68E,GAAAx8D,UAAA,SAAAi9D,EAAA3vD,GACA,IAAAtuB,EAAA6B,EAAAf,GAAA03B,QAAAylD,GAaA,OAAA53E,KAAAioB,MAAA,QAAA2vD,EAAAj+E,EAAAswB,MANA,SAAAvwB,EAAAN,GACA,IAAA6R,EAAAgd,EAAA1uB,KAAAyG,KAAAtG,EAAAN,EAAA4G,KAAAi0B,eAAAt6B,EAAAqwB,MAAArwB,EAAAswB,QACA,OAAAhf,GAAA,SAAA3Q,GACA0F,KAAA4pB,eAAAjwB,EAAAqwB,MAAArwB,EAAAswB,MAAAhf,EAAA3Q,MATA,SAAAZ,EAAAN,GACA,IAAA6R,EAAAgd,EAAA1uB,KAAAyG,KAAAtG,EAAAN,EAAA4G,KAAAgzB,aAAAr5B,IACA,OAAAsR,GAAA,SAAA3Q,GACA0F,KAAA0pB,aAAA/vB,EAAAsR,EAAA3Q,QAWA68E,GAAA7sE,MAAA,SAAA3Q,EAAAU,EAAA6vB,GACA,IAAArvB,EAAA4E,UAAAhC,OACA,GAAA5C,EAAA,GACA,oBAAAlB,EAAA,CAEA,IAAAuwB,KADArvB,EAAA,IAAAR,EAAA,IACAV,EAAAqG,KAAAsK,MAAA4f,EAAAvwB,EAAAuwB,GAAA7vB,GACA,OAAA2F,KAEAkqB,EAAA,GAEA,SAAA6tD,IACA/3E,KAAAsK,MAAA6oB,eAAAx5B,GAUA,OAAAy9E,GAAAp3E,KAAA,SAAArG,EAAAU,EARA,SAAA4hB,GACA,aAAAA,EAAA87D,GAAA97D,GAAA,cACA,IAAA7iB,EAAAqP,EAAAqgB,EAAA9oB,MAAAm0B,iBAAAn0B,KAAA,MAAAo0B,iBAAAz6B,GACA,OAAA8O,IAAAwT,IAAA7iB,EAAAihE,GAAA5xD,EAAAwT,GAAA,SAAA3hB,GACA0F,KAAAsK,MAAA+e,YAAA1vB,EAAAP,EAAAkB,GAAA4vB,UAMAitD,GAAAa,WAAA,SAAAr+E,EAAAsuB,EAAAiC,GAQA,OAPAzqB,UAAAhC,OAAA,IAAAysB,EAAA,IAOAlqB,KAAAioB,MAAA,SAAAtuB,EANA,SAAAD,EAAAN,GACA,IAAA6R,EAAAgd,EAAA1uB,KAAAyG,KAAAtG,EAAAN,EAAA0vB,EAAA9oB,MAAAm0B,iBAAAn0B,KAAA,MAAAo0B,iBAAAz6B,IACA,OAAAsR,GAAA,SAAA3Q,GACA0F,KAAAsK,MAAA+e,YAAA1vB,EAAAsR,EAAA3Q,GAAA4vB,OAKAitD,GAAA5sE,KAAA,SAAAlQ,GACA,OAAA+8E,GAAAp3E,KAAA,OAAA3F,EAAAg9E,KAQAF,GAAAjtE,OAAA,WACA,IAAAzP,EAAAuF,KAAAuzB,UACA,OAAAvzB,KAAA8K,KAAA,4BACA,IAAA5P,EACA8E,KAAAvF,GAAAuL,MAAA,IAAA9K,EAAA8E,KAAA0xB,aAAAx2B,EAAAw4B,YAAA1zB,SAGAm3E,GAAAnvD,KAAA,SAAA3tB,GACA,IAAA0P,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UACA,OAAA9zB,UAAAhC,OAAA,EAAAuC,KAAAulB,OAAA9qB,GAAAsP,GAAAie,MACA,mBAAA3tB,MAAAmB,EAAAwsB,KAAA5nB,MAAA5E,EAAAiE,YACAo0B,GAAA7zB,KAAA,SAAAulB,GACAA,EAAA9qB,GAAAsP,GAAAie,KAAA3tB,MAGA88E,GAAAtyE,MAAA,SAAAxK,GACA,IAAA0P,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UACA,OAAA9zB,UAAAhC,OAAA,EAAAuC,KAAAulB,OAAA9qB,GAAAsP,GAAAlF,MACAgvB,GAAA7zB,KAAA,mBAAA3F,EAAA,SAAAkrB,EAAAnsB,EAAAgK,GACAmiB,EAAA9qB,GAAAsP,GAAAlF,OAAAxK,EAAAd,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,KACK/I,KAAA,SAAAkrB,GACLA,EAAA9qB,GAAAsP,GAAAlF,MAAAxK,MAGA88E,GAAAn5E,SAAA,SAAA3D,GACA,IAAA0P,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UACA,OAAA9zB,UAAAhC,OAAA,EAAAuC,KAAAulB,OAAA9qB,GAAAsP,GAAA/L,SACA61B,GAAA7zB,KAAA,mBAAA3F,EAAA,SAAAkrB,EAAAnsB,EAAAgK,GACAmiB,EAAA9qB,GAAAsP,GAAA/L,SAAAK,KAAAiF,IAAA,EAAAjJ,EAAAd,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,MACK/I,EAAAgE,KAAAiF,IAAA,EAAAjJ,GAAA,SAAAkrB,GACLA,EAAA9qB,GAAAsP,GAAA/L,SAAA3D,MAGA88E,GAAArsE,KAAA,SAAAqlB,EAAA7jB,GACA,IAAAvC,EAAA/J,KAAA+J,GAAAtP,EAAAuF,KAAAuzB,UACA,GAAA9zB,UAAAhC,OAAA,GACA,IAAA65E,EAAAX,GAAAsB,EAAAt4C,GACA,IACAA,GAAA51B,EACA8pB,GAAA7zB,KAAA,SAAAulB,EAAAnsB,EAAAgK,GACAuzE,GAAApxD,EAAA9qB,GAAAsP,GACAomB,EAAA52B,KAAAgsB,IAAAoM,SAAAv4B,EAAAgK,KAEO,QACPuzE,GAAAW,EACA33C,GAAAs4C,QAGApkD,GAAA7zB,KAAA,SAAAulB,GACA,IAAAznB,EAAAynB,EAAA9qB,GAAAsP,IACAjM,EAAA+M,QAAA/M,EAAA+M,MAAArP,EAAA8zB,SAAA,6BAAAjjB,GAAA8jB,EAAA7jB,KAGA,OAAAtM,MAEAm3E,GAAAr5E,WAAA,WAEA,IADA,IAAAyzB,EAAAhM,EAAAznB,EAAAo6E,EAAAl4E,KAAA+J,GAAAouE,IAAA1B,GAAAh8E,EAAAuF,KAAAuzB,UAAA9B,EAAA,GACAruB,EAAA,EAAA5J,EAAAwG,KAAAvC,OAAoC2F,EAAA5J,EAAO4J,IAAA,CAC3CquB,EAAAx0B,KAAAs0B,EAAA,IACA,QAAA50B,EAAAvD,EAAA,EAAAyB,GAAA8B,EAAAqD,KAAAoD,IAAA3F,OAAwDrE,EAAAyB,EAAOzB,KAC/DmsB,EAAA5oB,EAAAvD,KAEAw9E,GAAArxD,EAAAnsB,EAAAqB,EAAA09E,EAAA,CACA73E,MAFAxC,EAAAynB,EAAA9qB,GAAAy9E,IAEA53E,KACA0nB,KAAAlqB,EAAAkqB,KACAnjB,MAAA/G,EAAA+G,MAAA/G,EAAAE,SACAA,SAAAF,EAAAE,WAGAuzB,EAAAt0B,KAAAsoB,GAGA,OAAAsxD,GAAAplD,EAAAh3B,EAAA09E,IAgFA38E,EAAAwO,IAAAoE,KAAA,WACA,IAAAgqE,EAAA1qE,EAAAlS,EAAAkS,MAAAqD,SAAAd,EAAAooE,GAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,KAAAnoE,EAAA,KACA,SAAAlC,EAAA9F,GACAA,EAAAwC,KAAA,WACA,IAEA4tE,EAFApwE,EAAA9M,EAAAwI,OAAAhE,MACAi+B,EAAAj+B,KAAAy9B,WAAA/vB,EAAAwxB,EAAAl/B,KAAAy9B,UAAA/vB,EAAAkyB,OACAvvB,EAAA,MAAAC,EAAA4uB,EAAA7uB,MAAA6uB,EAAA7uB,MAAAjQ,MAAA8+B,EAAAu5C,GAAAv5C,EAAA1gC,SAAA8R,EAAA69D,EAAA,MAAAiK,EAAAl5C,EAAAivC,WAAAjvC,EAAAivC,WAAA/tE,MAAA8+B,EAAAu5C,GAAAzqD,EAAAoqD,EAAAhU,EAAA97D,EAAAqB,UAAA,SAAA1H,KAAAoO,EAAA6uB,GAAAy5C,EAAAvU,EAAA3zD,QAAAN,OAAA,eAAAhG,KAAA,gBAAAG,MAAA,UAAAqvB,IAAAi/C,EAAAp9E,EAAAsC,WAAAsmE,EAAAzzD,QAAArG,MAAA,UAAAqvB,IAAAzvB,SAAA2uE,EAAAr9E,EAAAsC,WAAAsmE,EAAA9tD,SAAAhM,MAAA,aAAAwuE,EAAAz6E,KAAAiF,IAAAg1E,EAAA,GAAAE,EACAzoE,EAAAy5D,GAAAtqC,GAAA7iB,EAAA/T,EAAAqB,UAAA,WAAA1H,KAAA,KAAA82E,GAAA18D,EAAA5L,QAAAvM,OAAA,QAAAiG,KAAA,kBACA3O,EAAAsC,WAAAue,IACAs8D,EAAAz0E,OAAA,QACAy0E,EAAAz0E,OAAA,QACA,IAAAs4B,EAAA8tB,EAAA7tB,EAAA8tB,EAAAyuB,EAAAL,EAAA30E,OAAA,QAAAi1E,EAAAJ,EAAA70E,OAAA,QAAAuG,EAAA65D,EAAApgE,OAAA,QAAAuG,KAAA4jE,GAAA+K,EAAAP,EAAA30E,OAAA,QAAAm1E,EAAAN,EAAA70E,OAAA,QAAAwtC,EAAA,QAAAvhC,GAAA,SAAAA,GAAA,IAcA,GAbA,WAAAA,GAAA,QAAAA,GACAyoE,EAAAU,GAAA58C,EAAA,IAAAC,EAAA,IAAA6tB,EAAA,KAAAC,EAAA,KACAhgD,EAAAJ,KAAA,KAAAqnC,EAAA,iBAAAlnC,MAAA,wBACAyuE,EAAA5uE,KAAA,QAAA4F,EAAA,OAAAyhC,EAAA+mC,EAAA,MAAAxoE,EAAA,OAAAyhC,EAAA+mC,KAEAG,EAAAW,GAAA78C,EAAA,IAAAC,EAAA,IAAA6tB,EAAA,KAAAC,EAAA,KACAhgD,EAAAJ,KAAA,cAAAG,MAAA,cAAAknC,EAAA,iBACAunC,EAAA5uE,KAAA,QAAAqnC,EAAA+mC,EAAA,IAAAxoE,EAAA,SAAAA,EAAA,OAAAyhC,EAAA+mC,IAEAS,EAAA7uE,KAAAogD,EAAA/Y,EAAA8mC,GACAY,EAAA/uE,KAAAsyB,EAAA+U,EAAAsnC,GACAG,EAAA9uE,KAAAmgD,EAAA,GAAAngD,KAAAogD,EAAA/Y,EAAA8mC,GACAa,EAAAhvE,KAAAqyB,EAAA,GAAAryB,KAAAsyB,EAAA+U,EAAAsnC,GACA55C,EAAA6vC,UAAA,CACA,IAAA5sE,EAAA+8B,EAAA5F,EAAAn3B,EAAA4sE,YAAA,EACA9wC,EAAAiB,EAAA,SAAAxlC,GACA,OAAAyI,EAAAzI,GAAA4/B,QAES2E,EAAA8wC,UACT9wC,EAAAiB,EAEA05C,EAAAr/E,KAAAm/E,EAAAx5C,EAAAjB,GAEA06C,EAAAp/E,KAAAm/E,EAAAz6C,EAAAiB,GACA25C,EAAAt/E,KAAAm/E,EAAAx5C,OAqDA,OAlDA9wB,EAAAV,MAAA,SAAAvL,GACA,OAAA1C,UAAAhC,QACAiQ,EAAAvL,EACAiM,GAFAV,GAIAU,EAAA6B,OAAA,SAAA9N,GACA,OAAA1C,UAAAhC,QACAwS,EAAA9N,KAAAm3E,GAAAn3E,EAAA,GAAAk2E,GACAjqE,GAFA6B,GAIA7B,EAAAiC,MAAA,WACA,OAAA5Q,UAAAhC,QACAg7E,EAAAjwD,EAAA/oB,WACA2O,GAFAqqE,GAIArqE,EAAAkC,WAAA,SAAAnO,GACA,OAAA1C,UAAAhC,QACA6S,EAAAnO,EACAiM,GAFAkC,GAIAlC,EAAA+/D,WAAA,SAAAhsE,GACA,OAAA1C,UAAAhC,QACA26E,EAAAj2E,EACAiM,GAFAgqE,GAIAhqE,EAAAmrE,SAAA,SAAAp3E,GACA,IAAAtH,EAAA4E,UAAAhC,OACA,OAAA5C,GACAy9E,GAAAn2E,EACAo2E,GAAA94E,UAAA5E,EAAA,GACAuT,GAHAkqE,GAKAlqE,EAAAkqE,cAAA,SAAAn2E,GACA,OAAA1C,UAAAhC,QACA66E,GAAAn2E,EACAiM,GAFAkqE,GAIAlqE,EAAAmqE,cAAA,SAAAp2E,GACA,OAAA1C,UAAAhC,QACA86E,GAAAp2E,EACAiM,GAFAmqE,GAIAnqE,EAAAoqE,YAAA,SAAAr2E,GACA,OAAA1C,UAAAhC,QACA+6E,GAAAr2E,EACAiM,GAFAoqE,GAIApqE,EAAAorE,cAAA,WACA,OAAA/5E,UAAAhC,QAAA2Q,GAEAA,GAEA,IAAAiqE,GAAA,SAAAiB,GAAA,CACA7sE,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GAEA,SAAAwsE,GAAAjoD,EAAA9K,EAAAmW,GACArL,EAAAhnB,KAAA,qBAAAzQ,GACA,IAAAmyD,EAAAxlC,EAAA3sB,GACA,oBAAAq2C,SAAA8b,KAAArvB,EAAA9iC,IAAA,QAGA,SAAA2/E,GAAAloD,EAAAzZ,EAAA+kB,GACAtL,EAAAhnB,KAAA,qBAAAzQ,GACA,IAAAmyD,EAAAn0C,EAAAhe,GACA,sBAAAq2C,SAAA8b,KAAApvB,EAAA/iC,IAAA,MAGA8B,EAAAwO,IAAA8E,MAAA,WACA,IAAA2qE,EAAAC,EAAA7uE,EAAAglB,EAAA/gB,EAAA,iCAAA3M,EAAA,KAAAC,EAAA,KAAAu3E,EAAA,MAAAC,EAAA,MAAAC,GAAA,EAAAC,GAAA,EAAAC,EAAAC,GAAA,GACA,SAAAlrE,EAAAxG,GACAA,EAAAwC,KAAA,WACA,IAAAxC,EAAA9M,EAAAwI,OAAAhE,MAAAsK,MAAA,wBAAAA,MAAA,+CAAA+B,GAAA,kBAAA4tE,GAAA5tE,GAAA,mBAAA4tE,GACAC,EAAA5xE,EAAAqB,UAAA,eAAA1H,KAAA,KACAi4E,EAAAzpE,QAAAvM,OAAA,QAAAiG,KAAA,sBAAAG,MAAA,uBAAAA,MAAA,sBACAhC,EAAAqB,UAAA,WAAA1H,KAAA,KAAAwO,QAAAvM,OAAA,QAAAiG,KAAA,kBAAAG,MAAA,iBACA,IAAA6vE,EAAA7xE,EAAAqB,UAAA,WAAA1H,KAAA83E,EAAA/rD,GACAmsD,EAAAxpE,OAAAzG,SACAiwE,EAAA1pE,QAAAvM,OAAA,KAAAiG,KAAA,iBAAAzQ,GACA,gBAAAA,IACS4Q,MAAA,kBAAA5Q,GACT,OAAA0gF,GAAA1gF,KACSwK,OAAA,QAAAiG,KAAA,aAAAzQ,GACT,cAAA+c,KAAA/c,IAAA,SACSyQ,KAAA,aAAAzQ,GACT,cAAA+c,KAAA/c,IAAA,SACSyQ,KAAA,WAAAA,KAAA,YAAAG,MAAA,uBACT6vE,EAAA7vE,MAAA,UAAAwE,EAAA7K,QAAA,aACA,IAAA8L,EAAAsqE,EAAA7+E,EAAAsC,WAAAwK,GAAAgyE,EAAA9+E,EAAAsC,WAAAo8E,GACA/3E,IACA4N,EAAAy5D,GAAArnE,GACAm4E,EAAAnwE,KAAA,IAAA4F,EAAA,IAAA5F,KAAA,QAAA4F,EAAA,GAAAA,EAAA,IACAwqE,EAAAF,IAEAj4E,IACA2N,EAAAy5D,GAAApnE,GACAk4E,EAAAnwE,KAAA,IAAA4F,EAAA,IAAA5F,KAAA,SAAA4F,EAAA,GAAAA,EAAA,IACAyqE,EAAAH,IAEAx8E,EAAAw8E,KAyDA,SAAAx8E,EAAAyK,GACAA,EAAAqB,UAAA,WAAAQ,KAAA,qBAAAzQ,GACA,mBAAAigF,GAAA,KAAAljE,KAAA/c,IAAA,IAAAkgF,GAAA,KAAAnjE,KAAA/c,IAAA,MAGA,SAAA6gF,EAAAjyE,GACAA,EAAAtE,OAAA,WAAAmG,KAAA,IAAAwvE,EAAA,IACArxE,EAAAqB,UAAA,2BAAAQ,KAAA,QAAAwvE,EAAA,GAAAA,EAAA,IAEA,SAAAa,EAAAlyE,GACAA,EAAAtE,OAAA,WAAAmG,KAAA,IAAAyvE,EAAA,IACAtxE,EAAAqB,UAAA,2BAAAQ,KAAA,SAAAyvE,EAAA,GAAAA,EAAA,IAEA,SAAAK,IACA,IAAA59C,EAAAhmB,EAAA6X,EAAAluB,KAAAy6E,EAAAj/E,EAAAwI,OAAAxI,EAAAqP,MAAAqjB,QAAAwsD,EAAA7vE,EAAAilB,GAAA5B,EAAAzuB,WAAA6I,EAAA9M,EAAAwI,OAAAkqB,GAAAysD,EAAAF,EAAAt7D,QAAAy7D,GAAA,UAAAnkE,KAAAkkE,IAAAx4E,EAAA04E,GAAA,UAAApkE,KAAAkkE,IAAAv4E,EAAA04E,EAAAL,EAAA5wE,QAAA,UAAA6vB,EAAAhD,GAAAxI,GAAAwK,EAAAl9B,EAAA8pB,MAAA4I,GACAnlB,EAAAvN,EAAAwI,OAAA8kB,EAAAoF,IAAA7hB,GAAA,gBAsBA,WACA,IAAA7Q,EAAAqP,MAAAkwE,UACAD,IACAz+C,EAAA,KACA3D,EAAA,IAAAihD,EAAA,GACAjhD,EAAA,IAAAkhD,EAAA,GACAkB,EAAA,GAEArrD,OA9BApjB,GAAA,cAiCA,WACA,IAAA7Q,EAAAqP,MAAAkwE,SAAA,GAAAD,IACApiD,EAAA,IAAAihD,EAAA,GACAjhD,EAAA,IAAAkhD,EAAA,GACAkB,EAAA,EACArrD,OA/BA,GANAj0B,EAAAqP,MAAAssB,eACApuB,EAAAsD,GAAA,kBAAA2uE,GAAA3uE,GAAA,iBAAA4uE,GAEAlyE,EAAAsD,GAAA,kBAAA2uE,GAAA3uE,GAAA,gBAAA4uE,GAEA3yE,EAAAwuE,YAAAntE,UAAA,KAAAmtE,YACAgE,EACApiD,EAAA,GAAAihD,EAAA,GAAAjhD,EAAA,GACAA,EAAA,GAAAkhD,EAAA,GAAAlhD,EAAA,QACO,GAAAiiD,EAAA,CACP,IAAAO,GAAA,KAAAzkE,KAAAkkE,GAAAQ,GAAA,KAAA1kE,KAAAkkE,GACAtkE,EAAA,CAAAsjE,EAAA,EAAAuB,GAAAxiD,EAAA,GAAAkhD,EAAA,EAAAuB,GAAAziD,EAAA,IACAA,EAAA,GAAAihD,EAAAuB,GACAxiD,EAAA,GAAAkhD,EAAAuB,QACO3/E,EAAAqP,MAAAuwE,SAAA/+C,EAAA3D,EAAAnvB,SA0BP,SAAAyxE,IACA,IAAAn2D,EAAArpB,EAAA8pB,MAAA4I,GAAAwQ,GAAA,EACAroB,IACAwO,EAAA,IAAAxO,EAAA,GACAwO,EAAA,IAAAxO,EAAA,IAEAykE,IACAt/E,EAAAqP,MAAAuwE,QACA/+C,MAAA,EAAAs9C,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACAlhD,EAAA,GAAAihD,IAAA90D,EAAA,GAAAwX,EAAA,KACA3D,EAAA,GAAAkhD,IAAA/0D,EAAA,GAAAwX,EAAA,MACWA,EAAA,MAEXu+C,GAAAS,EAAAx2D,EAAA1iB,EAAA,KACAo4E,EAAAjyE,GACAo2B,GAAA,GAEAm8C,GAAAQ,EAAAx2D,EAAAziB,EAAA,KACAo4E,EAAAlyE,GACAo2B,GAAA,GAEAA,IACA7gC,EAAAyK,GACAoyE,EAAA,CACAvqD,KAAA,QACA51B,KAAAugF,EAAA,mBAIA,SAAAO,EAAAx2D,EAAAnX,EAAAtU,GACA,IAAAsK,EAAAJ,EAAAyM,EAAAy5D,GAAA97D,GAAAouB,EAAA/rB,EAAA,GAAAgsB,EAAAhsB,EAAA,GAAAsV,EAAAqT,EAAAt/B,GAAAmY,EAAAnY,EAAAwgF,EAAAD,EAAAh3E,EAAA4O,EAAA,GAAAA,EAAA,GAiBA,GAhBAupE,IACAh/C,GAAAzW,EACA0W,GAAAp5B,EAAA0iB,GAEA3hB,GAAAtK,EAAA0gF,EAAAD,GAAAx7E,KAAAiF,IAAAw4B,EAAAz9B,KAAAqF,IAAAq4B,EAAAlX,EAAAzrB,KAAAyrB,EAAAzrB,GACA0hF,EACAx3E,GAAAI,GAAA2hB,GAAA1iB,GAEA05B,IAAAhX,EAAAhnB,KAAAiF,IAAAw4B,EAAAz9B,KAAAqF,IAAAq4B,EAAA,EAAAM,EAAAjjC,GAAAsK,KACA2hB,EAAA3hB,GACAJ,EAAAI,EACAA,EAAA2hB,GAEA/hB,EAAA+hB,GAGA9T,EAAA,IAAA7N,GAAA6N,EAAA,IAAAjO,EAIA,OAHAlK,EAAAsgF,EAAA,KAAsCD,EAAA,KACtCloE,EAAA,GAAA7N,EACA6N,EAAA,GAAAjO,GACA,EAGA,SAAA23E,IACAD,IACA1yE,EAAAgC,MAAA,wBAAAX,UAAA,WAAAW,MAAA,UAAAwE,EAAA7K,QAAA,aACAzI,EAAAwI,OAAA,QAAAsG,MAAA,eACAvB,EAAAsD,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAqtB,IACAghD,EAAA,CACAvqD,KAAA,aAtFA7nB,EAAAgC,MAAA,yBAAAX,UAAA,WAAAW,MAAA,gBACA9O,EAAAwI,OAAA,QAAAsG,MAAA,SAAAmwE,EAAAnwE,MAAA,WACAowE,EAAA,CACAvqD,KAAA,eAEA6qD,IAyJA,OAnPAlsE,EAAAjE,MAAA,SAAAvC,GACAA,EAAAwC,KAAA,WACA,IAAA4vE,EAAA7vE,EAAAilB,GAAA9vB,KAAAP,WAAA67E,EAAA,CACAn5E,EAAAw3E,EACAv3E,EAAAw3E,EACAxgF,EAAAqgF,EACAr2E,EAAAs2E,GACS6B,EAAAv7E,KAAAy9B,WAAA69C,EACTt7E,KAAAy9B,UAAA69C,EACA37C,GACAnkC,EAAAwI,OAAAhE,MAAAlC,aAAAgN,KAAA,yBACA2uE,EAAA8B,EAAAniF,EACAsgF,EAAA6B,EAAAn4E,EACAu2E,EAAA4B,EAAAp5E,EACAy3E,EAAA2B,EAAAn5E,EACAs4E,EAAA,CACAvqD,KAAA,iBAEWlI,MAAA,yBACX,IAAAgnD,EAAArS,GAAA+c,EAAA2B,EAAAn5E,GAAAq5E,EAAA5e,GAAAgd,EAAA0B,EAAAl5E,GAEA,OADAq3E,EAAAC,EAAA,KACA,SAAAp/E,GACAq/E,EAAA2B,EAAAn5E,EAAA8sE,EAAA30E,GACAs/E,EAAA0B,EAAAl5E,EAAAo5E,EAAAlhF,GACAogF,EAAA,CACAvqD,KAAA,QACA51B,KAAA,cAGWuQ,KAAA,uBACX2uE,EAAA6B,EAAAliF,EACAsgF,EAAA4B,EAAAl4E,EACAs3E,EAAA,CACAvqD,KAAA,QACA51B,KAAA,WAEAmgF,EAAA,CACAvqD,KAAA,gBAIAuqD,EAAA,CACAvqD,KAAA,eAEAuqD,EAAA,CACAvqD,KAAA,QACA51B,KAAA,WAEAmgF,EAAA,CACAvqD,KAAA,iBA8HArhB,EAAA3M,EAAA,SAAAkQ,GACA,OAAA5S,UAAAhC,QAEAs8E,EAAAC,KADA73E,EAAAkQ,IACA,GAAAjQ,GACA0M,GAHA3M,GAKA2M,EAAA1M,EAAA,SAAAiQ,GACA,OAAA5S,UAAAhC,QAEAs8E,EAAAC,IAAA73E,GAAA,IADAC,EAAAiQ,IAEAvD,GAHA1M,GAKA0M,EAAAo/D,MAAA,SAAA77D,GACA,OAAA5S,UAAAhC,QACA0E,GAAAC,GAAAy3E,IAAAxnE,EAAA,GAAAynE,IAAAznE,EAAA,IAAmDlQ,EAAA03E,IAAAxnE,EAA0BjQ,IAAA03E,IAAAznE,GAC7EvD,GAFA3M,GAAAC,EAAA,CAAAy3E,EAAAC,GAAA33E,EAAA03E,EAAAz3E,EAAA03E,EAAA,MAIAhrE,EAAAyC,OAAA,SAAAc,GACA,IAAAgU,EAAAmW,EAAA9kB,EAAA+kB,EAAAniC,EACA,OAAAmF,UAAAhC,QAqBA0E,IACAkkB,EAAAhU,EAAA,GAAAmqB,EAAAnqB,EAAA,GACAjQ,IAAAikB,IAAA,GAAAmW,IAAA,IACAi9C,EAAA,CAAApzD,EAAAmW,GACAr6B,EAAAw7B,SAAAtX,EAAAlkB,EAAAkkB,GAAAmW,EAAAr6B,EAAAq6B,IACAA,EAAAnW,IAAA/rB,EAAA+rB,IAAAmW,IAAAliC,GACA+rB,GAAAszD,EAAA,IAAAn9C,GAAAm9C,EAAA,KAAAA,EAAA,CAAAtzD,EAAAmW,KAEAp6B,IACAsV,EAAArF,EAAA,GAAAoqB,EAAApqB,EAAA,GACAlQ,IAAAuV,IAAA,GAAA+kB,IAAA,IACAi9C,EAAA,CAAAhiE,EAAA+kB,GACAr6B,EAAAu7B,SAAAjmB,EAAAtV,EAAAsV,GAAA+kB,EAAAr6B,EAAAq6B,IACAA,EAAA/kB,IAAApd,EAAAod,IAAA+kB,IAAAniC,GACAod,GAAAkiE,EAAA,IAAAn9C,GAAAm9C,EAAA,KAAAA,EAAA,CAAAliE,EAAA+kB,KAEA3tB,IApCA3M,IACAs3E,GACApzD,EAAAozD,EAAA,GAAAj9C,EAAAi9C,EAAA,KAEApzD,EAAAszD,EAAA,GAAAn9C,EAAAm9C,EAAA,GACAx3E,EAAAw7B,SAAAtX,EAAAlkB,EAAAw7B,OAAAtX,GAAAmW,EAAAr6B,EAAAw7B,OAAAnB,IACAA,EAAAnW,IAAA/rB,EAAA+rB,IAAAmW,IAAAliC,KAGA8H,IACAs3E,GACAhiE,EAAAgiE,EAAA,GAAAj9C,EAAAi9C,EAAA,KAEAhiE,EAAAkiE,EAAA,GAAAn9C,EAAAm9C,EAAA,GACAx3E,EAAAu7B,SAAAjmB,EAAAtV,EAAAu7B,OAAAjmB,GAAA+kB,EAAAr6B,EAAAu7B,OAAAlB,IACAA,EAAA/kB,IAAApd,EAAAod,IAAA+kB,IAAAniC,KAGA6H,GAAAC,EAAA,EAAAikB,EAAA3O,GAAA,CAAA8kB,EAAAC,IAAAt6B,EAAA,CAAAkkB,EAAAmW,GAAAp6B,GAAA,CAAAsV,EAAA+kB,KAoBA3tB,EAAA5R,MAAA,WAKA,OAJA4R,EAAA7K,UACA01E,EAAA,MAAAC,EAAA,MACAH,EAAAC,EAAA,MAEA5qE,GAEAA,EAAA7K,MAAA,WACA,QAAA9B,GAAAw3E,EAAA,IAAAA,EAAA,MAAAv3E,GAAAw3E,EAAA,IAAAA,EAAA,IAEAp+E,EAAA0zB,OAAApgB,EAAAjE,EAAA,OAEA,IAAAuvE,GAAA,CACAv/E,EAAA,YACAiC,EAAA,YACA3B,EAAA,YACA4N,EAAA,YACA0yE,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEA5B,GAAA,+DACAvjC,GAAA5D,GAAAtyC,OAAAs6C,GAAAD,WACAihC,GAAAplC,GAAAjB,IACAsmC,GAAAD,GAAA,yBAEA,SAAAE,GAAA3mC,GACA,OAAAA,EAAA4mC,cA8CA,SAAAC,GAAAlrE,EAAAs9C,EAAA9tD,GACA,SAAAmN,EAAAvL,GACA,OAAA4O,EAAA5O,GAUA,SAAA+5E,EAAA3qE,EAAAvL,GACA,IAAAkoB,GAAA3c,EAAA,GAAAA,EAAA,IAAAvL,EAAA5M,EAAAoC,EAAAiwB,OAAA0wD,GAAAjuD,GACA,OAAA90B,GAAA+iF,GAAA1+E,OAAA,CAAA4wD,EAAA3U,KAAAg0B,GAAAn8D,EAAA3B,IAAA,SAAAlW,GACA,OAAAA,EAAA,UACOsM,GAAA,IAAA5M,EAAAi1D,EAAAngC,EAAAiuD,GAAA/iF,EAAA,GAAA+iF,GAAA/iF,GAAA80B,EAAA90B,EAAA,EAAAA,GAAA,CAAAgjF,GAAA1O,GAAAn8D,EAAAvL,GAAA,IAgCP,OA5CA0H,EAAAiwB,OAAA,SAAAx7B,GACA,OAAAk6E,GAAAtrE,EAAA4sB,OAAAx7B,KAEAuL,EAAAlP,OAAA,SAAA2D,GACA,OAAA1C,UAAAhC,QACAsT,EAAAvS,OAAA2D,GACAuL,GAFAqD,EAAAvS,SAAAoR,IAAAysE,KAUA3uE,EAAAm8D,KAAA,SAAAhwB,EAAAyiC,GACA,IAAA99E,EAAAkP,EAAAlP,SAAA+S,EAAAg4D,GAAA/qE,GAAA4vB,EAAA,MAAAyrB,EAAAqiC,EAAA3qE,EAAA,qBAAAsoC,GAAAqiC,EAAA3qE,EAAAsoC,GAEA,SAAA0iC,EAAAnnC,GACA,OAAAjgC,MAAAigC,KAAAyE,EAAA9pC,MAAAqlC,EAAAinC,IAAAjnC,EAAA,GAAAknC,GAAA7+E,OAEA,OAJA2wB,IAAAyrB,EAAAzrB,EAAA,GAAAkuD,EAAAluD,EAAA,IAIA1gB,EAAAlP,OAAAorE,GAAAprE,EAAA89E,EAAA,GACAv9E,MAAA,SAAAq2C,GACA,KAAAmnC,EAAAnnC,EAAAyE,EAAA96C,MAAAq2C,OAAAinC,GAAAjnC,EAAA,GACA,OAAAA,GAEAp2C,KAAA,SAAAo2C,GACA,KAAAmnC,EAAAnnC,EAAAyE,EAAA76C,KAAAo2C,OAAAinC,IAAAjnC,EAAA,GACA,OAAAA,IAEOyE,KAEPnsC,EAAA2C,MAAA,SAAAwpC,EAAAyiC,GACA,IAAA/qE,EAAAg4D,GAAA77D,EAAAlP,UAAA4vB,EAAA,MAAAyrB,EAAAqiC,EAAA3qE,EAAA,qBAAAsoC,EAAAqiC,EAAA3qE,EAAAsoC,MAAA9pC,OAAA,EACAA,MAAA8pC,GACOyiC,GAEP,OADAluD,IAAAyrB,EAAAzrB,EAAA,GAAAkuD,EAAAluD,EAAA,IACAyrB,EAAA9pC,MAAAwB,EAAA,GAAA8qE,IAAA9qE,EAAA,MAAA+qE,EAAA,IAAAA,IAEA5uE,EAAAygE,WAAA,WACA,OAAA5tE,GAEAmN,EAAAkyB,KAAA,WACA,OAAAq8C,GAAAlrE,EAAA6uB,OAAAyuB,EAAA9tD,IAEAitE,GAAA9/D,EAAAqD,GAEA,SAAAsrE,GAAA/hF,GACA,WAAAuG,KAAAvG,GAnGAm8C,GAAA+lC,IAAA37E,KAAA7F,UAAAghF,cAAA,IAAAn7E,KAAA,4BAAAk7E,GAAAD,GAIAC,GAAA9tC,MAAA,SAAA0I,GACA,IAAAvB,EAAA,IAAAv0C,KAAA81C,GACA,OAAAxhC,MAAAigC,GAAA,KAAAA,GAEA2mC,GAAA77E,SAAA47E,GAAA57E,SACA2yC,GAAA4pC,OAAAvnC,GAAA,SAAAE,GACA,WAAAtC,GAAA,IAAAz0C,KAAAU,MAAAq2C,EAAA,OACG,SAAAA,EAAA/+B,GACH++B,EAAAj0C,QAAAi0C,EAAAh0C,UAAA,IAAA/C,KAAAU,MAAAsX,KACG,SAAA++B,GACH,OAAAA,EAAAtB,eAEAjB,GAAA6pC,QAAA7pC,GAAA4pC,OAAA1sE,MACA8iC,GAAA6pC,QAAAlnC,IAAA3C,GAAA4pC,OAAAjnC,IAAAzlC,MACA8iC,GAAA8pC,OAAAznC,GAAA,SAAAE,GACA,WAAAtC,GAAA,IAAAz0C,KAAAU,MAAAq2C,EAAA,OACG,SAAAA,EAAA/+B,GACH++B,EAAAj0C,QAAAi0C,EAAAh0C,UAAA,IAAA/C,KAAAU,MAAAsX,KACG,SAAA++B,GACH,OAAAA,EAAA1B,eAEAb,GAAA+pC,QAAA/pC,GAAA8pC,OAAA5sE,MACA8iC,GAAA+pC,QAAApnC,IAAA3C,GAAA8pC,OAAAnnC,IAAAzlC,MACA8iC,GAAAgqC,KAAA3nC,GAAA,SAAAE,GACA,IAAA0nC,EAAA1nC,EAAApB,oBAAA,GACA,WAAAlB,GAAA,MAAAz0C,KAAAU,MAAAq2C,EAAA,KAAA0nC,QACG,SAAA1nC,EAAA/+B,GACH++B,EAAAj0C,QAAAi0C,EAAAh0C,UAAA,KAAA/C,KAAAU,MAAAsX,KACG,SAAA++B,GACH,OAAAA,EAAA9B,aAEAT,GAAAkqC,MAAAlqC,GAAAgqC,KAAA9sE,MACA8iC,GAAAkqC,MAAAvnC,IAAA3C,GAAAgqC,KAAArnC,IAAAzlC,MACA8iC,GAAAmqC,MAAA9nC,GAAA,SAAAE,GAGA,OAFAA,EAAAvC,GAAA8G,IAAAvE,IACA/zC,QAAA,GACA+zC,GACG,SAAAA,EAAA/+B,GACH++B,EAAAN,SAAAM,EAAAxB,WAAAv9B,IACG,SAAA++B,GACH,OAAAA,EAAAxB,aAEAf,GAAAyD,OAAAzD,GAAAmqC,MAAAjtE,MACA8iC,GAAAyD,OAAAd,IAAA3C,GAAAmqC,MAAAxnC,IAAAzlC,MAsDA,IAAAosE,GAAA,qGACAc,GAAA,EAAApqC,GAAA4pC,OAAA,IAAA5pC,GAAA4pC,OAAA,IAAA5pC,GAAA4pC,OAAA,KAAA5pC,GAAA4pC,OAAA,KAAA5pC,GAAA8pC,OAAA,IAAA9pC,GAAA8pC,OAAA,IAAA9pC,GAAA8pC,OAAA,KAAA9pC,GAAA8pC,OAAA,KAAA9pC,GAAAgqC,KAAA,IAAAhqC,GAAAgqC,KAAA,IAAAhqC,GAAAgqC,KAAA,IAAAhqC,GAAAgqC,KAAA,KAAAhqC,GAAA8G,IAAA,IAAA9G,GAAA8G,IAAA,IAAA9G,GAAAiH,KAAA,IAAAjH,GAAAmqC,MAAA,IAAAnqC,GAAAmqC,MAAA,IAAAnqC,GAAA6G,KAAA,IACAwjC,GAAAzmC,GAAAa,MAAA,iBAAA59C,GACA,OAAAA,EAAA85C,oBACG,gBAAA95C,GACH,OAAAA,EAAAo6C,eACG,kBAAAp6C,GACH,OAAAA,EAAAg6C,eACG,kBAAAh6C,GACH,OAAAA,EAAA45C,aACG,kBAAA55C,GACH,OAAAA,EAAAw5C,UAAA,GAAAx5C,EAAA4H,YACG,kBAAA5H,GACH,UAAAA,EAAA4H,YACG,eAAA5H,GACH,OAAAA,EAAAk6C,aACG,MAAA0N,MACH86B,GAAA,CACArsE,MAAA,SAAA2N,EAAAuP,EAAAC,GACA,OAAA1xB,EAAAuU,MAAA1R,KAAAW,KAAA0e,EAAAwP,MAAAD,EAAAC,GAAAtd,IAAAysE,KAEAt9E,MAAAivB,EACAhvB,KAAAgvB,GAEAivD,GAAAvjC,KAAA7G,GAAA6G,KACA7G,GAAAnlC,MAAA,WACA,OAAAuuE,GAAAzgF,EAAAkS,MAAAqD,SAAAksE,GAAAC,KAEA,IAAAC,GAAAF,GAAArtE,IAAA,SAAApW,GACA,OAAAA,EAAA,GAAAg8C,IAAAh8C,EAAA,MAEA4jF,GAAAvB,GAAAvkC,MAAA,iBAAA59C,GACA,OAAAA,EAAA+5C,uBACG,gBAAA/5C,GACH,OAAAA,EAAAq6C,kBACG,kBAAAr6C,GACH,OAAAA,EAAAi6C,kBACG,kBAAAj6C,GACH,OAAAA,EAAA65C,gBACG,kBAAA75C,GACH,OAAAA,EAAAy5C,aAAA,GAAAz5C,EAAAu5C,eACG,kBAAAv5C,GACH,UAAAA,EAAAu5C,eACG,eAAAv5C,GACH,OAAAA,EAAAm6C,gBACG,MAAAyN,MAWH,SAAA+7B,GAAAlxC,GACA,OAAAmC,KAAAL,MAAA9B,EAAAK,cAKA,SAAA8wC,GAAAnxC,GACA,IAAAp8B,EAAA0Y,EAAA80D,cAEA,OADAxtE,EAAAytE,WAAA/0D,EAAAg1D,MACA1tE,EAAA2tE,yBAAAvxC,EAAAK,cAnBA2wC,GAAAzjC,KAAA7G,GAAA6G,KAAAlE,IACA3C,GAAAnlC,MAAA8nC,IAAA,WACA,OAAAymC,GAAAzgF,EAAAkS,MAAAqD,SAAAosE,GAAAC,KAEA5hF,EAAA+O,KAAAqhC,GAAA,SAAAO,GACA,OAAAA,EAAAK,eAEAhxC,EAAA4oB,KAAA,SAAA0nB,EAAA7tC,GACA,OAAA+tC,GAAAF,EAAA,mBAAAuxC,GAAAp/E,IAKAzC,EAAAolB,KAAA,SAAAkrB,EAAA7tC,GACA,OAAA+tC,GAAAF,EAAA,YAAAwxC,GAAAr/E,IAOAzC,EAAAw2B,IAAA4Z,GAAA,SAAAO,GACA,OAAAA,EAAAwxC,cAEgD39E,KAAAxE,UAAyBD,KAAAD,EAAA,mBAATF,EAAA,GAASA,EAAA7B,KAAAX,EAAAM,EAAAN,EAAAC,GAAAuC,KAAAvC,EAAAD,QAAA0C,GAh1SzE,+UCQApC,EAAA,QACAA,EAAA,2DAEqB0kF,aAYnB,SAAAA,EAAYC,EAAaC,gGAAUC,CAAA/9E,KAAA49E,GACjC59E,KAAKg+E,oBACLh+E,KAAKi+E,aAAeJ,EACpB79E,KAAKk+E,UAAYJ,uCAWhBK,EAAWlgF,GACZ,IAAI03E,EAAO31E,KACXA,KAAKo+E,cAAc/xE,GAAG8xE,EAAW,SAAC11E,EAAGwT,EAAGxiB,GAAP,OAAawE,EAAS1E,KAAKo8E,EAAMltE,EAAGwT,EAAGxiB,oCAUnE0O,EAAWxL,GAChB,KAAM,qFAQU2nD,EAAMC,GACtBvkD,KAAKo+E,cAAcC,KAAK,2BACxBr+E,KAAKs+E,gBAAmBh6B,GAAQC,EAAM,CAACD,EAAMC,GAAM,GACnDvkD,KAAKo+E,cAAcC,KAAK,0BACxBr+E,KAAKo+E,cAAcC,KAAK,0EAUxB,OAAIr+E,KAAKu+E,SACAv+E,KAAKu+E,SAAS99E,UAAU,IAAM,GAE9BT,KAAKs+E,8DAUdt+E,KAAKw+E,kBAAkB,KAAM,2CAU7Bx+E,KAAKo+E,cAAcC,KAAK,oBACxBr+E,KAAKk+E,UAAUO,gBAAgBz+E,KAAKk+E,UAAUQ,UAAU,0BAA0B/rE,UAAU3S,KAAK2+E,mBACjG3+E,KAAKk+E,UAAUO,gBAAgBz+E,KAAKk+E,UAAUQ,UAAU,0BAA0B/rE,UAAU3S,KAAK4+E,iBACjG5+E,KAAKo+E,cAAcC,KAAK,mBACxBr+E,KAAKo+E,cAAcC,KAAK,0DAUxBr+E,KAAKo+E,cAAcC,KAAK,wBACxBr+E,KAAKk+E,UAAUO,gBAAgBz+E,KAAKk+E,UAAUQ,UAAU,0BAA0BG,UAAU7+E,KAAK2+E,mBACjG3+E,KAAKk+E,UAAUO,gBAAgBz+E,KAAKk+E,UAAUQ,UAAU,0BAA0BG,UAAU7+E,KAAK4+E,iBACjG5+E,KAAKo+E,cAAcC,KAAK,uBACxBr+E,KAAKo+E,cAAcC,KAAK,iDASxB,OAAOr+E,KAAKk+E,UAAUQ,UAAU,iDAShC,OAAO1+E,KAAKk+E,UAAUQ,UAAU,mDAShC,OAAO1+E,KAAKk+E,UAAUQ,UAAU,sDAShC,MAA8D,UAAvD1+E,KAAKk+E,UAAUQ,UAAU,0DAShC,OAAO1+E,KAAKk+E,UAAUQ,UAAU,iDAShC,OAAO1+E,KAAKk+E,UAAUQ,UAAU,qDAShC,OAAO1+E,KAAK2+E,mBAAqB,IAAI99E,uCASrC,OAAOb,KAAK4+E,iBAAmB,IAAI/9E,qCASnC,OAAOb,KAAKk+E,UAAUO,gBAAgBz+E,KAAKk+E,UAAUQ,UAAU,iBAAiBhxE,+CAqBjEoxE,EAAkB32E,EAAWxL,GAAO,IAAAoiF,EAAA/+E,KAEnDA,KAAKu+E,SAAWO,MAAqB9+E,KAAKi+E,cACvC91E,UAAUA,GACVxL,MAAMA,GACNmM,MAAM9I,KAAK8I,SACXE,OAAOhJ,KAAKgJ,UACZwJ,OAAOxS,KAAK0N,SACZpJ,OAAOtE,KAAKsE,UACZuI,QAAQ7M,KAAK6M,WACb8H,QAAQ3U,KAAKg/E,aACb78E,EAAE3G,UAAG8E,KAAKoN,QAAQlP,OAAO,CAACwB,KAAKi/E,YAAaj/E,KAAKk/E,aAEpDl/E,KAAKu+E,SAASjrE,QAAQjD,MAAMrQ,KAAKqQ,SAGjCrQ,KAAKu+E,SAASlyE,GAAG,aAAc,kBAAM0yE,EAAKX,cAAcC,KAAK,iBAG7Dr+E,KAAKu+E,SAASlyE,GAAG,WAAY,kBAAM0yE,EAAKI,YAAa,IACrDn/E,KAAKu+E,SAASlyE,GAAG,aAAc,WACzB0yE,EAAKI,aACPJ,EAAKX,cAAcC,KAAK,aACxBU,EAAKI,YAAa,iDAYJ,IAAAC,EAAAp/E,KAClBA,KAAKo+E,cAAgB,IAAIiB,UACzBr/E,KAAKqM,GAAG,yBAA0BrM,KAAKs/E,8BACvCt/E,KAAKqM,GAAG,YAAa,kBAAM+yE,EAAKhB,cAAcC,KAAK,gCACnDr+E,KAAKqM,GAAG,cAAerM,KAAKu/E,oEAW5B,IAAIN,EAAYj/E,KAAKk+E,UAAUQ,UAAU,oBACzC1+E,KAAK2+E,kBAAmC,SAAdM,EAAwBj/E,KAAKk+E,UAAUsB,eAAiBP,EAElF,IAAIC,EAAUl/E,KAAKk+E,UAAUQ,UAAU,kBACvC1+E,KAAK4+E,gBAA+B,SAAZM,EAAsBl/E,KAAKk+E,UAAUuB,aAAeP,oDAW5E,KAAM,iGAWFl/E,KAAKu+E,WACPv+E,KAAKu+E,SAAShhF,YACsB,IAAhCyC,KAAKs+E,gBAAgB7gF,QACvBuC,KAAKu+E,SAAS99E,UAAUxD,KAAK+C,KAAKs+E,iBAEpCt+E,KAAKu+E,SAAS1gF,6BA7RC+/E,8UCXAyB,aAEnB,SAAAA,EAAYK,gGAAQ3B,CAAA/9E,KAAAq/E,GAClBr/E,KAAK2/E,QAAU,wCAWdxB,EAAWlgF,GACZ+B,KAAK2/E,QAAQxB,GAAan+E,KAAK2/E,QAAQxB,IAAc,GACrDn+E,KAAK2/E,QAAQxB,GAAWlhF,KAAKgB,gCAW1BkgF,EAAWyB,EAAMC,EAAMC,IACzB9/E,KAAK2/E,QAAQxB,IAAc,IAAIrnE,QAAQ,SAACipE,GACvCA,GAAMA,EAAGH,EAAMC,EAAMC,wBA7BNT,mBCArBxmF,EAAAD,QAAiBM,EAAQ,GAAeuC,mHCAxCvC,EAAA,IACAA,EAAA,IACA,MAAA8mF,EAAA9mF,EAAA,uCAEa+mF,iBAAiBC,sVCG9BhnF,EAAA,QACAA,EAAA,SACAA,EAAA,MACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,2DAEqB+mF,aA6LnB,SAAAA,EAAYE,GAAmB,IAAdC,EAAc3gF,UAAAhC,OAAA,QAAAlC,IAAAkE,UAAA,GAAAA,UAAA,GAAJ,gGAAIs+E,CAAA/9E,KAAAigF,GAC7BjgF,KAAKqgF,SAAWF,EAChBngF,KAAKsgF,SAAWxmF,OAAOymF,OAAO,GAAIN,EAAeO,gBAAiBJ,GAGlEpgF,KAAKygF,kBAAoB/3D,SAASU,cAAc,OAChDppB,KAAKygF,kBAAkBC,UAAY1gF,KAAK2gF,cACxC3gF,KAAKqgF,SAAS/rD,YAAYt0B,KAAKygF,mBAE/BzgF,KAAK4gF,oBAAsBl4D,SAASU,cAAc,OAClDppB,KAAK4gF,oBAAoBF,UAAY1gF,KAAK6gF,SAC1C7gF,KAAK4gF,oBAAoBvsD,UAAY,GACrCr0B,KAAKygF,kBAAkBnsD,YAAYt0B,KAAK4gF,qBAExC5gF,KAAK8gF,MAAQ,GAEb9gF,KAAK+gF,mBACL/gF,KAAKg+E,2DA3ML,MAAO,sDAIP,OAAO,2CAIP,MAAO,sDAIP,MAAO,6DAKP,OAAO,SAACv1E,EAAGwT,GAAJ,OAAWxT,EAAEu4E,MAAQ/kE,EAAE+kE,MAAS,GAAK,2CAiH5C,MAAO,CACLtE,QAAS,CACPuE,SAAUzlF,UAAG8E,KAAKm8E,OAClB/uE,MAAOlS,UAAG8E,KAAKo8E,QACf/pE,UAAW,SAACjZ,GAAD,OAAOA,EAAEs7C,WAAWt7C,EAAEo6C,aAAe,IAChD+qC,UAAW,SAACnlF,GAAD,OAAOA,EAAEs7C,WAAWt7C,EAAEo6C,aAAe,KAElD8oC,QAAS,CACPqE,SAAUzlF,UAAG8E,KAAKq8E,OAClBjvE,MAAOlS,UAAG8E,KAAKs8E,QACfjqE,UAAW,SAACjZ,GAAD,OAAOA,EAAEk7C,WAAWl7C,EAAEg6C,aAAe,IAChDmrC,UAAW,SAACnlF,GAAD,OAAOA,EAAEk7C,WAAWl7C,EAAEg6C,aAAe,KAElDqpC,MAAO,CACLkE,SAAUzlF,UAAG8E,KAAKu8E,KAClBnvE,MAAOlS,UAAG8E,KAAKy8E,MACfpqE,UAAW,SAACjZ,GAAD,OAAOA,EAAE86C,SAAS96C,EAAE45C,WAAa,IAC5CurC,UAAW,SAACnlF,GAAD,OAAOA,EAAE86C,SAAS96C,EAAE45C,WAAa,KAE9C4C,KAAM,CACJ+qC,SAAUzlF,UAAG8E,KAAKq5C,IAClBjsC,MAAOlS,UAAG8E,KAAK41C,KACfvjC,UAAW,SAACjZ,GAAD,OAAOA,EAAE2H,QAAQ3H,EAAE4H,UAAY,IAC1Cu9E,UAAW,SAACnlF,GAAD,OAAOA,EAAE2H,QAAQ3H,EAAE4H,UAAY,KAE5C04C,MAAO,CACLinC,SAAUzlF,UAAG8E,KAAKw5C,KAClBpsC,MAAOlS,UAAG8E,KAAK05C,MACfrnC,UAAW,SAACjZ,GAAD,OAAOA,EAAE2H,QAAQ3H,EAAE4H,UAAY,IAC1Cu9E,UAAW,SAACnlF,GAAD,OAAOA,EAAE2H,QAAQ3H,EAAE4H,UAAY,KAE5Cg1C,OAAQ,CACN2qC,SAAUzlF,UAAG8E,KAAK08E,MAClBtvE,MAAOlS,UAAG8E,KAAKg2C,OACf3jC,UAAW,SAACjZ,GAAD,OAAOA,EAAEo7C,SAASp7C,EAAEk6C,WAAa,IAC5CirC,UAAW,SAACnlF,GAAD,OAAOA,EAAEo7C,SAASp7C,EAAEk6C,WAAa,KAE9CgG,MAAO,CACLqnC,SAAUzlF,UAAG8E,KAAKo5C,KAClBhsC,MAAOlS,UAAG8E,KAAKs5C,MACfjnC,UAAW,SAACjZ,GAAD,OAAOA,EAAE46C,YAAY56C,EAAE05C,cAAgB,IAClDyrC,UAAW,SAACnlF,GAAD,OAAOA,EAAE46C,YAAY56C,EAAE05C,cAAgB,gDAjJtD,MAAO,CAIL8tC,iBAAkB,SAAAxnF,GAAA,OAAK,GAIvBynF,gBAAiB,SAAAznF,GAAA,OAAKA,EAAE07C,MAIxBgsC,eAAgB,WAGhBC,iBAAkB,MAGlBC,uBAAwB,QAGxBC,cAAe,IAGfC,aAAc,KAGdC,eAAgB,CACdh1E,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAOR80E,iBAAkB,OAClBC,eAAgB,OAGhBC,aAAc,SAGdC,aAAc,EAKdC,cAAe,CAAC,aAKhBC,sBAAuB,QAGvBC,cAAe,GAUfC,iBAAkB,KAIlBC,sBAAuB,SAAAxoF,GAAA,MAAK,0DAoHhByoF,GACdniF,KAAKo+E,cAAcC,KAAK,yBACxBr+E,KAAKoiF,WAAa,IAAIC,UAAUF,EAAsBniF,MACtDA,KAAKo+E,cAAcC,KAAK,mDAYvBF,EAAWlgF,GACZ,IAAI03E,EAAO31E,KACXA,KAAKo+E,cAAc/xE,GAAG8xE,EAAW,SAAC11E,EAAGwT,EAAGxiB,GAAP,OAAawE,EAAS1E,KAAKo8E,EAAMltE,EAAGwT,EAAGxiB,4CAUlC,IAA3BuG,KAAKygF,mBAA+D,MAA1BzgF,KAAKygF,oBACxDzgF,KAAKygF,kBAAkBv2E,gBAChBlK,KAAKygF,qDAYN6B,GACR,OAAOtiF,KAAKsgF,SAASgC,qCAYbA,EAAYC,GACpBviF,KAAKo+E,cAAcC,KAAnB,mBACAr+E,KAAKo+E,cAAcC,KAAnB,mBAA2CiE,GAC3CtiF,KAAKsgF,SAASgC,GAAcC,EAC5BviF,KAAKo+E,cAAcC,KAAnB,kBACAr+E,KAAKo+E,cAAcC,KAAnB,kBAA0CiE,qCAW1C,IAAI5hF,EAASV,KAAKwT,SAAW,WAC3B,OAAO,GAET,OAAOxT,KAAK8gF,MAAMpgF,OAAOA,mCAWnBuB,GACNjC,KAAKo+E,cAAcC,KAAK,iBACxBr+E,KAAK8gF,MAAQ7+E,EACbjC,KAAKo+E,cAAcC,KAAK,0DASxB,IAAImE,EAAiBxiF,KAAKqG,OAAOo8E,oBAEjC,OAA8B,IAA1BD,EAAe/kF,OACV,GAEAuC,KAAK0iF,UAAUhiF,OACpB,SAAChH,GAAD,OAAOA,EAAEsnF,OAASwB,EAAe,IAAM9oF,EAAEsnF,OAASwB,EAAe,+CAcrDl+B,EAAMC,GACtBvkD,KAAKqG,OAAOm4E,kBAAkBl6B,EAAMC,+CAWpC,OAAOvkD,KAAKqG,OAAOo8E,kEAUnBziF,KAAKqG,OAAOs8E,wDAWJjiF,GACRV,KAAKo+E,cAAcC,KAAK,mBACxBr+E,KAAKwT,QAAU9S,EACfV,KAAKo+E,cAAcC,KAAK,sDAWxB,OAAOr+E,KAAKwT,8CAWZxT,KAAK4iF,UAAU,uCAWf5iF,KAAKo+E,cAAcC,KAAK,gBACxBr+E,KAAKqG,OAAO1I,OAAOqC,KAAKsG,WAAYtG,KAAKuG,QACrCvG,KAAKoiF,YACPpiF,KAAKoiF,WAAWzkF,OAAOqC,KAAKsG,mDAY9B,IAAIu8E,EAAmB7iF,KAAK0iF,UAAUh5E,KAAK1J,KAAK8iF,sBAAsB,GACtE,OAAOD,EAAmBA,EAAiB7B,MAAQ,IAAIngF,0CAWvD,IAAIoB,EAAOjC,KAAK0iF,UAAUh5E,KAAK1J,KAAK8iF,sBAChCC,EAAiB9gF,EAAKA,EAAKxE,OAAS,GACxC,OAAOslF,EAAiBA,EAAe/B,MAAQ,IAAIngF,0CAWnDb,KAAKqG,OAAO28E,sDAWZhjF,KAAKqG,OAAO48E,6DAmBZ,IAAItN,EAAO31E,KACXA,KAAKo+E,cAAgB,IAAIiB,UAEzBr/E,KAAKqM,GAAG,eAAgBrM,KAAKkjF,iBAC7BljF,KAAKqM,GAAG,eAAgBrM,KAAKmjF,oBAC7BnjF,KAAKqM,GAAG,eAAgB,kBAAMspE,EAAKtvE,OAAO+8E,qBAC1CpjF,KAAKqM,GAAG,kCAAmCspE,EAAKoL,kBAGhD,IAAIsC,EAAgB,WAClB1N,EAAKyI,cAAcC,KAAK,iBACxB1I,EAAKtvE,OAAO+8E,oBAEdpjF,KAAKqM,GAAG,kCAAmCg3E,GAC3CrjF,KAAKqM,GAAG,gCAAiCg3E,GAGzCrjF,KAAKqG,OAAOgG,GAAG,cAAe,kBAAMspE,EAAKyI,cAAcC,KAAK,iBAC5Dr+E,KAAKqG,OAAOgG,GAAG,0BAA2B,kBAAMspE,EAAKyI,cAAcC,KAAK,6BACxEr+E,KAAKqG,OAAOgG,GAAG,yBAA0B,kBAAMspE,EAAKyI,cAAcC,KAAK,4BACvEr+E,KAAKqG,OAAOgG,GAAG,mBAAoB,kBAAMspE,EAAKyI,cAAcC,KAAK,sBACjEr+E,KAAKqG,OAAOgG,GAAG,uBAAwB,kBAAMspE,EAAKyI,cAAcC,KAAK,0BACrEr+E,KAAKqG,OAAOgG,GAAG,kBAAmB,kBAAMspE,EAAKyI,cAAcC,KAAK,qBAChEr+E,KAAKqG,OAAOgG,GAAG,sBAAuB,kBAAMspE,EAAKyI,cAAcC,KAAK,yBACpEr+E,KAAKqG,OAAOgG,GAAG,gBAAiB,kBAAMspE,EAAKyI,cAAcC,KAAK,mBAC9Dr+E,KAAKqG,OAAOgG,GAAG,YAAa,SAAC/R,GAAD,OAAOq7E,EAAK2N,iBAAiBhpF,KACzD0F,KAAKqG,OAAOgG,GAAG,YAAa,kBAAMspE,EAAK4N,qBACvCvjF,KAAKqG,OAAOgG,GAAG,6BAA8B,kBAAMspE,EAAKyI,cAAcC,KAAK,2EAU3Er+E,KAAKo+E,cAAcC,KAAK,YAAar+E,KAAKyiF,oBAAqBziF,KAAKwjF,4DASrDt1D,GACfluB,KAAKo+E,cAAcC,KAAK,YAAanwD,EAAOjsB,KAAKtH,IAAKqF,KAAKsG,WAAW5F,OAAOwtB,EAAOjsB,KAAKtH,KAAK8R,IAAIyhB,EAAOjsB,KAAK5H,mDAU9G,IAAIykF,EAEJ,OAAQ9+E,KAAKsgF,SAASe,kBACpB,IAAK,OACHvC,EAAmB2E,UACnB,MACF,IAAK,OACH3E,EAAmB4E,UACnB,MACF,QACE5E,EAAmB6E,UAGvB3jF,KAAKqG,OAAS,IAAIy4E,EAAiB9+E,KAAKqgF,SAASt2E,GAAI/J,gDAYrD,GAAIA,KAAK8gF,MAEP,IADA,IAAIzgF,EAAa7E,UAAG8E,KAAKC,OAAOP,KAAKsgF,SAASc,gBACrChoF,EAAI,EAAGA,EAAI4G,KAAK8gF,MAAMrjF,OAAQrE,IACrC4G,KAAK8gF,MAAM1nF,GAAG4nF,MAAQ3gF,EAAW4tC,MAAMjuC,KAAKsgF,SAASa,gBAAgBnhF,KAAK8gF,MAAM1nF,kDAajE,IAAA2lF,EAAA/+E,KACfA,KAAK8gF,QACP9gF,KAAK4jF,MAAO,EAAAC,EAAAhd,SAAY7mE,KAAK0iF,WAC7B1iF,KAAKsG,WAAatG,KAAK4jF,KAAKz7E,UAAU,SAAAzO,GAAA,OAAKqlF,EAAKN,gBAAgBM,EAAKuB,SAASsB,cAAcX,SAASvnF,EAAEsnF,SACvGhhF,KAAKuG,OAASvG,KAAKsG,WAAW3J,QAAQmnF,UAAU9jF,KAAKsgF,SAASY,sDAYhE,SAAUlhF,KAAK+jF,MAAO/jF,KAAKgkF,SAAW,uBA1kBrB/D,oBChBrB,SAAArnF,GAEA,SAAAqrF,EAAAvqF,GACA,OAAAA,EAIA,SAAAsyB,EAAA9C,EAAAzmB,GACA,QAAArJ,EAAA,EAAAyB,EAAA4H,EAAAhF,OAAAmiC,EAAA,IAAAj/B,MAAA9F,GAAwDzB,EAAAyB,IAAOzB,EAC/DwmC,EAAAxmC,GAAA8vB,EAAAzmB,EAAArJ,IAEA,OAAAwmC,EAVAnkC,EAAAE,QAAA,SAIAF,EAAAuwB,UAQA,IAAAP,EAAAhwB,EAAAgwB,OAAAy4D,EAAAD,GAIA,SAAAC,EAAAj5E,GA2BA,SAAAygB,EAAAjjB,EAAAtG,EAAAsoB,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAvoB,EAAA8I,EAAAxC,EAAAkiB,IAAAD,EAAAC,EACAF,EAAAE,EAAA,EAEA,OAAAF,EAKA,OAFAiB,EAAAhf,MAAAgf,EACAA,EAAA9e,KAzBA,SAAAnE,EAAAtG,EAAAsoB,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAzf,EAAAxC,EAAAkiB,IAAAxoB,EAAAsoB,EAAAE,EAAA,EACAD,EAAAC,EAEA,OAAAF,GAoBAiB,EAMA,SAAAy4D,EAAAl5E,GAKA,SAAAm5E,EAAA37E,EAAAgiB,EAAAC,GAGA,IAFA,IAAA7vB,EAAA6vB,EAAAD,EACArxB,EAAA,GAAAyB,IAAA,KACAzB,EAAA,GAAAirF,EAAA57E,EAAArP,EAAAyB,EAAA4vB,GACA,OAAAhiB,EAeA,SAAA47E,EAAA57E,EAAArP,EAAAyB,EAAA4vB,GAIA,IAHA,IAEAxI,EAFAvoB,EAAA+O,IAAAgiB,EAAArxB,GACA+I,EAAA8I,EAAAvR,IAEAuoB,EAAA7oB,GAAA,IAAAyB,IACAonB,EAAApnB,GAAAoQ,EAAAxC,EAAAgiB,EAAAxI,IAAAhX,EAAAxC,EAAAgiB,EAAAxI,EAAA,KAAAA,MACA9f,GAAA8I,EAAAxC,EAAAgiB,EAAAxI,OACAxZ,EAAAgiB,EAAArxB,GAAAqP,EAAAgiB,EAAAxI,GACA7oB,EAAA6oB,EAEAxZ,EAAAgiB,EAAArxB,GAAAM,EAIA,OADA0qF,EAAA16E,KAvBA,SAAAjB,EAAAgiB,EAAAC,GAGA,IAFA,IACApwB,EADAO,EAAA6vB,EAAAD,IAEA5vB,EAAA,GAAAP,EAAAmO,EAAAgiB,GAAAhiB,EAAAgiB,GAAAhiB,EAAAgiB,EAAA5vB,GAAA4N,EAAAgiB,EAAA5vB,GAAAP,EAAA+pF,EAAA57E,EAAA,EAAA5N,EAAA4vB,GACA,OAAAhiB,GAoBA27E,EAMA,SAAAE,EAAAr5E,GACA,IAAAm5E,EAAAD,EAAAl5E,GA6BA,OAvBA,SAAAxC,EAAAgiB,EAAAC,EAAA5kB,GACA,IACApC,EACAtK,EAEAM,EAJAqxE,EAAA,IAAApqE,MAAAmF,EAAAzH,KAAAqF,IAAAgnB,EAAAD,EAAA3kB,IAMA,IAAA1M,EAAA,EAAeA,EAAA0M,IAAO1M,EAAA2xE,EAAA3xE,GAAAqP,EAAAgiB,KAGtB,GAFA25D,EAAArZ,EAAA,EAAAjlE,GAEA2kB,EAAAC,EAAA,CACAhnB,EAAAuH,EAAA8/D,EAAA,IACA,GACA9/D,EAAAvR,EAAA+O,EAAAgiB,IAAA/mB,IACAqnE,EAAA,GAAArxE,EACAgK,EAAAuH,EAAAm5E,EAAArZ,EAAA,EAAAjlE,GAAA,aAEO2kB,EAAAC,GAGP,OAAAqgD,GASA,SAAAwZ,EAAAt5E,GAYA,OAVA,SAAAxC,EAAAgiB,EAAAC,GACA,QAAAtxB,EAAAqxB,EAAA,EAAwBrxB,EAAAsxB,IAAQtxB,EAAA,CAChC,QAAAgK,EAAAhK,EAAAkB,EAAAmO,EAAArP,GAAA+I,EAAA8I,EAAA3Q,GAAyC8I,EAAAqnB,GAAAxf,EAAAxC,EAAArF,EAAA,IAAAjB,IAA2BiB,EACpEqF,EAAArF,GAAAqF,EAAArF,EAAA,GAEAqF,EAAArF,GAAA9I,EAEA,OAAAmO,GAYA,SAAA+7E,EAAAv5E,GACA,IAAAw5E,EAAAF,EAAAt5E,GAEA,SAAAvB,EAAAjB,EAAAgiB,EAAAC,GACA,OAAAA,EAAAD,EAAAi6D,EACAD,EAIA,SAAAh8E,EAAAgiB,EAAAC,GAEA,IAaApwB,EAbAqqF,GAAAj6D,EAAAD,GAAA,IACAqB,EAAArB,EAAAk6D,EACAC,EAAAl6D,EAAA,EAAAi6D,EACAE,EAAAp6D,EAAAC,EAAA,KACAo6D,EAAAD,EAAAF,EACAI,EAAAF,EAAAF,EAEA10D,EAAAxnB,EAAAqjB,GAAA0Q,EAAAvxB,EAAAglB,GACA+0D,EAAAv8E,EAAAq8E,GAAAx6B,EAAAr/C,EAAA+5E,GACAC,EAAAx8E,EAAAo8E,GAAA1xB,EAAAloD,EAAAg6E,GACAC,EAAAz8E,EAAAs8E,GAAAI,EAAAl6E,EAAAi6E,GACAE,EAAA38E,EAAAm8E,GAAAS,EAAAp6E,EAAAm6E,GAKA5oD,EAAA8tB,IAAAhwD,EAAA21B,IAAA+0D,IAAA1qF,IAAAkiC,IAAA8tB,IAAAhwD,GACA6qF,EAAAE,IAAA/qF,EAAA4qF,IAAAE,IAAA9qF,IAAA6qF,IAAAE,IAAA/qF,GACAkiC,EAAA22B,IAAA74D,EAAA21B,IAAAg1D,IAAA3qF,IAAAkiC,IAAA22B,IAAA74D,GACAgwD,EAAA6I,IAAA74D,EAAA0qF,IAAAC,IAAA3qF,IAAAgwD,IAAA6I,IAAA74D,GACAkiC,EAAA2oD,IAAA7qF,EAAA21B,IAAAi1D,IAAA5qF,IAAAkiC,IAAA2oD,IAAA7qF,GACA64D,EAAAgyB,IAAA7qF,EAAA2qF,IAAAC,IAAA5qF,IAAA64D,IAAAgyB,IAAA7qF,GACAgwD,EAAA+6B,IAAA/qF,EAAA0qF,IAAAI,IAAA9qF,IAAAgwD,IAAA+6B,IAAA/qF,GACAgwD,EAAA6I,IAAA74D,EAAA0qF,IAAAC,IAAA3qF,IAAAgwD,IAAA6I,IAAA74D,GACA6qF,EAAAE,IAAA/qF,EAAA4qF,IAAAE,IAAA9qF,IAAA6qF,IAAAE,IAAA/qF,GAEA,IAAAgrF,EAAAN,EAAAO,EAAAj7B,EACAk7B,EAAAN,EAAAO,EAAAN,EAIA18E,EAAAqjB,GAAAmE,EACAxnB,EAAAq8E,GAAAr8E,EAAAgiB,GACAhiB,EAAAo8E,GAAAI,EACAx8E,EAAAs8E,GAAAt8E,EAAAiiB,EAAA,GACAjiB,EAAAm8E,GAAAQ,EAEA,IAAAM,EAAAj7D,EAAA,EACAk7D,EAAAj7D,EAAA,EAKAk7D,EAAAL,GAAAE,GAAAF,GAAAE,EACA,GAAAG,EAgBA,QAAA9/E,EAAA4/E,EAAwB5/E,GAAA6/E,IAAY7/E,EAAA,CACpC,IAAA+/E,EAAAp9E,EAAA3C,GAAAggF,EAAA76E,EAAA46E,GACA,GAAAC,EAAAP,EACAz/E,IAAA4/E,IACAj9E,EAAA3C,GAAA2C,EAAAi9E,GACAj9E,EAAAi9E,GAAAG,KAEAH,OACS,GAAAI,EAAAP,EAST,QACA,IAAAQ,EAAA96E,EAAAxC,EAAAk9E,IACA,KAAAI,EAAAR,GAAA,CAKa,GAAAQ,EAAAR,EAAA,CAEb98E,EAAA3C,GAAA2C,EAAAi9E,GACAj9E,EAAAi9E,KAAAj9E,EAAAk9E,GACAl9E,EAAAk9E,KAAAE,EACA,MAEAp9E,EAAA3C,GAAA2C,EAAAk9E,GACAl9E,EAAAk9E,KAAAE,EAGA,MAfAF,UAuCA,QAAA7/E,EAAA4/E,EAAwB5/E,GAAA6/E,EAAY7/E,IAAA,CACpC,IAAA+/E,EAAAp9E,EAAA3C,GAAAggF,EAAA76E,EAAA46E,GACA,GAAAC,EAAAP,EACAz/E,IAAA4/E,IACAj9E,EAAA3C,GAAA2C,EAAAi9E,GACAj9E,EAAAi9E,GAAAG,KAEAH,OAEA,GAAAI,EAAAL,EACA,QACA,IAAAM,EAAA96E,EAAAxC,EAAAk9E,IACA,KAAAI,EAAAN,GAAA,CAQAM,EAAAR,GAEA98E,EAAA3C,GAAA2C,EAAAi9E,GACAj9E,EAAAi9E,KAAAj9E,EAAAk9E,GACAl9E,EAAAk9E,KAAAE,IAGAp9E,EAAA3C,GAAA2C,EAAAk9E,GACAl9E,EAAAk9E,KAAAE,GAEA,MAhBA,KADAF,EACA7/E,EAAA,OA2CA,GAdA2C,EAAAgiB,GAAAhiB,EAAAi9E,EAAA,GACAj9E,EAAAi9E,EAAA,GAAAJ,EACA78E,EAAAiiB,EAAA,GAAAjiB,EAAAk9E,EAAA,GACAl9E,EAAAk9E,EAAA,GAAAH,EAQA97E,EAAAjB,EAAAgiB,EAAAi7D,EAAA,GACAh8E,EAAAjB,EAAAk9E,EAAA,EAAAj7D,GAEAk7D,EAGA,OAAAn9E,EAOA,GAAAi9E,EAAA55D,GAAA65D,EAAAf,EAAA,CAEA,IADA,IAAAoB,GACAA,EAAA/6E,EAAAxC,EAAAi9E,MAAAH,GAAAS,GAAAT,KAAAG,EACA,MAAAK,EAAA96E,EAAAxC,EAAAk9E,MAAAF,GAAAM,GAAAN,KAAAE,EAkBA,QAAA7/E,EAAA4/E,EAAwB5/E,GAAA6/E,EAAY7/E,IAAA,CACpC,IAAA+/E,EAAAp9E,EAAA3C,GAAAggF,EAAA76E,EAAA46E,GACA,GAAAC,GAAAP,GAAAO,GAAAP,EACAz/E,IAAA4/E,IACAj9E,EAAA3C,GAAA2C,EAAAi9E,GACAj9E,EAAAi9E,GAAAG,GAEAH,SAEA,GAAAI,GAAAL,GAAAK,GAAAL,EACA,QACA,IAAAM,EAAA96E,EAAAxC,EAAAk9E,IACA,KAAAI,GAAAN,GAAAM,GAAAN,GAAA,CAQAM,EAAAR,GAEA98E,EAAA3C,GAAA2C,EAAAi9E,GACAj9E,EAAAi9E,KAAAj9E,EAAAk9E,GACAl9E,EAAAk9E,KAAAE,IAGAp9E,EAAA3C,GAAA2C,EAAAk9E,GACAl9E,EAAAk9E,KAAAE,GAEA,MAhBA,KADAF,EACA7/E,EAAA,QAqCA,OAAA4D,EAAAjB,EAAAi9E,EAAAC,EAAA,KAvQAl9E,EAAAgiB,EAAAC,GA0QA,OAAAhhB,EAnaA+hB,EAAAhiB,GAAAy6E,GA0CAzoF,EAAA2oF,KAAAD,EAAAF,IAEAx6E,GAAA06E,GA0CA1oF,EAAAwqF,WAAA3B,EAAAL,IAEAx6E,GAAA66E,GAkCA7oF,EAAAgpF,cAAAF,EAAAN,IAEAx6E,GAAA86E,GAmBA9oF,EAAA+N,UAAAg7E,EAAAP,IAEAx6E,GAAA+6E,EAqRA,IAAAE,EAAA,GACAwB,EAAAC,EACAC,EAAAD,EACAE,EAAAF,EACAG,EAiCA,SAAAp9D,EAAAzrB,GACA,IAAA5C,EAAAquB,EAAAzrB,OACA,KAAA5C,EAAA4C,GAAAyrB,EAAAruB,KAAA,EACA,OAAAquB,GAnCAq9D,EAsCA,SAAAr9D,EAAApgB,GACA,GAAAA,EAAA,aAAAqkB,MAAA,wBACA,OAAAjE,GAdA,SAAAi9D,EAAAtrF,GAEA,IADA,IAAAquB,EAAA,IAAAvoB,MAAA9F,GAAAzB,GAAA,IACAA,EAAAyB,GAAAquB,EAAA9vB,GAAA,EACA,OAAA8vB,EA6BA,SAAAs9D,EAAAjwE,GACA,SAAAA,EAAA9Y,QAEA,SAAAgpF,IACA,YAEA,SAAAC,IACA,SAEA,SAAAC,EAAAzrF,GACA,OAAAA,EAAA,EAGA,SAAA0rF,EAAA1rF,GACA,OAAAA,EAAA,EAGA,SAAA2rF,EAAA57E,GACA,gBAAA/P,EAAA8vB,GACA,OAAA9vB,IAAA+P,EAAA+f,IAIA,SAAA87D,EAAA77E,GACA,gBAAA/P,EAAA8vB,GACA,OAAA9vB,EAAA+P,EAAA+f,IAKA,SAAAvvB,IACA,IAAAA,EAAA,CACAwF,MACAiJ,OAkCA,WAGA,IAFA,IAAA68E,EAAAC,EAAAnsF,KACAosF,EAAA,GACA7tF,EAAA,EAAAgK,EAAA,EAA0BhK,EAAAyB,IAAOzB,EACjCqH,EAAArH,GAAA2tF,EAAA3tF,GAAAgK,IACA6jF,EAAAhqF,KAAA7D,GAIA8tF,EAAApwE,QAAA,SAAAzd,GAAyCA,EAAA,KAAA4tF,KAGzCE,EAAArwE,QAAA,SAAAzd,GAA6CA,EAAA0tF,KAG7C,QAAAjhF,EAAA1M,EAAA,EAAAgK,EAAA,EAA6BhK,EAAAyB,IAAOzB,GACpC0M,EAAArF,EAAArH,MACAA,IAAAgK,IAAA3C,EAAA2C,GAAA0C,EAAA7D,EAAAmB,GAAAnB,EAAA7I,MACAgK,GAGAnB,EAAAxE,OAAA2F,EACA,KAAAvI,EAAAuI,GAAA3C,IAAA5F,GAAA,GAvDAsN,UA2DA,SAAA9N,GACA,IAgBAkc,EACA9T,EACA2kF,EACAL,EAGAM,EAtBAl/E,EAAA,CACAzH,OA4LA,SAAAqP,GACA,aAAAA,EACAxS,IAAAoD,MAAA0sB,QAAAtd,GACAu3E,EAAAv3E,GAAA,mBAAAA,EACA3H,EAAA2H,GACAw3E,EAAAx3E,IAhMAw3E,cACAD,cACAl/E,iBACA7K,YACAkP,IA6OA,SAAA3G,GACA,IAEA1C,EAFA8lB,EAAA,GACA9vB,EAAAouF,EAGA,OAAApuF,GAAAquF,GAAA3hF,EAAA,GACArF,EAAA2C,EAAAX,EAAArJ,MACA8vB,EAAAjsB,KAAAgF,EAAAmB,MACA0C,GAIA,OAAAojB,GAxPAvc,OA6PA,SAAA7G,GACA,IAEA1C,EAFA8lB,EAAA,GACA9vB,EAAAquF,EAGA,KAAAruF,EAAAouF,GAAA1hF,EAAA,GACArF,EAAA2C,EAAAX,EAAArJ,MACA8vB,EAAAjsB,KAAAgF,EAAAmB,MACA0C,GAEA1M,IAGA,OAAA8vB,GAzQAvsB,QACAumB,SAgnBA,WACA,IAAA5a,EAAA3L,EAAA8pF,GAAAjjF,EAAA8E,EAAA9E,IAOA,cANA8E,EAAA9E,WACA8E,EAAAmE,WACAnE,EAAAgO,aACAhO,EAAAo/E,oBACAp/E,EAAA3F,KACA2F,EAAAjO,MAAA,WAA4B,OAAAmJ,IAAA,GAAAnJ,OAC5BiO,GAvnBAq/E,UACAz9E,OAAAy9E,GAGAC,GAAApuF,MACA4tE,GAAAwgB,EAKAl+E,EAAA86E,EAAA,SAAAprF,GAAyC,OAAAguF,EAAAhuF,KACzCyuF,EAAArB,EAEAsB,EAAA,GACAC,EAAA,GACAN,EAAA,EACAD,EAAA,EAKAQ,EAAA/yB,QAAAgzB,GACAD,EAAA/qF,KAAAirF,GAEAf,EAAAlqF,KAAAkrF,GAIA3uF,GAAAouF,GACA9wC,GAAA,IAAA8wC,EAAApuF,IAAA,GAAAs9C,MACAr2C,EAAA8lF,EAAA9lF,EAAAq2C,IAAA,IAOA,SAAAmxC,EAAAG,EAAAzzD,EAAA03B,GAGA+6B,EAAAgB,EAAAx4E,IAAAvV,GACA0sF,EAAAr9E,EAuuBA,SAAA7O,GAEA,IADA,IAAAkV,EAAAi3E,EAAAnsF,KACAzB,GAAA,IAAkBA,EAAAyB,GAASkV,EAAA3W,KAC3B,OAAA2W,EA1uBAs4E,CAAAh8B,GAAA,EAAAA,GACA+6B,EAAAp7D,EAAAo7D,EAAAL,GAGA,IAAA3tF,EAAAmmD,EAAAsoC,EAAAT,GAAAkB,EAAA/oC,EAAA,GAAAgpC,EAAAhpC,EAAA,GACA,GAAA8nC,EACA,IAAAjuF,EAAA,EAAmBA,EAAAizD,IAAQjzD,EAC3BiuF,EAAAD,EAAAhuF,QAAAqH,EAAAsmF,EAAA3tF,GAAAu7B,IAAAizD,OAEO,CACP,IAAAxuF,EAAA,EAAmBA,EAAAkvF,IAASlvF,EAAAqH,EAAAsmF,EAAA3tF,GAAAu7B,IAAAizD,EAC5B,IAAAxuF,EAAAmvF,EAAqBnvF,EAAAizD,IAAQjzD,EAAAqH,EAAAsmF,EAAA3tF,GAAAu7B,IAAAizD,EAK7B,IAAAjzD,EAKA,OAJApe,EAAA6wE,EACA3kF,EAAAskF,EACAU,EAAAa,OACAd,EAAAe,GAIA,IAAAC,EAAAjyE,EACAkyE,EAAAhmF,EACAopB,EAAA,EACAC,EAAA,EAOA,IAJAvV,EAAA,IAAA5V,MAAA9F,GACA4H,EAAAukF,EAAAnsF,KAGAzB,EAAA,EAAiByyB,EAAA8I,GAAA7I,EAAAugC,IAAoBjzD,EACrCovF,EAAA38D,GAAAu7D,EAAAt7D,IACAvV,EAAAnd,GAAAovF,EAAA38D,GACAppB,EAAArJ,GAAAqvF,EAAA58D,OAEAtV,EAAAnd,GAAAguF,EAAAt7D,GACArpB,EAAArJ,GAAA2tF,EAAAj7D,KAAA6I,GAKA,KAAY9I,EAAA8I,IAAS9I,IAAAzyB,EACrBmd,EAAAnd,GAAAovF,EAAA38D,GACAppB,EAAArJ,GAAAqvF,EAAA58D,GAIA,KAAYC,EAAAugC,IAASvgC,IAAA1yB,EACrBmd,EAAAnd,GAAAguF,EAAAt7D,GACArpB,EAAArJ,GAAA2tF,EAAAj7D,GAAA6I,EAIA4qB,EAAAsoC,EAAAtxE,GAAAkxE,EAAAloC,EAAA,GAAAioC,EAAAjoC,EAAA,GAIA,SAAA2oC,EAAAE,EAAAzzD,EAAA03B,GACAy7B,EAAAhxE,QAAA,SAAAzd,GAA0CA,EAAA+tF,EAAAL,EAAApyD,EAAA03B,KAC1C+6B,EAAAL,EAAA,KAGA,SAAAoB,EAAAO,GACA,QAAA5iF,EAAA1M,EAAA,EAAAgK,EAAA,EAA+BhK,EAAAyB,IAAOzB,EACtCqH,EAAAqF,EAAArD,EAAArJ,MACAA,IAAAgK,IAAAmT,EAAAnT,GAAAmT,EAAAnd,IACAqJ,EAAAW,GAAAslF,EAAA5iF,KACA1C,GAIA,IADAmT,EAAA9Y,OAAA2F,EACAA,EAAAvI,GAAA4H,EAAAW,KAAA,EAGA,IAAAm8C,EAAAsoC,EAAAtxE,GACAkxE,EAAAloC,EAAA,GAAAioC,EAAAjoC,EAAA,GAKA,SAAAopC,EAAAppC,GACA,IAAA+oC,EAAA/oC,EAAA,GACAgpC,EAAAhpC,EAAA,GAEA,GAAA8nC,EAKA,OAJAA,EAAA,KACAuB,EAAA,SAAAlvF,EAAAN,GAA4C,OAAAkvF,GAAAlvF,KAAAmvF,IAC5Cd,EAAAa,EACAd,EAAAe,EACApgF,EAGA,IAAA/O,EACAgK,EACA0C,EACA+iF,EAAA,GACA5B,EAAA,GAGA,GAAAqB,EAAAb,EACA,IAAAruF,EAAAkvF,EAAAllF,EAAA/E,KAAAqF,IAAA+jF,EAAAc,GAA6CnvF,EAAAgK,IAAOhK,EACpDqH,EAAAqF,EAAArD,EAAArJ,KAAAwuF,EACAiB,EAAA5rF,KAAA6I,QAEO,GAAAwiF,EAAAb,EACP,IAAAruF,EAAAquF,EAAArkF,EAAA/E,KAAAqF,IAAA4kF,EAAAd,GAA6CpuF,EAAAgK,IAAOhK,EACpDqH,EAAAqF,EAAArD,EAAArJ,KAAAwuF,EACAX,EAAAhqF,KAAA6I,GAKA,GAAAyiF,EAAAf,EACA,IAAApuF,EAAAiF,KAAAiF,IAAAglF,EAAAd,GAAApkF,EAAAmlF,EAA6CnvF,EAAAgK,IAAOhK,EACpDqH,EAAAqF,EAAArD,EAAArJ,KAAAwuF,EACAiB,EAAA5rF,KAAA6I,QAEO,GAAAyiF,EAAAf,EACP,IAAApuF,EAAAiF,KAAAiF,IAAAmkF,EAAAc,GAAAnlF,EAAAokF,EAA6CpuF,EAAAgK,IAAOhK,EACpDqH,EAAAqF,EAAArD,EAAArJ,KAAAwuF,EACAX,EAAAhqF,KAAA6I,GAOA,OAHA2hF,EAAAa,EACAd,EAAAe,EACArB,EAAApwE,QAAA,SAAAzd,GAA2CA,EAAAuuF,EAAAiB,EAAA5B,KAC3C9+E,EAgBA,SAAAo/E,EAAAltF,GACA,OAAAsuF,GAAAd,EArTA,SAAAp8D,EAAApxB,GACA,gBAAAkc,GACA,IAAA1b,EAAA0b,EAAA9Y,OACA,OAAAguB,EAAA7e,KAAA2J,EAAAlc,EAAA,EAAAQ,GAAA4wB,EAAA/e,MAAA6J,EAAAlc,EAAA,EAAAQ,KAkTAiuF,CAAAr9D,EAAApxB,IAAAkc,IAKA,SAAA+wE,EAAAv3E,GACA,OAAA44E,GAAAd,EApTA,SAAAp8D,EAAA1b,GACA,IAAArM,EAAAqM,EAAA,GACAzM,EAAAyM,EAAA,GACA,gBAAAwG,GACA,IAAA1b,EAAA0b,EAAA9Y,OACA,OAAAguB,EAAA7e,KAAA2J,EAAA7S,EAAA,EAAA7I,GAAA4wB,EAAA7e,KAAA2J,EAAAjT,EAAA,EAAAzI,KA+SAkuF,CAAAt9D,EAAA1b,IAAAwG,IAIA,SAAAhZ,IACA,OAAAorF,GAAAd,EAAArB,GAAAjwE,IAIA,SAAAnO,EAAA6C,GAQA,OAPA48E,EAAArB,EAEAoC,EAAAvB,EAAAp8E,GAEAw8E,EAAA,EACAD,EAAA3sF,EAEAsN,EAGA,SAAAygF,EAAA39E,GACA,IAAA7R,EACA0M,EACA3D,EACA0mF,EAAA,GACA5B,EAAA,GAEA,IAAA7tF,EAAA,EAAiBA,EAAAyB,IAAOzB,IACxBqH,EAAAqF,EAAArD,EAAArJ,IAAAwuF,MAAAzlF,EAAA8I,EAAAsL,EAAAnd,SACA+I,GAAA1B,EAAAqF,IAAAshE,EAAAyhB,EAAA5rF,KAAA6I,KACArF,EAAAqF,IAAA8hF,EAAAX,EAAAhqF,KAAA6I,KAGAohF,EAAApwE,QAAA,SAAAzd,GAA2CA,EAAAuuF,EAAAiB,EAAA5B,KAuC3C,SAAAtqF,EAAAhC,GACA,IAAAgC,EAAA,CACA8P,IAwSA,SAAA3G,GACA,IAAA2G,EAAAzI,EAAAR,IAAA,EAAAqU,EAAApa,OAAAqI,GACA,OAAAs+E,EAAA16E,KAAA+C,EAAA,EAAAA,EAAAhP,SAzSA+F,MACA6jE,SACA2hB,cACAlF,UAyTA,SAAAzpF,GACA,OAAAgtE,EAAAwf,EAAAxsF,GAAAysF,EAAAzsF,GAAAqsF,IAzTApwE,QACAoxE,aAoUA,WACA,OAAApxE,EAAA2tE,IApUAthF,KAwUA,WACA,OAAAmD,GAxUA6hF,UACAz9E,OAAAy9E,GAIAI,EAAA9qF,KAAAN,GAEA,IAAAkb,EACAZ,EAIAjT,EACAogF,EACA6E,EACAC,EACAC,EAPAC,EAAA,EACAC,EAAAC,EAAAF,GACAtjF,EAAA,EAMAkvB,EAAAyxD,EACAxrC,EAAAwrC,EACA8C,GAAA,EACArmE,EAAAvoB,IAAA8rF,EAgBA,SAAAxlF,EAAAmmF,EAAAL,EAAApyD,EAAA03B,GACA,IAOAjpD,EACAomF,EACAnjE,EACAmW,EACAl0B,EACAnG,EAZAsnF,EAAA5xE,EACA6wE,EAAA1B,EAAAlhF,EAAAujF,GACApoF,EAAAgoF,EACAS,EAAAP,EACAQ,EAAA7jF,EACA+lB,EAAA,EACAC,EAAA,EAoBA,IAXAy9D,IAAAtoF,EAAAyoF,EAAAjD,GAIA5uE,EAAA,IAAAlX,MAAAmF,KAAA,EACAmR,EAAA0yE,EAAA,EAAArD,EAAArvE,EAAApc,GAAAmsF,EAAAnsF,EAAAwuF,GAGAM,IAAAtjE,GAAAmjE,EAAAC,EAAA,IAAA9uF,KAGAmxB,EAAAugC,MAAA7vB,EAAA7hC,EAAAysF,EAAAt7D,MAAA0Q,MAAA1Q,EAGA,KAAAA,EAAAugC,GAAA,CAqBA,IAjBAm9B,GAAAnjE,GAAAmW,GACAl0B,EAAAkhF,EAAArnF,EAAAkkB,EAGAqiE,EAAA78D,GAAA/lB,GAGA0jF,EAAAC,IAAA59D,MAAAxF,EAAAmjE,EAAA7uF,OAEA2N,EAAA,CAAiB3N,IAAA6hC,EAAAniC,MAAAqvF,KAA0BvnF,EAAAq6B,GAI3C3kB,EAAA/R,GAAAwC,IAIAk0B,EAAAr6B,IACA8U,EAAA7T,EAAA2jF,EAAAj7D,GAAA6I,GAAA7uB,EACArF,EAAA2C,GAAAgkE,IAAA9+D,EAAAjO,MAAA4G,EAAAqH,EAAAjO,MAAA4H,EAAAmB,OACA0oB,GAAAugC,KACA7vB,EAAA7hC,EAAAysF,EAAAt7D,IAGA89D,IAMA,KAAA/9D,EAAA89D,GACA9xE,EAAA6wE,EAAA78D,GAAA/lB,GAAA2jF,EAAA59D,KACA+9D,IAKA,GAAA9jF,EAAA+lB,EAAA,IAAAA,EAAA,EAAgCA,EAAA8I,IAAS9I,EACzC5U,EAAA4U,GAAA68D,EAAAzxE,EAAA4U,IA8BA,SAAA+9D,MACA9jF,IAAAujF,IACAX,EAAAnC,EAAAmC,EAAAU,IAAA,GACAnyE,EAAAsvE,EAAAtvE,EAAAmyE,GACAC,EAAAC,EAAAF,IA1BAhmF,EAAA8jF,EAAAnqF,QAAAi4B,GACAlvB,EAAA,GACAkvB,EAAA60D,EACA5uC,EAAA6uC,KAEAhkF,GAAAod,IACApd,EAAA,EACA+R,EAAA,EAAuBld,IAAA,KAAAN,MAAAqvF,OAEvB,IAAA5jF,GACAkvB,EAAA+0D,EACA9uC,EAAA+uC,IAEAh1D,EAAAyxD,EACAxrC,EAAAwrC,GAEAxvE,EAAA,MAEAiwE,EAAA9jF,GAAA4xB,EAaA,SAAAmzD,IACA,GAAAriF,EAAA,GAOA,IANA,IAAAmkF,EAAAnkF,EACA2jF,EAAA5xE,EACAqyE,EAAAlD,EAAAiD,KAIA7wF,EAAA,EAAAgK,EAAA,EAAgChK,EAAAyB,IAAOzB,EACvCqH,EAAArH,KACA8wF,EAAAjzE,EAAA7T,GAAA6T,EAAA7d,IAAA,IACAgK,GAQA,IADAyU,EAAA,GAAA/R,EAAA,EACA1M,EAAA,EAAqBA,EAAA6wF,IAAU7wF,EAC/B8wF,EAAA9wF,KACA8wF,EAAA9wF,GAAA0M,IACA+R,EAAA5a,KAAAwsF,EAAArwF,KAIA,GAAA0M,EAAA,EAEA,QAAA1M,EAAA,EAA2BA,EAAAgK,IAAOhK,EAAA6d,EAAA7d,GAAA8wF,EAAAjzE,EAAA7d,SAElC6d,EAAA,KAEAiwE,IAAAnqF,QAAAi4B,IAAAlvB,EAAA,GACAm1C,EAAA6uC,EAAA90D,EAAA60D,GACA,IAAA/jF,GAAAm1C,EAAA+uC,EAAAh1D,EAAA+0D,GACA9uC,EAAAjmB,EAAAyxD,OACS,OAAA3gF,EAAA,CACT,GAAAod,EAAA,OACA,QAAA9pB,EAAA,EAAyBA,EAAAyB,IAAOzB,EAAA,GAAAqH,EAAArH,GAAA,OAChCye,EAAA,GAAA/R,EAAA,EACAohF,IAAAnqF,QAAAi4B,IACAA,EAAAimB,EAAAwrC,GAMA,SAAAoD,EAAAM,EAAAtB,EAAA5B,GACA,GAAAkD,IAAAvC,IAAA2B,EAAA,CAEA,IAAAnwF,EACA0M,EACAjL,EACAyN,EAGA,IAAAlP,EAAA,EAAAyB,EAAAguF,EAAAprF,OAAqCrE,EAAAyB,IAAOzB,EAC5CqH,EAAAqF,EAAA+iF,EAAAzvF,IAAAguE,KACA9+D,EAAAuP,EAAAZ,EAAAnR,KACAzL,MAAA4uF,EAAA3gF,EAAAjO,MAAA4H,EAAA6D,KAKA,IAAA1M,EAAA,EAAAyB,EAAAosF,EAAAxpF,OAAuCrE,EAAAyB,IAAOzB,GAC9CqH,EAAAqF,EAAAmhF,EAAA7tF,IAAAguE,KAAA+iB,KACA7hF,EAAAuP,EAAAZ,EAAAnR,KACAzL,MAAA6uF,EAAA5gF,EAAAjO,MAAA4H,EAAA6D,MAOA,SAAAikF,EAAAI,EAAAtB,EAAA5B,GACA,GAAAkD,IAAAvC,IAAA2B,EAAA,CAEA,IAAAnwF,EACA0M,EACAjL,EACAyN,EAAAuP,EAAA,GAGA,IAAAze,EAAA,EAAAyB,EAAAguF,EAAAprF,OAAqCrE,EAAAyB,IAAOzB,EAC5CqH,EAAAqF,EAAA+iF,EAAAzvF,IAAAguE,IACA9+D,EAAAjO,MAAA4uF,EAAA3gF,EAAAjO,MAAA4H,EAAA6D,KAKA,IAAA1M,EAAA,EAAAyB,EAAAosF,EAAAxpF,OAAuCrE,EAAAyB,IAAOzB,GAC9CqH,EAAAqF,EAAAmhF,EAAA7tF,IAAAguE,KAAA+iB,IACA7hF,EAAAjO,MAAA6uF,EAAA5gF,EAAAjO,MAAA4H,EAAA6D,MAOA,SAAAgkF,IACA,IAAA1wF,EACAkP,EAGA,IAAAlP,EAAA,EAAmBA,EAAA0M,IAAO1M,EAC1Bye,EAAAze,GAAAiB,MAAA8uF,IAIA,IAAA/vF,EAAA,EAAmBA,EAAAyB,IAAOzB,EAC1BqH,EAAArH,GAAAguE,KACA9+D,EAAAuP,EAAAZ,EAAA7d,KACAiB,MAAA4uF,EAAA3gF,EAAAjO,MAAA4H,EAAA7I,KAOA,SAAA4wF,IACA,IAAA5wF,EACAkP,EAAAuP,EAAA,GAMA,IAHAvP,EAAAjO,MAAA8uF,IAGA/vF,EAAA,EAAmBA,EAAAyB,IAAOzB,EAC1BqH,EAAArH,GAAAguE,IACA9+D,EAAAjO,MAAA4uF,EAAA3gF,EAAAjO,MAAA4H,EAAA7I,KAMA,SAAAoK,IAEA,OADA+lF,IAAAtuC,IAAAsuC,GAAA,GACA1xE,EAWA,SAAAwvD,EAAApmE,EAAAiJ,EAAAw/E,GAKA,OAJAT,EAAAhoF,EACAioF,EAAAh/E,EACAi/E,EAAAO,EACAH,GAAA,EACA5sF,EAIA,SAAAqsF,IACA,OAAA3hB,EAAAsf,EAAAC,EAAAF,GASA,SAAApwE,EAAAjc,GAGA,SAAA45C,EAAAv6C,GAA6B,OAAAW,EAAAX,EAAAW,OAC7B,OAHA2J,EAAAsgF,EAAArwC,GACAmwC,EAAAD,EAAAlwC,GAEAt3C,EAcA,SAAAgrF,IACA,IAAAvuF,EAAA8tF,EAAAnqF,QAAAi4B,GAMA,OALA57B,GAAA,GAAA8tF,EAAA97E,OAAAhS,EAAA,IACAA,EAAA0uF,EAAA/qF,QAAAkE,KACA,GAAA6mF,EAAA18E,OAAAhS,EAAA,IACAA,EAAA+tF,EAAApqF,QAAAorF,KACA,GAAAhB,EAAA/7E,OAAAhS,EAAA,GACAuD,EAGA,OAhUA8C,UAAAhC,OAAA,IAAA9C,EAAAspF,GAKAiD,EAAAjqF,KAAA+3B,GACA8yD,EAAA7qF,KAAAgE,GACAkmF,EAAAlqF,KAAAkrF,GAGAlnF,EAAAsV,EAAA9T,EAAA,EAAA5H,GAsTAmuF,IAAAtB,eAgBA,SAAAC,IACAI,EAAAjxE,QAAA,SAAAna,GAA+CA,EAAAgrF,YAC/C,IAAAvuF,EAAA4uF,EAAAjrF,QAAAkrF,GAOA,OANA7uF,GAAA,GAAA4uF,EAAA58E,OAAAhS,EAAA,IACAA,EAAA4uF,EAAAjrF,QAAAmrF,KACA,GAAAF,EAAA58E,OAAAhS,EAAA,IACAA,EAAA+tF,EAAApqF,QAAAorF,KACA,GAAAhB,EAAA/7E,OAAAhS,EAAA,GACAI,GAAA4tE,EACA7pE,IAGA,OAvmBA0qF,EAAAhmF,EAAA,EAAApH,GACAqtF,EAAAjmF,EAAA,EAAApH,GAsmBAsN,GA5sBA+a,SAitBA,WACA,IASAknE,EACAnB,EACAC,EACAC,EAZAxsF,EAAA,CACA0qE,SACA2hB,cACAlF,UAuFA,SAAAzpF,GACA,OAAAgtE,EAAAwf,EAAAxsF,GAAAysF,EAAAzsF,GAAAqsF,IAvFArsF,MA2FA,WACAkvF,IAlCA,WACA,IAAAnwF,EAIA,IAFAgxF,EAAAjB,IAEA/vF,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxBqH,EAAArH,KACAgxF,EAAAnB,EAAAmB,EAAAnoF,EAAA7I,KA2BA6hD,GAAAsuC,GAAA,GACA,OAAAa,GA5FAzC,UACAz9E,OAAAy9E,GAOA4B,GAAA,EAYA,SAAAtoF,EAAAmnF,EAAAzzD,GACA,IAAAv7B,EAEA,IAAAmwF,EAGA,IAAAnwF,EAAAu7B,EAAkBv7B,EAAAyB,IAAOzB,EACzBqH,EAAArH,KACAgxF,EAAAnB,EAAAmB,EAAAnoF,EAAA7I,KAMA,SAAA47B,EAAAm1D,EAAAtB,EAAA5B,GACA,IAAA7tF,EACA0M,EACAjL,EAEA,IAAA0uF,EAAA,CAGA,IAAAnwF,EAAA,EAAAyB,EAAAguF,EAAAprF,OAAmCrE,EAAAyB,IAAOzB,EAC1CqH,EAAAqF,EAAA+iF,EAAAzvF,MACAgxF,EAAAnB,EAAAmB,EAAAnoF,EAAA6D,KAKA,IAAA1M,EAAA,EAAAyB,EAAAosF,EAAAxpF,OAAqCrE,EAAAyB,IAAOzB,EAC5CqH,EAAAqF,EAAAmhF,EAAA7tF,MAAA+wF,IACAC,EAAAlB,EAAAkB,EAAAnoF,EAAA6D,MAoBA,SAAAuhE,EAAApmE,EAAAiJ,EAAAw/E,GAKA,OAJAT,EAAAhoF,EACAioF,EAAAh/E,EACAi/E,EAAAO,EACAH,GAAA,EACA5sF,EAIA,SAAAqsF,IACA,OAAA3hB,EAAAsf,EAAAC,EAAAF,GAeA,SAAAiB,IACA,IAAAvuF,EAAA8tF,EAAAnqF,QAAAi4B,GAIA,OAHA57B,GAAA,GAAA8tF,EAAA97E,OAAAhS,IACAA,EAAA4uF,EAAAjrF,QAAAkE,KACA,GAAA+mF,EAAA58E,OAAAhS,GACAuD,EAGA,OA3FAuqF,EAAAjqF,KAAA+3B,GACAgzD,EAAA/qF,KAAAgE,GAGAA,EAAAgB,EAAA,GAuFA+mF,KA9zBArmF,KAk0BA,WACA,OAAA9H,IAh0BAoH,EAAA,GACApH,EAAA,EACArB,EAAA,EACAs9C,EAAA,EACAr2C,EAAAylF,EAAA,GACAgB,EAAA,GACAc,EAAA,GACAb,EAAA,GAGA,SAAAlmF,EAAAmnF,GACA,IAAAzzD,EAAA95B,EACAwxD,EAAA+7B,EAAA3qF,OAYA,OANA4uD,IACApqD,IAAA8U,OAAAqxE,GACA3nF,EAAA6lF,EAAA7lF,EAAA5F,GAAAwxD,GACA27B,EAAAlxE,QAAA,SAAAzd,GAAyCA,EAAA+uF,EAAAzzD,EAAA03B,MAGzC5wD,EA2yBA,OAAAgE,UAAAhC,OACAwD,EAAAxB,UAAA,IACAhE,EAIA,SAAAurF,EAAAnsF,EAAArB,GACA,OAAAA,EAAA,IACA0sF,EAAA1sF,EAAA,MACA4sF,EACAC,GAAAxrF,GAUA,SAAAyuF,EAAAvgF,GACA,WAAAA,EACA,SAAAA,EACA,MACA,WA17BA,oBAAAshF,aACAnE,EAAA,SAAArrF,GAAoC,WAAAwvF,WAAAxvF,IACpCurF,EAAA,SAAAvrF,GAAqC,WAAAyvF,YAAAzvF,IACrCwrF,EAAA,SAAAxrF,GAAqC,WAAA0vF,YAAA1vF,IAErCyrF,EAAA,SAAAp9D,EAAAzrB,GACA,GAAAyrB,EAAAzrB,UAAA,OAAAyrB,EACA,IAAA0W,EAAA,IAAA1W,EAAAshE,YAAA/sF,GAEA,OADAmiC,EAAAhpB,IAAAsS,GACA0W,GAGA2mD,EAAA,SAAAr9D,EAAApgB,GACA,IAAA82B,EACA,OAAA92B,GACA,QAAA82B,EAAAwmD,EAAAl9D,EAAAzrB,QAAwD,MACxD,QAAAmiC,EAAAymD,EAAAn9D,EAAAzrB,QAAwD,MACxD,kBAAA0vB,MAAA,wBAGA,OADAyS,EAAAhpB,IAAAsS,GACA0W,IAgEAhnC,EAAA6C,cAhhBA,CAw3CiC7C,GAAAoH,kVCh3CjC9G,EAAA,QACAA,EAAA,2DAEqBuqF,grBAAkB7F,6CAS9Bz1E,EAAWxL,GAChBqD,KAAK+gF,iBAAiBrlF,UAAGqiB,UAAW5V,EAAWxL,GAE/CqD,KAAKu+E,SACF7+D,YAAW,GAEd1f,KAAKu+E,SAAS5gF,2DAOU,IAAAyhF,EAAAp/E,KACxBA,KAAKu+E,SAAS50E,UAAU,QAAQ0C,GAAG,QAAS,SAAC/R,GAAD,OAAO8kF,EAAKhB,cAAcC,KAAK,YAAa/jF,wBAvBvEmpF,8UCFrBvqF,EAAA,QACAA,EAAA,2DAEqBwqF,grBAAkB9F,6CAS9Bz1E,EAAWxL,GAChBqD,KAAK+gF,iBAAiBrlF,UAAGqiB,UAAW5V,EAAWxL,GAE/CqD,KAAKu+E,SACF7+D,YAAW,GAEd1f,KAAKu+E,SAAS5gF,2DAOU,IAAAyhF,EAAAp/E,KACxBA,KAAKu+E,SAAS50E,UAAU,QAAQ0C,GAAG,QAAS,SAAC/R,GAAD,OAAO8kF,EAAKhB,cAAcC,KAAK,YAAa/jF,wBAvBvEopF,8UCJrBxqF,EAAA,QACAA,EAAA,2DAEqByqF,grBAAiB/F,6CAS7Bz1E,EAAWxL,GAChBqD,KAAK+gF,iBAAiBrlF,UAAGkhB,SAAUzU,EAAWxL,GAE9CqD,KAAKu+E,SAAS5gF,2DAOU,IAAAyhF,EAAAp/E,KACxBA,KAAKu+E,SAAS50E,UAAU,QAAQ0C,GAAG,QAAS,SAAC/R,GAAD,OAAO8kF,EAAKhB,cAAcC,KAAK,YAAa/jF,wBApBvEqpF,8UCHrBzqF,EAAA,QACAA,EAAA,QACAA,EAAA,2DAEqBmpF,aAUnB,SAAAA,EAAYxE,EAAaC,gGAAUC,CAAA/9E,KAAAqiF,GACjCriF,KAAKi+E,aAAeJ,EACpB79E,KAAKk+E,UAAYJ,EACjB99E,KAAKo+E,cAAgB,IAAIiB,+CAWxBlB,EAAWlgF,GACZ,IAAM03E,EAAO31E,KACbA,KAAKo+E,cAAc/xE,GAAG8xE,EAAW,kBAAMlgF,EAAS1E,KAAKo8E,qCAarD,QAA4B,OAAnB31E,KAAKmhB,WAA8C,OAAxBnhB,KAAKyqF,gBAAiD,OAAtBzqF,KAAKi+E,6CASpE91E,GACL,GAAKnI,KAAK2mD,QAAV,CAIA,IAAIgvB,EAAO31E,KAEXA,KAAK0qF,aAAehvF,UAAGokB,UAAH,IAAiB9f,KAAKi+E,cACvC91E,UAAUA,GACVxL,MAAMqD,KAAKyqF,gBACXtpE,QAAQnhB,KAAKmhB,WACbxe,KAAK3C,KAAK2C,QACVye,OAAO,SAAA1nB,GAAA,OAAKA,EAAEsnF,QACd1qE,MAAM9a,UAAGglB,WAGZxgB,KAAK0qF,aAAar+E,GAAG,aAAc,kBAAMspE,EAAKyI,cAAcC,KAAK,iBACjEr+E,KAAK0qF,aAAa/sF,yCASlB,OAAOqC,KAAKk+E,UAAUQ,UAAU,mDAShC,OAAO1+E,KAAKk+E,UAAUQ,UAAU,2DAShC,OAAO1+E,KAAKk+E,UAAUQ,UAAU,4CA5Ff2D","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IRISTimelineViewer\"] = factory();\n\telse\n\t\troot[\"IRISTimelineViewer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/*!\n *  dc 1.7.3\n *  http://dc-js.github.io/dc.js/\n *  Copyright 2012 Nick Zhu and other contributors\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function() { function _dc(d3, crossfilter) {\n'use strict';\n\n/**\n#### Version 1.7.3\n\nThe entire dc.js library is scoped under **dc** name space. It does not introduce anything else into the global\nname space.\n\n* [Base Chart [abstract]](#base-chart)\n* [Color Chart [abstract]](#color-chart)\n* [Stackable Chart [abstract]](#stackable-chart)\n* [Coordinate Grid Chart [abstract] < Color Chart < Base Chart](#coordinate-grid-chart)\n* [Pie Chart [concrete] < Color Chart < Base Chart](#pie-chart)\n* [Row Chart [concrete] < Color Chart < Base chart](#row-chart)\n* [Bar Chart [concrete] < Stackable Chart < CoordinateGrid Chart](#bar-chart)\n* [Line Chart [concrete] < Stackable Chart < CoordinateGrid Chart](#line-chart)\n* [Composite Chart [concrete] < CoordinateGrid Chart](#composite-chart)\n* [Abstract Bubble Chart [abstract] < Color Chart](#abstract-bubble-chart)\n* [Bubble Chart [concrete] < Abstract Bubble Chart < CoordinateGrid Chart](#bubble-chart)\n* [Bubble Overlay Chart [concrete] < Abstract Bubble Chart < Base Chart](#bubble-overlay-chart)\n* [Geo Choropleth Chart [concrete] < Color Chart < Base Chart](#geo-choropleth-chart)\n* [Data Count Widget [concrete] < Base Chart](#data-count)\n* [Data Table Widget [concrete] < Base Chart](#data-table)\n* [Number Display [Concrete] < Base Chart](#number-display)\n* [Legend [concrete]](#legend)\n* [Listeners](#listeners)\n* [Utilities](#util)\n\n#### Function Chain\nMajority of dc functions are designed to allow function chaining, meaning it will return the current chart instance\nwhenever it is appropriate. Therefore configuration of a chart can be written in the following style.\n```js\nchart.width(300)\n    .height(300)\n    .filter(\"sunday\")\n```\nThe API references will highlight the fact if a particular function is not chainable.\n\n**/\nvar dc = {\n    version: \"1.7.3\",\n    constants: {\n        CHART_CLASS: \"dc-chart\",\n        DEBUG_GROUP_CLASS: \"debug\",\n        STACK_CLASS: \"stack\",\n        DESELECTED_CLASS: \"deselected\",\n        SELECTED_CLASS: \"selected\",\n        NODE_INDEX_NAME: \"__index__\",\n        GROUP_INDEX_NAME: \"__group_index__\",\n        DEFAULT_CHART_GROUP: \"__default_chart_group__\",\n        EVENT_DELAY: 40,\n        NEGLIGIBLE_NUMBER: 1e-10\n    },\n    _renderlet: null\n};\n\ndc.chartRegistry = function() {\n    // chartGroup:string => charts:array\n    var _chartMap = {};\n\n    function initializeChartGroup(group) {\n        if (!group)\n            group = dc.constants.DEFAULT_CHART_GROUP;\n\n        if (!_chartMap[group])\n            _chartMap[group] = [];\n\n        return group;\n    }\n\n    return {\n        has: function(chart) {\n            for (var e in _chartMap) {\n                if (_chartMap[e].indexOf(chart) >= 0)\n                    return true;\n            }\n            return false;\n        },\n\n        register: function(chart, group) {\n            group = initializeChartGroup(group);\n            _chartMap[group].push(chart);\n        },\n\n        clear: function() {\n            _chartMap = {};\n        },\n\n        list: function(group) {\n            group = initializeChartGroup(group);\n            return _chartMap[group];\n        }\n    };\n}();\n\ndc.registerChart = function(chart, group) {\n    dc.chartRegistry.register(chart, group);\n};\n\ndc.hasChart = function(chart) {\n    return dc.chartRegistry.has(chart);\n};\n\ndc.deregisterAllCharts = function() {\n    dc.chartRegistry.clear();\n};\n\n/**\n## <a name=\"util\" href=\"#util\">#</a> Utilities\n**/\n\n/**\n#### dc.filterAll([chartGroup])\nClear all filters on every chart within the given chart group. If the chart group is not given then only charts that\nbelong to the default chart group will be reset.\n**/\ndc.filterAll = function(group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].filterAll();\n    }\n};\n\n/**\n#### dc.renderAll([chartGroup])\nRe-render all charts belong to the given chart group. If the chart group is not given then only charts that belong to\n the default chart group will be re-rendered.\n**/\ndc.renderAll = function(group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].render();\n    }\n\n    if(dc._renderlet !== null)\n        dc._renderlet(group);\n};\n\n/**\n#### dc.redrawAll([chartGroup])\nRedraw all charts belong to the given chart group. If the chart group is not given then only charts that belong to the\n  default chart group will be re-drawn. Redraw is different from re-render since when redrawing dc charts try to update\n  the graphic incrementally instead of starting from scratch.\n**/\ndc.redrawAll = function(group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].redraw();\n    }\n\n    if(dc._renderlet !== null)\n        dc._renderlet(group);\n};\n\ndc.transition = function(selections, duration, callback) {\n    if (duration <= 0 || duration === undefined)\n        return selections;\n\n    var s = selections\n        .transition()\n        .duration(duration);\n\n    if (callback instanceof Function) {\n        callback(s);\n    }\n\n    return s;\n};\n\ndc.units = {};\n\n/**\n#### dc.units.integers\nThis function can be used to in [Coordinate Grid Chart](#coordinate-grid-chart) to define units on x axis.\ndc.units.integers is the default x unit scale used by [Coordinate Grid Chart](#coordinate-grid-chart) and should be\nused when x range is a sequential of integers.\n\n**/\ndc.units.integers = function(s, e) {\n    return Math.abs(e - s);\n};\n\n/**\n#### dc.units.ordinal\nThis function can be used to in [Coordinate Grid Chart](#coordinate-grid-chart) to define ordinal units on x axis.\nUsually this function is used in combination with d3.scale.ordinal() on x axis.\n**/\ndc.units.ordinal = function(s, e, domain){\n    return domain;\n};\n\n/**\n#### dc.units.fp.precision(precision)\nThis function generates xunit function in floating-point numbers with the given precision. For example if the function\nis invoked with 0.001 precision then the function created will devide a range [0.5, 1.0] with 500 units.\n\n**/\ndc.units.fp = {};\ndc.units.fp.precision = function(precision){\n    var _f = function(s, e){\n        var d = Math.abs((e-s)/_f.resolution);\n        if(dc.utils.isNegligible(d - Math.floor(d)))\n            return Math.floor(d);\n        else\n            return Math.ceil(d);\n    };\n    _f.resolution = precision;\n    return _f;\n};\n\ndc.round = {};\ndc.round.floor = function(n) {\n    return Math.floor(n);\n};\ndc.round.ceil = function(n) {\n    return Math.ceil(n);\n};\ndc.round.round = function(n) {\n    return Math.round(n);\n};\n\ndc.override = function(obj, functionName, newFunction) {\n    var existingFunction = obj[functionName];\n    obj[\"_\" + functionName] = existingFunction;\n    obj[functionName] = newFunction;\n};\n\ndc.renderlet = function(_){\n    if(!arguments.length) return dc._renderlet;\n    dc._renderlet = _;\n    return dc;\n};\n\ndc.instanceOfChart = function (o) {\n    return o instanceof Object && o.__dc_flag__;\n};\n\ndc.errors = {};\n\ndc.errors.Exception = function(msg) {\n    var _msg = msg !== undefined ? msg : \"Unexpected internal error\";\n\n    this.message = _msg;\n\n    this.toString = function(){\n        return _msg;\n    };\n};\n\ndc.errors.InvalidStateException = function() {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.dateFormat = d3.time.format(\"%m/%d/%Y\");\n\ndc.printers = {};\n\ndc.printers.filters = function (filters) {\n    var s = \"\";\n\n    for (var i = 0; i < filters.length; ++i) {\n        if (i > 0) s += \", \";\n        s += dc.printers.filter(filters[i]);\n    }\n\n    return s;\n};\n\ndc.printers.filter = function (filter) {\n    var s = \"\";\n\n    if (filter) {\n        if (filter instanceof Array) {\n            if (filter.length >= 2)\n                s = \"[\" + dc.utils.printSingleValue(filter[0]) + \" -> \" + dc.utils.printSingleValue(filter[1]) + \"]\";\n            else if (filter.length >= 1)\n                s = dc.utils.printSingleValue(filter[0]);\n        } else {\n            s = dc.utils.printSingleValue(filter);\n        }\n    }\n\n    return s;\n};\n\ndc.utils = {};\n\ndc.utils.printSingleValue = function (filter) {\n    var s = \"\" + filter;\n\n    if (filter instanceof Date)\n        s = dc.dateFormat(filter);\n    else if (typeof(filter) == \"string\")\n        s = filter;\n    else if (dc.utils.isFloat(filter))\n        s = dc.utils.printSingleValue.fformat(filter);\n    else if (dc.utils.isInteger(filter))\n        s = Math.round(filter);\n\n    return s;\n};\ndc.utils.printSingleValue.fformat = d3.format(\".2f\");\n\ndc.utils.add = function (l, r) {\n    if (typeof r === \"string\")\n        r = r.replace(\"%\", \"\");\n\n    if (l instanceof Date) {\n        if (typeof r === \"string\") r = +r;\n        var d = new Date();\n        d.setTime(l.getTime());\n        d.setDate(l.getDate() + r);\n        return d;\n    } else if (typeof r === \"string\") {\n        var percentage = (+r / 100);\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l + r;\n    }\n};\n\ndc.utils.subtract = function (l, r) {\n    if (typeof r === \"string\")\n        r = r.replace(\"%\", \"\");\n\n    if (l instanceof Date) {\n        if (typeof r === \"string\") r = +r;\n        var d = new Date();\n        d.setTime(l.getTime());\n        d.setDate(l.getDate() - r);\n        return d;\n    } else if (typeof r === \"string\") {\n        var percentage = (+r / 100);\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l - r;\n    }\n};\n\ndc.utils.GroupStack = function () {\n    var _dataLayers = [[ ]];\n    var _groups = [];\n    var _defaultAccessor;\n\n    function initializeDataLayer(i) {\n        if (!_dataLayers[i])\n            _dataLayers[i] = [];\n    }\n\n    this.setDataPoint = function (layerIndex, pointIndex, data) {\n        initializeDataLayer(layerIndex);\n        _dataLayers[layerIndex][pointIndex] = data;\n    };\n\n    this.getDataPoint = function (x, y) {\n        initializeDataLayer(x);\n        var dataPoint = _dataLayers[x][y];\n        if (dataPoint === undefined)\n            dataPoint = 0;\n        return dataPoint;\n    };\n\n    this.addGroup = function (group, accessor) {\n        if (!accessor)\n            accessor = _defaultAccessor;\n        _groups.push([group, accessor]);\n        return _groups.length - 1;\n    };\n\n    this.getGroupByIndex = function (index) {\n        return _groups[index][0];\n    };\n\n    this.getAccessorByIndex = function (index) {\n        return _groups[index][1];\n    };\n\n    this.size = function () {\n        return _groups.length;\n    };\n\n    this.clear = function () {\n        _dataLayers = [];\n        _groups = [];\n    };\n\n    this.setDefaultAccessor = function (retriever) {\n        _defaultAccessor = retriever;\n    };\n\n    this.getDataLayers = function () {\n        return _dataLayers;\n    };\n\n    this.toLayers = function () {\n        var layers = [];\n\n        for (var i = 0; i < _dataLayers.length; ++i) {\n            var layer = {index: i, points: []};\n            var dataPoints = _dataLayers[i];\n\n            for (var j = 0; j < dataPoints.length; ++j)\n                layer.points.push(dataPoints[j]);\n\n            layers.push(layer);\n        }\n\n        return layers;\n    };\n};\n\ndc.utils.isNumber = function(n) {\n    return n===+n;\n};\n\ndc.utils.isFloat = function (n) {\n    return n===+n && n!==(n|0);\n};\n\ndc.utils.isInteger = function (n) {\n    return n===+n && n===(n|0);\n};\n\ndc.utils.isNegligible = function (max) {\n    return max === undefined || (max < dc.constants.NEGLIGIBLE_NUMBER && max > -dc.constants.NEGLIGIBLE_NUMBER);\n};\n\ndc.utils.groupMax = function (group, accessor) {\n    var max = d3.max(group.all(), function (e) {\n        return accessor(e);\n    });\n    if (dc.utils.isNegligible(max)) max = 0;\n    return max;\n};\n\ndc.utils.groupMin = function (group, accessor) {\n    var min = d3.min(group.all(), function (e) {\n        return accessor(e);\n    });\n    if (dc.utils.isNegligible(min)) min = 0;\n    return min;\n};\n\ndc.utils.nameToId = function (name) {\n    return name.toLowerCase().replace(/[\\s]/g, \"_\").replace(/[\\.']/g, \"\");\n};\n\ndc.utils.appendOrSelect = function (parent, name) {\n    var element = parent.select(name);\n    if (element.empty()) element = parent.append(name);\n    return element;\n};\n\ndc.utils.createLegendable = function (chart, group, index, accessor) {\n    var legendable = {name: chart._getGroupName(group, accessor), data: group};\n    if (typeof chart.colors === 'function') legendable.color = chart.colors()(index);\n    return legendable;\n};\n\ndc.utils.safeNumber = function(n){return dc.utils.isNumber(+n)?+n:0;};\n\ndc.events = {\n    current: null\n};\n\n/**\n#### dc.events.trigger(function[, delay])\nThis function is design to trigger throttled event function optionally with certain amount of delay(in milli-seconds).\nEvents that are triggered repetitively due to user interaction such as the dragging of the brush might over flood\nlibrary and cause too much rendering being scheduled. In this case, using this function to wrap your event function\nallows the library to smooth out the rendering by throttling event flood and only respond to the most recent event.\n\n```js\n    chart.renderlet(function(chart){\n        // smooth the rendering through event throttling\n        dc.events.trigger(function(){\n            // focus some other chart to the range selected by user on this chart\n            someOtherChart.focus(chart.filter());\n        });\n    })\n```\n**/\ndc.events.trigger = function(closure, delay) {\n    if (!delay){\n        closure();\n        return;\n    }\n\n    dc.events.current = closure;\n\n    setTimeout(function() {\n        if (closure == dc.events.current)\n            closure();\n    }, delay);\n};\n\ndc.cumulative = {};\n\ndc.cumulative.Base = function() {\n    this._keyIndex = [];\n    this._map = {};\n\n    this.sanitizeKey = function(key) {\n        key = key + \"\";\n        return key;\n    };\n\n    this.clear = function() {\n        this._keyIndex = [];\n        this._map = {};\n    };\n\n    this.size = function() {\n        return this._keyIndex.length;\n    };\n\n    this.getValueByKey = function(key) {\n        key = this.sanitizeKey(key);\n        var value = this._map[key];\n        return value;\n    };\n\n    this.setValueByKey = function(key, value) {\n        key = this.sanitizeKey(key);\n        return this._map[key] = value;\n    };\n\n    this.indexOfKey = function(key) {\n        key = this.sanitizeKey(key);\n        return this._keyIndex.indexOf(key);\n    };\n\n    this.addToIndex = function(key) {\n        key = this.sanitizeKey(key);\n        this._keyIndex.push(key);\n    };\n\n    this.getKeyByIndex = function(index) {\n        return this._keyIndex[index];\n    };\n};\n\ndc.cumulative.Sum = function() {\n    dc.cumulative.Base.apply(this, arguments);\n\n    this.add = function(key, value) {\n        if (!value)\n            value = 0;\n\n        if (this.getValueByKey(key) === undefined) {\n            this.addToIndex(key);\n            this.setValueByKey(key, value);\n        } else {\n            this.setValueByKey(key, this.getValueByKey(key) + value);\n        }\n    };\n\n    this.minus = function(key, value) {\n        this.setValueByKey(key, this.getValueByKey(key) - value);\n    };\n\n    this.cumulativeSum = function(key) {\n        var keyIndex = this.indexOfKey(key);\n        if (keyIndex < 0) return 0;\n        var cumulativeValue = 0;\n        for (var i = 0; i <= keyIndex; ++i) {\n            var k = this.getKeyByIndex(i);\n            cumulativeValue += this.getValueByKey(k);\n        }\n        return cumulativeValue;\n    };\n};\ndc.cumulative.Sum.prototype = new dc.cumulative.Base();\n\ndc.cumulative.CountUnique = function() {\n    dc.cumulative.Base.apply(this, arguments);\n\n    function hashSize(hash) {\n        var size = 0, key;\n        for (key in hash) {\n            if (hash.hasOwnProperty(key)) size++;\n        }\n        return size;\n    }\n\n    this.add = function(key, e) {\n        if (this.getValueByKey(key) === undefined) {\n            this.setValueByKey(key, {});\n            this.addToIndex(key);\n        }\n\n        if (e !== undefined) {\n            if (this.getValueByKey(key)[e] === undefined)\n                this.getValueByKey(key)[e] = 0;\n\n            this.getValueByKey(key)[e] += 1;\n        }\n    };\n\n    this.minus = function(key, e) {\n        this.getValueByKey(key)[e] -= 1;\n        if (this.getValueByKey(key)[e] <= 0)\n            delete this.getValueByKey(key)[e];\n    };\n\n    this.count = function(key) {\n        return hashSize(this.getValueByKey(key));\n    };\n\n    this.cumulativeCount = function(key) {\n        var keyIndex = this.indexOfKey(key);\n        if (keyIndex < 0) return 0;\n        var cumulativeCount = 0;\n        for (var i = 0; i <= keyIndex; ++i) {\n            var k = this.getKeyByIndex(i);\n            cumulativeCount += this.count(k);\n        }\n        return cumulativeCount;\n    };\n};\ndc.cumulative.CountUnique.prototype = new dc.cumulative.Base();\n\n/**\n## <a name=\"base-chart\" href=\"#base-chart\">#</a> Base Chart [Abstract]\nBase chart is an abstract functional object representing a basic dc chart object for all chart and widget implementation.\nEvery function on base chart are also inherited available on all concrete chart implementation in dc library.\n\n**/\ndc.baseChart = function (_chart) {\n    _chart.__dc_flag__ = true;\n\n    var _dimension;\n    var _group;\n\n    var _anchor;\n    var _root;\n    var _svg;\n\n    var _width = 200, _height = 200;\n\n    var _keyAccessor = function (d) {\n        return d.key;\n    };\n    var _valueAccessor = function (d) {\n        return d.value;\n    };\n    var _ordering = function (p) {\n        return p.key;\n    };\n\n    var _label = function (d) {\n        return d.key;\n    };\n    var _renderLabel = false;\n\n    var _title = function (d) {\n        return d.key + \": \" + d.value;\n    };\n    var _renderTitle = false;\n\n    var _transitionDuration = 750;\n\n    var _filterPrinter = dc.printers.filters;\n\n    var _renderlets = [];\n\n    var _chartGroup = dc.constants.DEFAULT_CHART_GROUP;\n\n    var NULL_LISTENER = function () {};\n\n    var _listeners = {\n        preRender: NULL_LISTENER,\n        postRender: NULL_LISTENER,\n        preRedraw: NULL_LISTENER,\n        postRedraw: NULL_LISTENER,\n        filtered: NULL_LISTENER,\n        zoomed: NULL_LISTENER\n    };\n\n    var _legend;\n\n    var _filters = [];\n    var _filterHandler = function (dimension, filters) {\n        dimension.filter(null);\n\n        if (filters.length === 0)\n            dimension.filter(null);\n        else if (filters.length === 1)\n            dimension.filter(filters[0]);\n        else\n            dimension.filterFunction(function (d) {\n                return filters.indexOf(d) >= 0;\n            });\n\n        return filters;\n    };\n\n    /**\n    #### .width([value])\n    Set or get width attribute of a chart. If the value is given, then it will be used as the new width.\n\n    If no value specified then value of the current width attribute will be returned.\n\n    **/\n    _chart.width = function (w) {\n        if (!arguments.length) return _width;\n        _width = w;\n        return _chart;\n    };\n\n    /**\n    #### .height([value])\n    Set or get height attribute of a chart. If the value is given, then it will be used as the new height.\n\n    If no value specified then value of the current height attribute will be returned.\n\n    **/\n    _chart.height = function (h) {\n        if (!arguments.length) return _height;\n        _height = h;\n        return _chart;\n    };\n\n    /**\n    #### .dimension([value]) - **mandatory**\n    Set or get dimension attribute of a chart. In dc a dimension can be any valid\n    [crossfilter dimension](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension). If the value is given,\n    then it will be used as the new dimension.\n\n    If no value specified then the current dimension will be returned.\n\n    **/\n    _chart.dimension = function (d) {\n        if (!arguments.length) return _dimension;\n        _dimension = d;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n    #### .group([value], [name]) - **mandatory**\n    Set or get group attribute of a chart. In dc a group is a\n    [crossfilter group](https://github.com/square/crossfilter/wiki/API-Reference#wiki-group). Usually the group should be\n    created from the particular dimension associated with the same chart. If the value is given, then it will be used as\n    the new group.\n\n    If no value specified then the current group will be returned.\n    If name is specified then it will be used to generate legend label.\n\n    **/\n    _chart.group = function (g, name) {\n        if (!arguments.length) return _group;\n        _group = g;\n        _chart.expireCache();\n        if (typeof name === 'string') _chart._setGroupName(_group, name);\n        return _chart;\n    };\n\n    function groupName(chart, g, accessor) {\n        var c = chart.anchor(),\n            k = '__names__';\n        if (!accessor || accessor == chart.valueAccessor())\n            accessor = \"default\";\n        if (!g[k]) g[k] = {};\n        if (!g[k][c]) g[k][c] = {a:[],n:[]};\n        var i = g[k][c].a.indexOf(accessor);\n        if (i == -1) {\n          i = g[k][c].a.length;\n          g[k][c].a[i] = accessor;\n          g[k][c].n[i] = {name:''};\n        }\n        return g[k][c].n[i];\n    }\n\n\n    _chart._getGroupName = function (g, accessor) {\n      return groupName(_chart, g, accessor).name;\n    };\n\n    _chart._setGroupName = function (g, name, accessor) {\n      groupName(_chart, g, accessor).name = name;\n    };\n\n    _chart.ordering = function(o) {\n        if (!arguments.length) return _ordering;\n        _ordering = o;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    _chart.computeOrderedGroups = function(arr) {\n        var data = arr ? arr : _chart.group().all().slice(0); // clone\n        if(data.length < 2)\n            return data;\n        var sort = crossfilter.quicksort.by(_chart.ordering());\n        return sort(data,0,data.length);\n    };\n\n    /**\n    #### .filterAll()\n    Clear all filters associated with this chart.\n\n    **/\n    _chart.filterAll = function () {\n        return _chart.filter(null);\n    };\n\n    _chart.dataSet = function () {\n        return _dimension !== undefined && _group !== undefined;\n    };\n\n    /**\n    #### .select(selector)\n    Execute in scope d3 single selection using the given selector and return d3 selection result. Roughly the same as:\n    ```js\n    d3.select(\"#chart-id\").select(selector);\n    ```\n    This function is **not chainable** since it does not return a chart instance; however the d3 selection result is chainable\n    from d3's perspective.\n\n    **/\n    _chart.select = function (s) {\n        return _root.select(s);\n    };\n\n    /**\n    #### .selectAll(selector)\n    Execute in scope d3 selectAll using the given selector and return d3 selection result. Roughly the same as:\n    ```js\n    d3.select(\"#chart-id\").selectAll(selector);\n    ```\n    This function is **not chainable** since it does not return a chart instance; however the d3 selection result is\n    chainable from d3's perspective.\n\n    **/\n    _chart.selectAll = function (s) {\n        return _root ? _root.selectAll(s) : null;\n    };\n\n    /**\n    #### .anchor([anchorChart/anchorSelector], [chartGroup])\n    Set the svg root to either be an existing chart's root or the first element returned from a d3 css string selector. Optionally registers the chart within the chartGroup. This class is called internally on chart initialization, but be called again to relocate the chart. However, it will orphan any previously created SVG elements.\n\n    **/\n    _chart.anchor = function (a, chartGroup) {\n        if (!arguments.length) return _anchor;\n        if (dc.instanceOfChart(a)) {\n            _anchor = a.anchor();\n            _root = a.root();\n        } else {\n            _anchor = a;\n            _root = d3.select(_anchor);\n            _root.classed(dc.constants.CHART_CLASS, true);\n            dc.registerChart(_chart, chartGroup);\n        }\n        _chartGroup = chartGroup;\n        return _chart;\n    };\n\n    /**\n    #### .anchorName()\n    Return the dom ID for chart's anchored location\n\n    **/\n    _chart.anchorName = function () {\n        var a = _chart.anchor();\n        if (a && a.id) return a.id;\n        if (a) return a.replace('#','');\n        return '';\n    };\n\n    /**\n    #### .root([rootElement])\n    Returns the root element where a chart resides. Usually it will be the parent div element where svg was created. You\n    can also pass in a new root element however this is usually handled as part of the dc internal. Resetting root element\n    on a chart outside of dc internal might have unexpected consequences.\n\n    **/\n    _chart.root = function (r) {\n        if (!arguments.length) return _root;\n        _root = r;\n        return _chart;\n    };\n\n    /**\n    #### .svg([svgElement])\n    Returns the top svg element for this specific chart. You can also pass in a new svg element however this is usually\n    handled as part of the dc internal. Resetting svg element on a chart outside of dc internal might have unexpected\n    consequences.\n\n    **/\n    _chart.svg = function (_) {\n        if (!arguments.length) return _svg;\n        _svg = _;\n        return _chart;\n    };\n\n    /**\n    #### .resetSvg()\n    Remove the chart's SVG elements from the dom and recreate the container SVG element.\n    **/\n    _chart.resetSvg = function () {\n        _chart.select(\"svg\").remove();\n        return generateSvg();\n    };\n\n    function generateSvg() {\n        _svg = _chart.root().append(\"svg\")\n            .attr(\"width\", _chart.width())\n            .attr(\"height\", _chart.height());\n        return _svg;\n    };\n\n    /**\n    #### .filterPrinter([filterPrinterFunction])\n    Set or get filter printer function. Filter printer function is used to generate human friendly text for filter value(s)\n    associated with the chart instance. By default dc charts shipped with a default filter printer implementation dc.printers.filter\n    that provides simple printing support for both single value and ranged filters.\n\n    **/\n    _chart.filterPrinter = function (_) {\n        if (!arguments.length) return _filterPrinter;\n        _filterPrinter = _;\n        return _chart;\n    };\n\n    /**\n    #### .turnOnControls() & .turnOffControls()\n    Turn on/off optional control elements within the root element. dc.js currently support the following html control elements.\n\n    * root.selectAll(\".reset\") elements are turned on if the chart has an active filter. This type of control elements are usually used to store reset link to allow user to reset filter on a certain chart. This element will be turned off automatically if the filter is cleared.\n    * root.selectAll(\".filter\") elements are turned on if the chart has an active filter. The text content of this element is then replaced with the current filter value using the filter printer function. This type of element will be turned off automatically if the filter is cleared.\n\n    **/\n    _chart.turnOnControls = function () {\n        if (_root) {\n            _chart.selectAll(\".reset\").style(\"display\", null);\n            _chart.selectAll(\".filter\").text(_filterPrinter(_chart.filters())).style(\"display\", null);\n        }\n        return _chart;\n    };\n\n    _chart.turnOffControls = function () {\n        if (_root) {\n            _chart.selectAll(\".reset\").style(\"display\", \"none\");\n            _chart.selectAll(\".filter\").style(\"display\", \"none\").text(_chart.filter());\n        }\n        return _chart;\n    };\n\n    /**\n    #### .transitionDuration([duration])\n    Set or get animation transition duration(in milliseconds) for specific chart instance. Default duration is 750ms.\n\n    **/\n    _chart.transitionDuration = function (d) {\n        if (!arguments.length) return _transitionDuration;\n        _transitionDuration = d;\n        return _chart;\n    };\n\n    /**\n    #### .render()\n    Invoke this method will force the chart to re-render everything from scratch. Generally it should be only used to\n    render the chart for the first time on the page or if you want to make sure everything is redrawn from scratch instead\n    of relying on the default incremental redrawing behaviour.\n\n    **/\n    _chart.render = function () {\n        _listeners.preRender(_chart);\n\n        if (_dimension === undefined)\n            throw new dc.errors.InvalidStateException(\"Mandatory attribute chart.dimension is missing on chart[#\"\n                + _chart.anchorName() + \"]\");\n\n        if (_group === undefined)\n            throw new dc.errors.InvalidStateException(\"Mandatory attribute chart.group is missing on chart[#\"\n                + _chart.anchorName() + \"]\");\n\n        var result = _chart.doRender();\n\n        if (_legend) _legend.render();\n\n        _chart.activateRenderlets(\"postRender\");\n\n        return result;\n    };\n\n    _chart.activateRenderlets = function (event) {\n        if (_chart.transitionDuration() > 0 && _svg) {\n            _svg.transition().duration(_chart.transitionDuration())\n                .each(\"end\", function () {\n                    runAllRenderlets();\n                    if (event) _listeners[event](_chart);\n                });\n        } else {\n            runAllRenderlets();\n            if (event) _listeners[event](_chart);\n        }\n    };\n\n    /**\n    #### .redraw()\n    Calling redraw will cause the chart to re-render delta in data change incrementally. If there is no change in the\n    underlying data dimension then calling this method will have no effect on the chart. Most of the chart interaction in\n    dc library will automatically trigger this method through its internal event engine, therefore you only need to manually\n    invoke this function if data is manipulated outside of dc's control; for example if data is loaded on a periodic basis\n    in the background using crossfilter.add().\n\n    **/\n    _chart.redraw = function () {\n        _listeners.preRedraw(_chart);\n\n        var result = _chart.doRedraw();\n\n        _chart.activateRenderlets(\"postRedraw\");\n\n        return result;\n    };\n\n    _chart._invokeFilteredListener = function (f) {\n        if (f !== undefined) _listeners.filtered(_chart, f);\n    };\n\n    _chart._invokeZoomedListener = function () {\n        _listeners.zoomed(_chart);\n    };\n\n    /**\n    #### .hasFilter([filter])\n    Check whether is any active filter or a specific filter is associated with particular chart instance.\n    This function is **not chainable**.\n\n    **/\n    _chart.hasFilter = function (filter) {\n        if (!arguments.length) return _filters.length > 0;\n        return _filters.indexOf(filter) >= 0;\n    };\n\n    function removeFilter(_) {\n        _filters.splice(_filters.indexOf(_), 1);\n        applyFilters();\n        _chart._invokeFilteredListener(_);\n    }\n\n    function addFilter(_) {\n        _filters.push(_);\n        applyFilters();\n        _chart._invokeFilteredListener(_);\n    }\n\n    function resetFilters() {\n        _filters = [];\n        applyFilters();\n        _chart._invokeFilteredListener(null);\n    }\n\n    function applyFilters() {\n        if (_chart.dataSet() && _chart.dimension().filter !== undefined) {\n            var fs = _filterHandler(_chart.dimension(), _filters);\n            _filters = fs ? fs : _filters;\n        }\n    }\n\n    /**\n    #### .filter([filterValue])\n    Filter the chart by the given value or return the current filter if the input parameter is missing.\n    ```js\n    // filter by a single string\n    chart.filter(\"Sunday\");\n    // filter by a single age\n    chart.filter(18);\n    ```\n\n    **/\n    _chart.filter = function (_) {\n        if (!arguments.length) return _filters.length > 0 ? _filters[0] : null;\n\n        if (_ === null) {\n            resetFilters();\n        } else {\n            if (_chart.hasFilter(_))\n                removeFilter(_);\n            else\n                addFilter(_);\n        }\n\n        if (_root !== null && _chart.hasFilter()) {\n            _chart.turnOnControls();\n        } else {\n            _chart.turnOffControls();\n        }\n\n        return _chart;\n    };\n\n    /**\n    #### .filters()\n    Return all current filters. This method does not perform defensive cloning of the internal filter array before returning\n    therefore any modification of returned array will affact chart's internal filter storage.\n\n    **/\n    _chart.filters = function () {\n        return _filters;\n    };\n\n    _chart.highlightSelected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, true);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    _chart.fadeDeselected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, true);\n    };\n\n    _chart.resetHighlight = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    _chart.onClick = function (d) {\n        var filter = _chart.keyAccessor()(d);\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            dc.redrawAll(_chart.chartGroup());\n        });\n    };\n\n    /**\n    #### .filterHandler([function])\n    Set or get filter handler. Filter handler is a function that performs the filter action on a specific dimension. Using\n    custom filter handler give you the flexibility to perform additional logic before or after filtering.\n\n    ```js\n    // default filter handler\n    function(dimension, filter){\n        dimension.filter(filter); // perform filtering\n        return filter; // return the actual filter value\n    }\n\n    // custom filter handler\n    chart.filterHandler(function(dimension, filter){\n        var newFilter = filter + 10;\n        dimension.filter(newFilter);\n        return newFilter; // set the actual filter value to the new value\n    });\n    ```\n\n    **/\n    _chart.filterHandler = function (_) {\n        if (!arguments.length) return _filterHandler;\n        _filterHandler = _;\n        return _chart;\n    };\n\n    // abstract function stub\n    _chart.doRender = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart.doRedraw = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        // do nothing in base, should be overridden by sub-function\n        return [];\n    };\n\n    _chart.legendHighlight = function (d) {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendReset = function (d) {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    /**\n    #### .keyAccessor([keyAccessorFunction])\n    Set or get the key accessor function. Key accessor function is used to retrieve key value in crossfilter group. Key\n    values are used differently in different charts, for example keys correspond to slices in pie chart and x axis position\n    in grid coordinate chart.\n    ```js\n    // default key accessor\n    chart.keyAccessor(function(d) { return d.key; });\n    // custom key accessor for a multi-value crossfilter reduction\n    chart.keyAccessor(function(p) { return p.value.absGain; });\n    ```\n\n    **/\n    _chart.keyAccessor = function (_) {\n        if (!arguments.length) return _keyAccessor;\n        _keyAccessor = _;\n        return _chart;\n    };\n\n    /**\n    #### .valueAccessor([valueAccessorFunction])\n    Set or get the value accessor function. Value accessor function is used to retrieve value in crossfilter group. Group\n    values are used differently in different charts, for example group values correspond to slices size in pie chart and y\n    axis position in grid coordinate chart.\n    ```js\n    // default value accessor\n    chart.valueAccessor(function(d) { return d.value; });\n    // custom value accessor for a multi-value crossfilter reduction\n    chart.valueAccessor(function(p) { return p.value.percentageGain; });\n    ```\n\n    **/\n    _chart.valueAccessor = function (_) {\n        if (!arguments.length) return _valueAccessor;\n        _valueAccessor = _;\n        return _chart;\n    };\n\n    /**\n    #### .label([labelFunction])\n    Set or get the label function. Chart class will use this function to render label for each child element in the chart,\n    i.e. a slice in a pie chart or a bubble in a bubble chart. Not every chart supports label function for example bar chart\n    and line chart do not use this function at all.\n    ```js\n    // default label function just return the key\n    chart.label(function(d) { return d.key; });\n    // label function has access to the standard d3 data binding and can get quite complicated\n    chart.label(function(d) { return d.data.key + \"(\" + Math.floor(d.data.value / all.value() * 100) + \"%)\"; });\n    ```\n\n    **/\n    _chart.label = function (_) {\n        if (!arguments.length) return _label;\n        _label = _;\n        _renderLabel = true;\n        return _chart;\n    };\n\n    /**\n    #### .renderLabel(boolean)\n    Turn on/off label rendering\n\n    **/\n    _chart.renderLabel = function (_) {\n        if (!arguments.length) return _renderLabel;\n        _renderLabel = _;\n        return _chart;\n    };\n\n    /**\n    #### .title([titleFunction])\n    Set or get the title function. Chart class will use this function to render svg title(usually interrupted by browser\n    as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart. Almost\n    every chart supports title function however in grid coordinate chart you need to turn off brush in order to use title\n    otherwise the brush layer will block tooltip trigger.\n    ```js\n    // default title function just return the key\n    chart.title(function(d) { return d.key + \": \" + d.value; });\n    // title function has access to the standard d3 data binding and can get quite complicated\n    chart.title(function(p) {\n        return p.key.getFullYear()\n            + \"\\n\"\n            + \"Index Gain: \" + numberFormat(p.value.absGain) + \"\\n\"\n            + \"Index Gain in Percentage: \" + numberFormat(p.value.percentageGain) + \"%\\n\"\n            + \"Fluctuation / Index Ratio: \" + numberFormat(p.value.fluctuationPercentage) + \"%\";\n    });\n    ```\n\n    **/\n    _chart.title = function (_) {\n        if (!arguments.length) return _title;\n        _title = _;\n        _renderTitle = true;\n        return _chart;\n    };\n\n    /**\n    #### .renderTitle(boolean)\n    Turn on/off title rendering\n\n    **/\n    _chart.renderTitle = function (_) {\n        if (!arguments.length) return _renderTitle;\n        _renderTitle = _;\n        return _chart;\n    };\n\n    /**\n    #### .renderlet(renderletFunction)\n    Renderlet is similar to an event listener on rendering event. Multiple renderlets can be added to an individual chart.\n    Every time when chart is rerendered or redrawn renderlet then will be invoked right after the chart finishes its own\n    drawing routine hence given you a way to override or modify certain behaviour. Renderlet function accepts the chart\n    instance as the only input parameter and you can either rely on dc API or use raw d3 to achieve pretty much any effect.\n    ```js\n    // renderlet function\n    chart.renderlet(function(chart){\n        // mix of dc API and d3 manipulation\n        chart.select(\"g.y\").style(\"display\", \"none\");\n        // its a closure so you can also access other chart variable available in the closure scope\n        moveChart.filter(chart.filter());\n    });\n    ```\n\n    **/\n    _chart.renderlet = function (_) {\n        _renderlets.push(_);\n        return _chart;\n    };\n\n    function runAllRenderlets() {\n        for (var i = 0; i < _renderlets.length; ++i) {\n            _renderlets[i](_chart);\n        }\n    }\n\n    _chart.chartGroup = function (_) {\n        if (!arguments.length) return _chartGroup;\n        _chartGroup = _;\n        return _chart;\n    };\n\n    /**\n    #### .expireCache()\n    Expire internal chart cache. dc.js chart cache some data internally on a per chart basis so it can speed up rendering\n    and avoid unnecessary calculation however under certain circumstances it might be useful to clear the cache e.g. after\n    you invoke crossfilter.add function or if you reset group or dimension post render it is always a good idea to clear\n    the cache to make sure charts are rendered properly.\n\n    **/\n    _chart.expireCache = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    /**\n    #### .legend([dc.legend])\n    Attach dc.legend widget to this chart. Legend widget will automatically draw legend labels based on the color setting\n    and names associated with each group.\n\n    ```js\n    chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n    ```\n\n    **/\n    _chart.legend = function (l) {\n        if (!arguments.length) return _legend;\n        _legend = l;\n        _legend.parent(_chart);\n        return _chart;\n    };\n\n    /**\n    ## <a name=\"listeners\" href=\"#listeners\">#</a> Listeners\n    All dc chart instance supports the following listeners.\n\n    #### .on(\"preRender\", function(chart){...})\n    This listener function will be invoked before chart rendering.\n\n    #### .on(\"postRender\", function(chart){...})\n    This listener function will be invoked after chart finish rendering including all renderlets' logic.\n\n    #### .on(\"preRedraw\", function(chart){...})\n    This listener function will be invoked before chart redrawing.\n\n    #### .on(\"postRedraw\", function(chart){...})\n    This listener function will be invoked after chart finish redrawing including all renderlets' logic.\n\n    #### .on(\"filtered\", function(chart, filter){...})\n    This listener function will be invoked after a filter is applied, added or removed.\n\n    #### .on(\"zoomed\", function(chart, filter){...})\n    This listener function will be invoked after a zoom is triggered.\n\n    **/\n    _chart.on = function (event, listener) {\n        _listeners[event] = listener;\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n## <a name=\"marginable\" href=\"#marginable\">#</a>  Marginable\n\nMarginable is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid Charts.\n\n**/\ndc.marginable = function (_chart) {\n    var _margin = {top: 10, right: 50, bottom: 30, left: 30};\n\n    /**\n    #### .margins([margins])\n    Get or set the margins for a particular coordinate grid chart instance. The margins is stored as an associative Javascript\n    array. Default margins: {top: 10, right: 50, bottom: 30, left: 30}.\n\n    The margins can be accessed directly from the getter.\n    ```js\n    var leftMargin = chart.margins().left; // 30 by default\n    chart.margins().left = 50;\n    leftMargin = chart.margins().left; // now 50\n    ```\n\n    **/\n    _chart.margins = function (m) {\n        if (!arguments.length) return _margin;\n        _margin = m;\n        return _chart;\n    };\n\n    _chart.effectiveWidth = function () {\n        return _chart.width() - _chart.margins().left - _chart.margins().right;\n    };\n\n    _chart.effectiveHeight = function () {\n        return _chart.height() - _chart.margins().top - _chart.margins().bottom;\n    };\n\n    return _chart;\n};\n\n/**\n## <a name=\"coordinate-grid-chart\" href=\"#coordinate-grid-chart\">#</a> CoordinateGrid Chart [Abstract] < [Color Chart](#color-chart) < [Base Chart](#base-chart)\nCoordinate grid chart is an abstract base chart designed to support a number of coordinate grid based concrete chart types,\ni.e. bar chart, line chart, and bubble chart.\n\n**/\ndc.coordinateGridChart = function (_chart) {\n    var GRID_LINE_CLASS = \"grid-line\";\n    var HORIZONTAL_CLASS = \"horizontal\";\n    var VERTICAL_CLASS = \"vertical\";\n    var Y_AXIS_LABEL_CLASS = 'y-axis-label';\n    var X_AXIS_LABEL_CLASS = 'x-axis-label';\n    var DEFAULT_AXIS_LABLEL_PADDING = 12;\n\n    _chart = dc.colorChart(dc.marginable(dc.baseChart(_chart)));\n\n    _chart.colors(d3.scale.category10());\n\n    var _parent;\n    var _g;\n    var _chartBodyG;\n\n    var _x;\n    var _xOriginalDomain;\n    var _xAxis = d3.svg.axis();\n    var _xUnits = dc.units.integers;\n    var _xAxisPadding = 0;\n    var _xElasticity = false;\n    var _xAxisLabel;\n    var _xAxisLabelPadding = 0;\n\n    var _y;\n    var _yAxis = d3.svg.axis();\n    var _yAxisPadding = 0;\n    var _yElasticity = false;\n    var _yAxisLabel;\n    var _yAxisLabelPadding = 0;\n\n    var _brush = d3.svg.brush();\n    var _brushOn = true;\n    var _round;\n\n    var _renderHorizontalGridLine = false;\n    var _renderVerticalGridLine = false;\n\n    var _refocused = false;\n    var _unitCount;\n\n    var _zoomScale = [-10, 100];  // -10 to allow zoom out of the original domain\n    var _zoomOutRestrict = true; // restrict zoomOut to the original domain?\n\n    var _rangeChart;\n    var _focusChart;\n\n    var _mouseZoomable = false;\n    var _clipPadding = 0;\n\n    _chart.title(function (d) {\n        return d.data.key + \": \" + d.data.value;\n    });\n\n    _chart.rescale = function () {\n        _unitCount = undefined;\n        _chart.xUnitCount();\n    };\n\n    /**\n    #### .rangeChart([chart])\n    Get or set the range selection chart associated with this instance. Setting the range selection chart using this function\n    will automatically update its selection brush when the current chart zooms in. In return the given range chart will also\n    automatically attach this chart as its focus chart hence zoom in when range brush updates. See the\n    [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/) example for this effect in action.\n\n    **/\n    _chart.rangeChart = function (_) {\n        if (!arguments.length) return _rangeChart;\n        _rangeChart = _;\n        _rangeChart.focusChart(_chart);\n        return _chart;\n    };\n\n    /**\n    #### .zoomScale([extent])\n    Get or set the scale extent for mouse zooms.\n\n    **/\n    _chart.zoomScale = function (_) {\n        if (!arguments.length) return _zoomScale;\n        _zoomScale = _;\n        return _chart;\n    };\n\n    /**\n    #### .zoomOutRestrict([true/false])\n    Get or set the a zoom restriction to be limited at the origional extent of the range chart\n    **/\n    _chart.zoomOutRestrict = function (_) {\n        if (!arguments.length) return _zoomOutRestrict;\n        _zoomOutRestrict = _;\n        return _chart;\n    };\n\n    _chart._generateG = function (parent) {\n        if (parent === undefined)\n            _parent = _chart.svg();\n        else\n            _parent = parent;\n\n        _g = _parent.append(\"g\");\n\n        _chartBodyG = _g.append(\"g\").attr(\"class\", \"chart-body\")\n            .attr(\"transform\", \"translate(\" + _chart.margins().left + \", \" + _chart.margins().top + \")\")\n            .attr(\"clip-path\", \"url(#\" + getClipPathId() + \")\");\n\n        return _g;\n    };\n\n    /**\n    #### .g([gElement])\n    Get or set the root g element. This method is usually used to retrieve the g element in order to overlay custom svg drawing\n    programatically. **Caution**: The root g element is usually generated by dc.js internals, and resetting it might produce unpredictable result.\n\n    **/\n    _chart.g = function (_) {\n        if (!arguments.length) return _g;\n        _g = _;\n        return _chart;\n    };\n\n    /**\n    #### .mouseZoomable([boolean])\n    Set or get mouse zoom capability flag (default: false). When turned on the chart will be zoomable through mouse wheel\n     . If range selector chart is also attached zooming will also update the range selection brush on associated range\n     selector chart.\n\n    **/\n    _chart.mouseZoomable = function (z) {\n        if (!arguments.length) return _mouseZoomable;\n        _mouseZoomable = z;\n        return _chart;\n    };\n\n    /**\n    #### .chartBodyG()\n    Retreive the svg group for the chart body.\n    **/\n    _chart.chartBodyG = function (_) {\n        if (!arguments.length) return _chartBodyG;\n        _chartBodyG = _;\n        return _chart;\n    };\n\n    /**\n    #### .x([xScale]) - **mandatory**\n    Get or set the x scale. x scale could be any [d3 quatitive scales](https://github.com/mbostock/d3/wiki/Quantitative-Scales).\n    For example a time scale for histogram or a linear/ordinal scale for visualizing data distribution.\n    ```js\n    // set x to a linear scale\n    chart.x(d3.scale.linear().domain([-2500, 2500]))\n    // set x to a time scale to generate histogram\n    chart.x(d3.time.scale().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\n    ```\n\n    **/\n    _chart.x = function (_) {\n        if (!arguments.length) return _x;\n        _x = _;\n        _xOriginalDomain = _x.domain();\n        return _chart;\n    };\n\n    _chart.xOriginalDomain = function () {\n        return _xOriginalDomain;\n    };\n\n    /**\n    #### .xUnits([xUnits function])\n    Set or get the xUnits function. xUnits function is the coordinate grid chart uses to calculate number of data\n    projections on x axis such as number bars for a bar chart and number of dots for a line chart. This function is\n    expected to return an Javascript array of all data points on x axis. d3 time range functions d3.time.days, d3.time.months,\n    and d3.time.years are all valid xUnits function. dc.js also provides a few units function, see [Utilities](#util)\n    section for a list of built-in units functions. Default xUnits function is dc.units.integers.\n    ```js\n    // set x units to day for a histogram\n    chart.xUnits(d3.time.days);\n    // set x units to month for a histogram\n    chart.xUnits(d3.time.months);\n    ```\n    Custom xUnits function can be easily created using as long as it follows the following inteface:\n    ```js\n    // units in integer\n    function(start, end, xDomain) {\n        // simply calculates how many integers in the domain\n        return Math.abs(end - start);\n    };\n\n    // fixed units\n    function(start, end, xDomain) {\n        // be aware using fixed units will disable the focus/zoom ability on the chart\n        return 1000;\n    };\n    ```\n\n    **/\n    _chart.xUnits = function (_) {\n        if (!arguments.length) return _xUnits;\n        _xUnits = _;\n        return _chart;\n    };\n\n    /**\n    #### .xAxis([xAxis])\n    Set or get the x axis used by a particular coordinate grid chart instance. This function is most useful when certain x\n    axis customization is required. x axis in dc.js is simply an instance of\n    [d3 axis object](https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-_axis) therefore it supports any valid d3 axis\n    manipulation. **Caution**: The x axis is typically generated by dc chart internal, resetting it might cause unexpected\n    outcome.\n    ```js\n    // customize x axis tick format\n    chart.xAxis().tickFormat(function(v) {return v + \"%\";});\n    // customize x axis tick values\n    chart.xAxis().tickValues([0, 100, 200, 300]);\n    ```\n\n    **/\n    _chart.xAxis = function (_) {\n        if (!arguments.length) return _xAxis;\n        _xAxis = _;\n        return _chart;\n    };\n\n    /**\n    #### .elasticX([boolean])\n    Turn on/off elastic x axis. If x axis elasticity is turned on, then the grid chart will attempt to generate and\n    recalculate x axis range whenever redraw event is triggered.\n\n    **/\n    _chart.elasticX = function (_) {\n        if (!arguments.length) return _xElasticity;\n        _xElasticity = _;\n        return _chart;\n    };\n\n    /**\n    #### .xAxisPadding([padding])\n    Set or get x axis padding when elastic x axis is turned on. The padding will be added to both end of the x axis if and\n    only if elasticX is turned on otherwise it will be simply ignored.\n\n    * padding - could be integer or percentage in string (e.g. \"10%\"). Padding can be applied to number or date.\n    When padding with date, integer represents number of days being padded while percentage string will be treated\n    as number.\n\n    **/\n    _chart.xAxisPadding = function (_) {\n        if (!arguments.length) return _xAxisPadding;\n        _xAxisPadding = _;\n        return _chart;\n    };\n\n    _chart.xUnitCount = function () {\n        if (_unitCount === undefined) {\n            var units = _chart.xUnits()(_chart.x().domain()[0], _chart.x().domain()[1], _chart.x().domain());\n\n            if (units instanceof Array)\n                _unitCount = units.length;\n            else\n                _unitCount = units;\n        }\n\n        return _unitCount;\n    };\n\n    _chart.isOrdinal = function () {\n        return _chart.xUnits() === dc.units.ordinal;\n    };\n\n    _chart.prepareOrdinalXAxis = function (count) {\n        if (!count)\n            count = _chart.xUnitCount();\n        var range = [];\n        var increment = _chart.xAxisLength() / (count + 1);\n        var currentPosition = increment/2;\n        for (var i = 0; i < count; i++) {\n            range[i] = currentPosition;\n            currentPosition += increment;\n        }\n        _x.range(range);\n    };\n\n    function prepareXAxis(g) {\n        if (_chart.elasticX() && !_chart.isOrdinal()) {\n            _x.domain([_chart.xAxisMin(), _chart.xAxisMax()]);\n        }\n        else if (_chart.isOrdinal() && _x.domain().length===0) {\n            _x.domain(_chart.computeOrderedGroups().map(function(kv) { return kv.key; }));\n        }\n\n        if (_chart.isOrdinal()) {\n            _chart.prepareOrdinalXAxis();\n        } else {\n            _x.range([0, _chart.xAxisLength()]);\n        }\n\n        _xAxis = _xAxis.scale(_chart.x()).orient(\"bottom\");\n\n        renderVerticalGridLines(g);\n    }\n\n    _chart.renderXAxis = function (g) {\n        var axisXG = g.selectAll(\"g.x\");\n\n        if (axisXG.empty())\n            axisXG = g.append(\"g\")\n                .attr(\"class\", \"axis x\")\n                .attr(\"transform\", \"translate(\" + _chart.margins().left + \",\" + _chart.xAxisY() + \")\");\n\n        var axisXLab = g.selectAll(\"text.\"+X_AXIS_LABEL_CLASS);\n        if (axisXLab.empty() && _chart.xAxisLabel())\n        axisXLab = g.append('text')\n            .attr(\"transform\", \"translate(\" + _chart.xAxisLength() / 2 + \",\" + (_chart.height() - _xAxisLabelPadding) + \")\")\n            .attr('class', X_AXIS_LABEL_CLASS)\n            .attr('text-anchor', 'middle')\n            .text(_chart.xAxisLabel());\n        if (_chart.xAxisLabel() && axisXLab.text() != _chart.xAxisLabel())\n            axisYLab.text(_chart.xAxisLabel());\n\n        dc.transition(axisXG, _chart.transitionDuration())\n            .call(_xAxis);\n    };\n\n    function renderVerticalGridLines(g) {\n        var gridLineG = g.selectAll(\"g.\" + VERTICAL_CLASS);\n\n        if (_renderVerticalGridLine) {\n            if (gridLineG.empty())\n                gridLineG = g.insert(\"g\", \":first-child\")\n                    .attr(\"class\", GRID_LINE_CLASS + \" \" + VERTICAL_CLASS)\n                    .attr(\"transform\", \"translate(\" + _chart.yAxisX() + \",\" + _chart.margins().top + \")\");\n\n            var ticks = _xAxis.tickValues() ? _xAxis.tickValues() : _x.ticks(_xAxis.ticks()[0]);\n\n            var lines = gridLineG.selectAll(\"line\")\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append(\"line\")\n                .attr(\"x1\", function (d) {\n                    return _x(d);\n                })\n                .attr(\"y1\", _chart.xAxisY() - _chart.margins().top)\n                .attr(\"x2\", function (d) {\n                    return _x(d);\n                })\n                .attr(\"y2\", 0)\n                .attr(\"opacity\", 0);\n            dc.transition(linesGEnter, _chart.transitionDuration())\n                .attr(\"opacity\", 1);\n\n            // update\n            dc.transition(lines, _chart.transitionDuration())\n                .attr(\"x1\", function (d) {\n                    return _x(d);\n                })\n                .attr(\"y1\", _chart.xAxisY() - _chart.margins().top)\n                .attr(\"x2\", function (d) {\n                    return _x(d);\n                })\n                .attr(\"y2\", 0);\n\n            // exit\n            lines.exit().remove();\n        }\n        else {\n            gridLineG.selectAll(\"line\").remove();\n        }\n    }\n\n    _chart.xAxisY = function () {\n        return (_chart.height() - _chart.margins().bottom);\n    };\n\n    _chart.xAxisLength = function () {\n        return _chart.effectiveWidth();\n    };\n\n    _chart.xAxisLabel = function (_,pad) {\n        if (!arguments.length) return _xAxisLabel;\n        _xAxisLabel = _;\n        _chart.margins().bottom -= _xAxisLabelPadding;\n        _xAxisLabelPadding = (pad===undefined) ? DEFAULT_AXIS_LABLEL_PADDING : pad;\n        _chart.margins().bottom += _xAxisLabelPadding;\n        return _chart;\n    };\n\n    function prepareYAxis(g) {\n        if (_y === undefined || _chart.elasticY()) {\n            _y = d3.scale.linear();\n            _y.domain([_chart.yAxisMin(), _chart.yAxisMax()]).rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _y.range([_chart.yAxisHeight(), 0]);\n        _yAxis = _yAxis.scale(_y).orient(\"left\");\n\n        renderHorizontalGridLines(g);\n    }\n\n    _chart.renderYAxis = function (g) {\n        var axisYG = g.selectAll(\"g.y\");\n        if (axisYG.empty())\n            axisYG = g.append(\"g\")\n                .attr(\"class\", \"axis y\")\n                .attr(\"transform\", \"translate(\" + _chart.yAxisX() + \",\" + _chart.margins().top + \")\");\n\n        var axisYLab = g.selectAll(\"text.\"+Y_AXIS_LABEL_CLASS);\n        if (axisYLab.empty() && _chart.yAxisLabel())\n        axisYLab = g.append('text')\n            .attr(\"transform\", \"translate(\" + _yAxisLabelPadding + \",\" + _chart.yAxisHeight()/2 + \"),rotate(-90)\")\n            .attr('class', Y_AXIS_LABEL_CLASS)\n            .attr('text-anchor', 'middle')\n            .text(_chart.yAxisLabel());\n        if (_chart.yAxisLabel() && axisYLab.text() != _chart.yAxisLabel())\n            axisYLab.text(_chart.yAxisLabel());\n\n        dc.transition(axisYG, _chart.transitionDuration())\n            .call(_yAxis);\n    };\n\n\n    function renderHorizontalGridLines(g) {\n        var gridLineG = g.selectAll(\"g.\" + HORIZONTAL_CLASS);\n\n        if (_renderHorizontalGridLine) {\n            var ticks = _yAxis.tickValues() ? _yAxis.tickValues() : _y.ticks(_yAxis.ticks()[0]);\n\n            if (gridLineG.empty())\n                gridLineG = g.insert(\"g\", \":first-child\")\n                    .attr(\"class\", GRID_LINE_CLASS + \" \" + HORIZONTAL_CLASS)\n                    .attr(\"transform\", \"translate(\" + _chart.yAxisX() + \",\" + _chart.margins().top + \")\");\n\n            var lines = gridLineG.selectAll(\"line\")\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append(\"line\")\n                .attr(\"x1\", 1)\n                .attr(\"y1\", function (d) {\n                    return _y(d);\n                })\n                .attr(\"x2\", _chart.xAxisLength())\n                .attr(\"y2\", function (d) {\n                    return _y(d);\n                })\n                .attr(\"opacity\", 0);\n            dc.transition(linesGEnter, _chart.transitionDuration())\n                .attr(\"opacity\", 1);\n\n            // update\n            dc.transition(lines, _chart.transitionDuration())\n                .attr(\"x1\", 1)\n                .attr(\"y1\", function (d) {\n                    return _y(d);\n                })\n                .attr(\"x2\", _chart.xAxisLength())\n                .attr(\"y2\", function (d) {\n                    return _y(d);\n                });\n\n            // exit\n            lines.exit().remove();\n        }\n        else {\n            gridLineG.selectAll(\"line\").remove();\n        }\n    }\n\n    _chart.yAxisX = function () {\n        return _chart.margins().left;\n    };\n\n    _chart.yAxisLabel = function (_,pad) {\n        if (!arguments.length) return _yAxisLabel;\n        _yAxisLabel = _;\n        _chart.margins().left -= _yAxisLabelPadding;\n        _yAxisLabelPadding = (pad===undefined) ? DEFAULT_AXIS_LABLEL_PADDING : pad;\n        _chart.margins().left += _yAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n    #### .y([yScale])\n    Get or set the y scale. y scale is typically automatically generated by the chart implementation.\n\n    **/\n    _chart.y = function (_) {\n        if (!arguments.length) return _y;\n        _y = _;\n        return _chart;\n    };\n\n    /**\n    #### .yAxis([yAxis])\n    Set or get the y axis used by a particular coordinate grid chart instance. This function is most useful when certain y\n    axis customization is required. y axis in dc.js is simply an instance\n    of [d3 axis object](https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-_axis) therefore it supports any valid d3 axis\n    manipulation. **Caution**: The y axis is typically generated by dc chart internal, resetting it might cause unexpected\n    outcome.\n    ```js\n    // customize y axis tick format\n    chart.yAxis().tickFormat(function(v) {return v + \"%\";});\n    // customize y axis tick values\n    chart.yAxis().tickValues([0, 100, 200, 300]);\n    ```\n\n    **/\n    _chart.yAxis = function (y) {\n        if (!arguments.length) return _yAxis;\n        _yAxis = y;\n        return _chart;\n    };\n\n    /**\n    #### .elasticY([boolean])\n    Turn on/off elastic y axis. If y axis elasticity is turned on, then the grid chart will attempt to generate and recalculate\n    y axis range whenever redraw event is triggered.\n\n    **/\n    _chart.elasticY = function (_) {\n        if (!arguments.length) return _yElasticity;\n        _yElasticity = _;\n        return _chart;\n    };\n\n    /**\n    #### .renderHorizontalGridLines([boolean])\n    Turn on/off horizontal grid lines.\n\n    **/\n    _chart.renderHorizontalGridLines = function (_) {\n        if (!arguments.length) return _renderHorizontalGridLine;\n        _renderHorizontalGridLine = _;\n        return _chart;\n    };\n\n    /**\n    #### .renderVerticalGridLines([boolean])\n    Turn on/off vertical grid lines.\n\n    **/\n    _chart.renderVerticalGridLines = function (_) {\n        if (!arguments.length) return _renderVerticalGridLine;\n        _renderVerticalGridLine = _;\n        return _chart;\n    };\n\n    _chart.xAxisMin = function () {\n        var min = d3.min(_chart.group().all(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.subtract(min, _xAxisPadding);\n    };\n\n    _chart.xAxisMax = function () {\n        var max = d3.max(_chart.group().all(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.add(max, _xAxisPadding);\n    };\n\n    _chart.yAxisMin = function () {\n        var min = d3.min(_chart.group().all(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        min = dc.utils.subtract(min, _yAxisPadding);\n        return min;\n    };\n\n    _chart.yAxisMax = function () {\n        var max = d3.max(_chart.group().all(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        max = dc.utils.add(max, _yAxisPadding);\n        return max;\n    };\n\n    /**\n    #### .yAxisPadding([padding])\n    Set or get y axis padding when elastic y axis is turned on. The padding will be added to the top of the y axis if and only\n    if elasticY is turned on otherwise it will be simply ignored.\n\n    * padding - could be integer or percentage in string (e.g. \"10%\"). Padding can be applied to number or date.\n    When padding with date, integer represents number of days being padded while percentage string will be treated\n    as number.\n\n    **/\n    _chart.yAxisPadding = function (_) {\n        if (!arguments.length) return _yAxisPadding;\n        _yAxisPadding = _;\n        return _chart;\n    };\n\n    _chart.yAxisHeight = function () {\n        return _chart.effectiveHeight();\n    };\n\n    /**\n    #### .round([rounding function])\n    Set or get the rounding function for x axis. Rounding is mainly used to provide stepping capability when in place\n    selection based filter is enable.\n    ```js\n    // set x unit round to by month, this will make sure range selection brash will\n    // extend on a month-by-month basis\n    chart.round(d3.time.month.round);\n    ```\n\n    **/\n    _chart.round = function (_) {\n        if (!arguments.length) return _round;\n        _round = _;\n        return _chart;\n    };\n\n    dc.override(_chart, \"filter\", function (_) {\n        if (!arguments.length) return _chart._filter();\n\n        _chart._filter(_);\n\n        if (_) {\n            _chart.brush().extent(_);\n        } else {\n            _chart.brush().clear();\n        }\n\n        return _chart;\n    });\n\n    _chart.brush = function (_) {\n        if (!arguments.length) return _brush;\n        _brush = _;\n        return _chart;\n    };\n\n    function brushHeight() {\n        return _chart.xAxisY() - _chart.margins().top;\n    }\n\n    _chart.renderBrush = function (g) {\n        if (_chart.isOrdinal())\n            _brushOn = false;\n\n        if (_brushOn) {\n            _brush.on(\"brush\", brushing)\n\n            var gBrush = g.append(\"g\")\n                .attr(\"class\", \"brush\")\n                .attr(\"transform\", \"translate(\" + _chart.margins().left + \",\" + _chart.margins().top + \")\")\n                .call(_brush.x(_chart.x()));\n            gBrush.selectAll(\"rect\").attr(\"height\", brushHeight());\n            gBrush.selectAll(\".resize\").append(\"path\").attr(\"d\", _chart.resizeHandlePath);\n\n            if (_chart.hasFilter()) {\n                _chart.redrawBrush(g);\n            }\n        }\n    };\n\n    _chart.extendBrush = function () {\n        var extent = _brush.extent();\n        if (_chart.round()) {\n            extent[0] = extent.map(_chart.round())[0];\n            extent[1] = extent.map(_chart.round())[1];\n\n            _g.select(\".brush\")\n                .call(_brush.extent(extent));\n        }\n        return extent;\n    };\n\n    _chart.brushIsEmpty = function (extent) {\n        return _brush.empty() || !extent || extent[1] <= extent[0];\n    };\n\n    function brushing(p) {\n        var extent = _chart.extendBrush();\n\n        _chart.redrawBrush(_g);\n\n        if (_chart.brushIsEmpty(extent)) {\n            dc.events.trigger(function () {\n                _chart.filter(null);\n                dc.redrawAll(_chart.chartGroup());\n            });\n        } else {\n            dc.events.trigger(function () {\n                _chart.filter(null);\n                _chart.filter([extent[0], extent[1]]);\n                dc.redrawAll(_chart.chartGroup());\n            }, dc.constants.EVENT_DELAY);\n        }\n    }\n\n    _chart.redrawBrush = function (g) {\n        if (_brushOn) {\n            if (_chart.filter() && _chart.brush().empty())\n                _chart.brush().extent(_chart.filter());\n\n            var gBrush = g.select(\"g.brush\");\n            gBrush.call(_chart.brush().x(_chart.x()));\n            gBrush.selectAll(\"rect\").attr(\"height\", brushHeight());\n        }\n\n        _chart.fadeDeselectedArea();\n    };\n\n    _chart.fadeDeselectedArea = function () {\n        // do nothing, sub-chart should override this function\n    };\n\n    // borrowed from Crossfilter example\n    _chart.resizeHandlePath = function (d) {\n        var e = +(d == \"e\"), x = e ? 1 : -1, y = brushHeight() / 3;\n        return \"M\" + (0.5 * x) + \",\" + y\n            + \"A6,6 0 0 \" + e + \" \" + (6.5 * x) + \",\" + (y + 6)\n            + \"V\" + (2 * y - 6)\n            + \"A6,6 0 0 \" + e + \" \" + (0.5 * x) + \",\" + (2 * y)\n            + \"Z\"\n            + \"M\" + (2.5 * x) + \",\" + (y + 8)\n            + \"V\" + (2 * y - 8)\n            + \"M\" + (4.5 * x) + \",\" + (y + 8)\n            + \"V\" + (2 * y - 8);\n    };\n\n    function getClipPathId() {\n        return _chart.anchorName() + \"-clip\";\n    }\n\n    /**\n    #### .clipPadding([padding])\n    Get or set padding in pixel for clip path. Once set padding will be applied evenly to top, left, right, and bottom padding\n     when clip path is generated. If set to zero, then the clip area will be exactly the chart body area minus the margins.\n     Default: 5\n\n    **/\n    _chart.clipPadding = function (p) {\n        if (!arguments.length) return _clipPadding;\n        _clipPadding = p;\n        return _chart;\n    };\n\n    function generateClipPath() {\n        var defs = dc.utils.appendOrSelect(_parent, \"defs\");\n\n        var chartBodyClip = dc.utils.appendOrSelect(defs, \"clipPath\").attr(\"id\", getClipPathId());\n\n        var padding = _clipPadding * 2;\n\n        dc.utils.appendOrSelect(chartBodyClip, \"rect\")\n            .attr(\"width\", _chart.xAxisLength() + padding)\n            .attr(\"height\", _chart.yAxisHeight() + padding);\n    }\n\n    _chart.doRender = function () {\n        if (_x === undefined)\n            throw new dc.errors.InvalidStateException(\"Mandatory attribute chart.x is missing on chart[#\"\n                + _chart.anchorName() + \"]\");\n\n        _chart.resetSvg();\n\n        if (_chart.dataSet()) {\n            _chart._generateG();\n\n            generateClipPath();\n            prepareXAxis(_chart.g());\n            prepareYAxis(_chart.g());\n\n            _chart.plotData();\n\n            _chart.renderXAxis(_chart.g());\n            _chart.renderYAxis(_chart.g());\n\n            _chart.renderBrush(_chart.g());\n\n            enableMouseZoom();\n        }\n\n        return _chart;\n    };\n\n    function enableMouseZoom() {\n        if (_mouseZoomable) {\n            _chart.root().call(d3.behavior.zoom()\n                .x(_chart.x())\n                .scaleExtent(_zoomScale)\n                .on(\"zoom\", function () {\n                    _chart.focus(_chart.x().domain());\n                    _chart._invokeZoomedListener();\n                    updateRangeSelChart();\n                }));\n        }\n    }\n\n    function updateRangeSelChart() {\n        if (_rangeChart) {\n            var refDom = _chart.x().domain();\n            if (_zoomOutRestrict) {\n                var origDom = _rangeChart.xOriginalDomain();\n                var newDom = [\n                  refDom[0] < origDom[0] ? refDom[0] : origDom[0],\n                  refDom[1] > origDom[1] ? refDom[1] : origDom[1]];\n                _rangeChart.focus(newDom);\n            } else {\n              _rangeChart.focus(refDom);\n            }\n            _rangeChart.filter(null);\n            _rangeChart.filter(refDom);\n\n            dc.events.trigger(function () {\n                dc.redrawAll(_chart.chartGroup());\n            });\n        }\n    }\n\n    _chart.doRedraw = function () {\n        prepareXAxis(_chart.g());\n        prepareYAxis(_chart.g());\n\n        _chart.plotData();\n\n        if (_chart.elasticY())\n            _chart.renderYAxis(_chart.g());\n\n        if (_chart.elasticX() || _refocused)\n            _chart.renderXAxis(_chart.g());\n\n        _chart.redrawBrush(_chart.g());\n\n        return _chart;\n    };\n\n    _chart.subRender = function () {\n        if (_chart.dataSet()) {\n            _chart.plotData();\n        }\n\n        return _chart;\n    };\n\n    /**\n    #### .brushOn([boolean])\n    Turn on/off the brush based in-place range filter. When the brush is on then user will be able to  simply drag the mouse\n    across the chart to perform range filtering based on the extend of the brush. However turning on brush filter will essentially\n    disable other interactive elements on the chart such as the highlighting, tool-tip, and reference lines on a chart. Default\n    value is \"true\".\n\n    **/\n    _chart.brushOn = function (_) {\n        if (!arguments.length) return _brushOn;\n        _brushOn = _;\n        return _chart;\n    };\n\n    function hasRangeSelected(range) {\n        return range instanceof Array && range.length > 1;\n    }\n\n    /**\n    #### .focus([range])\n    Zoom this chart to focus on the given range. The given range should be an array containing only 2 element([start, end]) defining an range in x domain. If the range is not given or set to null, then the zoom will be reset. _For focus to work elasticX has to be turned off otherwise focus will be ignored._\n    ```js\n    chart.renderlet(function(chart){\n        // smooth the rendering through event throttling\n        dc.events.trigger(function(){\n            // focus some other chart to the range selected by user on this chart\n            someOtherChart.focus(chart.filter());\n        });\n    })\n    ```\n\n    **/\n    _chart.focus = function (range) {\n        _refocused = true;\n\n        if (hasRangeSelected(range)) {\n            _chart.x().domain(range);\n        } else {\n            _chart.x().domain(_chart.xOriginalDomain());\n        }\n\n        _chart.rescale();\n\n        _chart.redraw();\n\n        if (!hasRangeSelected(range))\n            _refocused = false;\n    };\n\n    _chart.refocused = function () {\n        return _refocused;\n    };\n\n    _chart.focusChart = function (c) {\n        if (!arguments.length) return _focusChart;\n        _focusChart = c;\n        _chart.on(\"filtered\", function (chart) {\n            dc.events.trigger(function () {\n                _focusChart.focus(chart.filter());\n                _focusChart.filter(chart.filter());\n                dc.redrawAll(chart.chartGroup());\n            });\n        });\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n## <a name=\"color-chart\" href=\"#color-chart\">#</a> Color Chart [Abstract]\nColor chart is an abstract chart functional class created to provide universal coloring support as a mix-in for any concrete\nchart implementation.\n\n**/\n\ndc.colorChart = function(_chart) {\n    var _colors = d3.scale.category20c();\n\n    var _colorDomain = [0, _colors.range().length];\n\n    var _colorCalculator = function(value) {\n        var domain = _colorDomain;\n        if (typeof _colorDomain === 'function')\n            domain = _colorDomain.call(_chart);\n        var minValue = domain[0];\n        var maxValue = domain[1];\n\n        if (isNaN(value)) value = 0;\n        if (!dc.utils.isNumber(maxValue)) return _colors(value);\n\n        var colorsLength = _chart.colors().range().length;\n        var denominator = (maxValue - minValue) / colorsLength;\n        var colorValue = Math.abs(Math.min(colorsLength - 1, Math.round((value - minValue) / denominator)));\n        //var colorValue = Math.abs(Math.round((value - minValue) / denominator)) % colorsLength;\n        return _chart.colors()(colorValue);\n    };\n\n    var _colorAccessor = function(d, i){return i;};\n\n    /**\n    #### .colors([colorScale or colorArray])\n    Retrieve current color scale or set a new color scale. This function accepts both d3 color scale and arbitrary color\n    array. By default d3.scale.category20c() is used.\n    ```js\n    // color scale\n    chart.colors(d3.scale.category20b());\n    // arbitrary color array\n    chart.colors([\"#a60000\",\"#ff0000\", \"#ff4040\",\"#ff7373\",\"#67e667\",\"#39e639\",\"#00cc00\"]);\n    ```\n\n    **/\n    _chart.colors = function(_) {\n        if (!arguments.length) return _colors;\n\n        if (_ instanceof Array) {\n            _colors = d3.scale.ordinal().range(_);\n            var domain = [];\n            for(var i = 0; i < _.length; ++i){\n                domain.push(i);\n            }\n            _colors.domain(domain);\n        } else {\n            _colors = _;\n        }\n\n        _colorDomain = [0, _colors.range().length];\n\n        return _chart;\n    };\n\n    _chart.colorCalculator = function(_){\n        if(!arguments.length) return _colorCalculator;\n        _colorCalculator = _;\n        return _chart;\n    };\n\n    _chart.getColor = function(d, i){\n        return _colorCalculator(_colorAccessor(d, i));\n    };\n\n    /**\n    #### .colorAccessor([colorAccessorFunction])\n    Set or get color accessor function. This function will be used to map a data point on crossfilter group to a specific\n    color value on the color scale. Default implementation of this function simply returns the next color on the scale using\n    the index of a group.\n    ```js\n    // default index based color accessor\n    .colorAccessor(function(d, i){return i;})\n    // color accessor for a multi-value crossfilter reduction\n    .colorAccessor(function(d){return d.value.absGain;})\n    ```\n\n    **/\n    _chart.colorAccessor = function(_){\n        if(!arguments.length) return _colorAccessor;\n        _colorAccessor = _;\n        return _chart;\n    };\n\n    /**\n    #### .colorDomain([domain])\n    Set or get the current domain for the color mapping function. This allows user to provide a custom domain for the mapping\n    function used to map the return value of the colorAccessor function to the target color range calculated based on the\n    color scale. You value can either be an array with the start and end of the range or a function returning an array. Functions\n    are passed the chart in their `this` context.\n    ```js\n    // custom domain for month of year\n    chart.colorDomain([0, 11])\n    // custom domain for day of year\n    chart.colorDomain([0, 364])\n    // custom domain function that scales with the group value range\n    chart.colorDomain(function() {\n        [dc.utils.groupMin(this.group(), this.valueAccessor()),\n         dc.utils.groupMax(this.group(), this.valueAccessor())];\n    });\n    ```\n\n    **/\n    _chart.colorDomain = function(_){\n        if(!arguments.length) return _colorDomain;\n        _colorDomain = _;\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n## <a name=\"stackable-chart\" href=\"#stackable-chart\">#</a> Stackable Chart [Abstract]\nStackable chart is an abstract chart introduced to provide cross-chart support of stackability. Concrete implementation of\ncharts can then selectively mix-in this capability.\n\n**/\ndc.stackableChart = function (_chart) {\n    var _groupStack = new dc.utils.GroupStack();\n    var _stackLayout = d3.layout.stack()\n        .offset(\"zero\")\n        .order(\"default\")\n        .values(function (d) {\n            return d.points;\n        });\n    var _allGroups;\n    var _allValueAccessors;\n    var _allKeyAccessors;\n    var _stackLayers;\n\n    /**\n    #### .stack(group[, name, retriever])\n    Stack a new crossfilter group into this chart with optionally a custom value retriever. All stacks in the same chart will\n    share the same key accessor therefore share the same set of keys. In more concrete words, imagine in a stacked bar chart\n    all bars will be positioned using the same set of keys on the x axis while stacked vertically. If name is specified then\n    it will be used to generate legend label.\n    ```js\n    // stack group using default accessor\n    chart.stack(valueSumGroup)\n    // stack group using custom accessor\n    .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\n    ```\n\n    **/\n    _chart.stack = function (group, p2, retriever) {\n        if(!arguments.length)\n            _groupStack.clear();\n\n        if (typeof p2 === 'string')\n            _chart._setGroupName(group, p2, retriever);\n        else if (typeof p2 === 'function')\n            retriever = p2;\n\n        _groupStack.setDefaultAccessor(_chart.valueAccessor());\n        _groupStack.addGroup(group, retriever);\n\n        _chart.expireCache();\n\n        return _chart;\n    };\n\n    _chart.expireCache = function () {\n        _allGroups = null;\n        _allValueAccessors = null;\n        _allKeyAccessors = null;\n        _stackLayers = null;\n        return _chart;\n    };\n\n    _chart.allGroups = function () {\n        if (_allGroups === null) {\n            _allGroups = [];\n\n            _allGroups.push(_chart.group());\n\n            for (var i = 0; i < _groupStack.size(); ++i)\n                _allGroups.push(_groupStack.getGroupByIndex(i));\n        }\n\n        return _allGroups;\n    };\n\n    _chart.allValueAccessors = function () {\n        if (_allValueAccessors === null) {\n            _allValueAccessors = [];\n\n            _allValueAccessors.push(_chart.valueAccessor());\n\n            for (var i = 0; i < _groupStack.size(); ++i)\n                _allValueAccessors.push(_groupStack.getAccessorByIndex(i));\n        }\n\n        return _allValueAccessors;\n    };\n\n    _chart.getValueAccessorByIndex = function (groupIndex) {\n        return _chart.allValueAccessors()[groupIndex];\n    };\n\n    _chart.yAxisMin = function () {\n        var min, all = flattenStack();\n\n        min = d3.min(all, function (p) {\n            return  (p.y + p.y0 < p.y0) ? (p.y + p.y0) : p.y0;\n        });\n\n        min = dc.utils.subtract(min, _chart.yAxisPadding());\n\n        return min;\n    };\n\n    _chart.yAxisMax = function () {\n        var max, all = flattenStack();\n\n        max = d3.max(all, function (p) {\n            return p.y + p.y0;\n        });\n\n        max = dc.utils.add(max, _chart.yAxisPadding());\n\n        return max;\n    };\n\n    function flattenStack() {\n        var all = [];\n\n        if (_chart.x()) {\n            var xDomain = _chart.x().domain();\n            var test;\n            if(_chart.isOrdinal()) {\n                var domainSet = d3.set(xDomain);\n                test = function(p) {\n                    return domainSet.has(p.x);\n                };\n            }\n            else test = function(p) {\n                return p.x >= xDomain[0] && p.x <= xDomain[xDomain.length-1];\n            };\n            _chart.stackLayers().forEach(function (e) {\n                e.points.forEach(function (p) {\n                    if (test(p))\n                        all.push(p);\n                });\n            });\n        } else {\n            _chart.stackLayers().forEach(function (e) {\n                all = all.concat(e.points);\n            });\n        }\n\n        return all;\n    }\n\n    _chart.allKeyAccessors = function () {\n        if (_allKeyAccessors === null) {\n            _allKeyAccessors = [];\n\n            _allKeyAccessors.push(_chart.keyAccessor());\n\n            for (var i = 0; i < _groupStack.size(); ++i)\n                _allKeyAccessors.push(_chart.keyAccessor());\n        }\n\n        return _allKeyAccessors;\n    };\n\n    _chart.getKeyAccessorByIndex = function (groupIndex) {\n        return _chart.allKeyAccessors()[groupIndex];\n    };\n\n    _chart.xAxisMin = function () {\n        var min = null;\n        var allGroups = _chart.allGroups();\n\n        for (var groupIndex = 0; groupIndex < allGroups.length; ++groupIndex) {\n            var group = allGroups[groupIndex];\n            var m = dc.utils.groupMin(group, _chart.getKeyAccessorByIndex(groupIndex));\n            if (min === null || min > m) min = m;\n        }\n\n        return dc.utils.subtract(min, _chart.xAxisPadding());\n    };\n\n    _chart.xAxisMax = function () {\n        var max = null;\n        var allGroups = _chart.allGroups();\n\n        for (var groupIndex = 0; groupIndex < allGroups.length; ++groupIndex) {\n            var group = allGroups[groupIndex];\n            var m = dc.utils.groupMax(group, _chart.getKeyAccessorByIndex(groupIndex));\n            if (max === null || max < m) max = m;\n        }\n\n        return dc.utils.add(max, _chart.xAxisPadding());\n    };\n\n    function getKeyFromData(groupIndex, d) {\n        return _chart.getKeyAccessorByIndex(groupIndex)(d);\n    }\n\n    function getValueFromData(groupIndex, d) {\n        return _chart.getValueAccessorByIndex(groupIndex)(d);\n    }\n\n    function calculateDataPointMatrix(data, groupIndex) {\n        for (var dataIndex = 0; dataIndex < data.length; ++dataIndex) {\n            var d = data[dataIndex];\n            var key = getKeyFromData(groupIndex, d);\n            var value = getValueFromData(groupIndex, d);\n\n            _groupStack.setDataPoint(groupIndex, dataIndex, {data: d, x: key, y: value, layer: groupIndex});\n        }\n    }\n\n    _chart.calculateDataPointMatrixForAll = function () {\n        var groups = _chart.allGroups();\n        for (var groupIndex = 0; groupIndex < groups.length; ++groupIndex) {\n            var group = groups[groupIndex];\n            var data = group.all();\n\n            calculateDataPointMatrix(data, groupIndex);\n        }\n    };\n\n    _chart.getChartStack = function () {\n        return _groupStack;\n    };\n\n    dc.override(_chart, \"valueAccessor\", function (_) {\n        if (!arguments.length) return _chart._valueAccessor();\n        _chart.expireCache();\n        return _chart._valueAccessor(_);\n    });\n\n    dc.override(_chart, \"keyAccessor\", function (_) {\n        if (!arguments.length) return _chart._keyAccessor();\n        _chart.expireCache();\n        return _chart._keyAccessor(_);\n    });\n\n    _chart.stackLayout = function (stack) {\n        if (!arguments.length) return _stackLayout;\n        _stackLayout = stack;\n        return _chart;\n    };\n\n    _chart.stackLayers = function (_) {\n        if (!arguments.length) {\n            if (_stackLayers === null) {\n                _chart.calculateDataPointMatrixForAll();\n                _stackLayers = _chart.stackLayout()(_groupStack.toLayers());\n            }\n            return _stackLayers;\n        } else {\n            _stackLayers = _;\n        }\n    };\n\n    _chart.colorAccessor(function(d){return d.layer || d.index;});\n\n    _chart.legendables = function () {\n        var items = [];\n        _allGroups.forEach(function (g, i) {\n            items.push(dc.utils.createLegendable(_chart, g, i, _chart.getValueAccessorByIndex(i)));\n        });\n        return items;\n    };\n\n    return _chart;\n};\n\n/**\n## <a name=\"abstract-bubble-chart\" href=\"#abstract-bubble-chart\">#</a> Abstract Bubble Chart [Abstract] < [Color Chart](#color-chart)\nAn abstraction provides reusable functionalities for any chart that needs to visualize data using bubbles.\n\n**/\ndc.abstractBubbleChart = function (_chart) {\n    var _maxBubbleRelativeSize = 0.3;\n    var _minRadiusWithLabel = 10;\n\n    _chart.BUBBLE_NODE_CLASS = \"node\";\n    _chart.BUBBLE_CLASS = \"bubble\";\n    _chart.MIN_RADIUS = 10;\n\n    _chart = dc.colorChart(_chart);\n\n    _chart.renderLabel(true);\n    _chart.renderTitle(false);\n\n    var _r = d3.scale.linear().domain([0, 100]);\n\n    var _rValueAccessor = function (d) {\n        return d.r;\n    };\n\n    /**\n    #### .r([bubbleRadiusScale])\n    Get or set bubble radius scale. By default bubble chart uses ```d3.scale.linear().domain([0, 100])``` as it's r scale .\n\n    **/\n    _chart.r = function (_) {\n        if (!arguments.length) return _r;\n        _r = _;\n        return _chart;\n    };\n\n    /**\n    #### .radiusValueAccessor([radiusValueAccessor])\n    Get or set the radius value accessor function. The radius value accessor function if set will be used to retrieve data value\n    for each and every bubble rendered. The data retrieved then will be mapped using r scale to be used as the actual bubble\n    radius. In other words, this allows you to encode a data dimension using bubble size.\n\n    **/\n    _chart.radiusValueAccessor = function (_) {\n        if (!arguments.length) return _rValueAccessor;\n        _rValueAccessor = _;\n        return _chart;\n    };\n\n    _chart.rMin = function () {\n        var min = d3.min(_chart.group().all(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return min;\n    };\n\n    _chart.rMax = function () {\n        var max = d3.max(_chart.group().all(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return max;\n    };\n\n    _chart.bubbleR = function (d) {\n        var value = _chart.radiusValueAccessor()(d);\n        var r = _chart.r()(value);\n        if (isNaN(r) || value <= 0)\n            r = 0;\n        return r;\n    };\n\n    var labelFunction = function (d) {\n        return _chart.label()(d);\n    };\n\n    var labelOpacity = function (d) {\n        return (_chart.bubbleR(d) > _minRadiusWithLabel) ? 1 : 0;\n    };\n\n    _chart.doRenderLabel = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var label = bubbleGEnter.select(\"text\");\n\n            if (label.empty()) {\n                label = bubbleGEnter.append(\"text\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"dy\", \".3em\")\n                    .on(\"click\", _chart.onClick);\n            }\n\n            label\n                .attr(\"opacity\", 0)\n                .text(labelFunction);\n            dc.transition(label, _chart.transitionDuration())\n                .attr(\"opacity\", labelOpacity);\n        }\n    };\n\n    _chart.doUpdateLabels = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var labels = bubbleGEnter.selectAll(\"text\")\n                .text(labelFunction);\n            dc.transition(labels, _chart.transitionDuration())\n                .attr(\"opacity\", labelOpacity);\n        }\n    };\n\n    var titleFunction = function (d) {\n        return _chart.title()(d);\n    };\n\n    _chart.doRenderTitles = function (g) {\n        if (_chart.renderTitle()) {\n            var title = g.select(\"title\");\n\n            if (title.empty())\n                g.append(\"title\").text(titleFunction);\n        }\n    };\n\n    _chart.doUpdateTitles = function (g) {\n        if (_chart.renderTitle()) {\n            g.selectAll(\"title\").text(titleFunction);\n        }\n    };\n\n    /**\n    #### .minRadiusWithLabel([radius])\n    Get or set the minimum radius for label rendering. If a bubble's radius is less than this value then no label will be rendered.\n    Default value: 10.\n\n    **/\n    _chart.minRadiusWithLabel = function (_) {\n        if (!arguments.length) return _minRadiusWithLabel;\n        _minRadiusWithLabel = _;\n        return _chart;\n    };\n\n    /**\n    #### .maxBubbleRelativeSize([relativeSize])\n    Get or set the maximum relative size of a bubble to the length of x axis. This value is useful when the radius differences among\n    different bubbles are too great. Default value: 0.3\n\n    **/\n    _chart.maxBubbleRelativeSize = function (_) {\n        if (!arguments.length) return _maxBubbleRelativeSize;\n        _maxBubbleRelativeSize = _;\n        return _chart;\n    };\n\n    _chart.initBubbleColor = function (d, i) {\n        this[dc.constants.NODE_INDEX_NAME] = i;\n        return _chart.getColor(d, i);\n    };\n\n    _chart.updateBubbleColor = function (d, i) {\n        // a work around to get correct node index since\n        return _chart.getColor(d, this[dc.constants.NODE_INDEX_NAME]);\n    };\n\n    _chart.fadeDeselectedArea = function () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll(\"g.\" + _chart.BUBBLE_NODE_CLASS).each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll(\"g.\" + _chart.BUBBLE_NODE_CLASS).each(function (d) {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    _chart.onClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            dc.redrawAll(_chart.chartGroup());\n        });\n    };\n\n    return _chart;\n};\n\n/**\n## <a name=\"pie-chart\" href=\"#pie-chart\">#</a> Pie Chart [Concrete] < [Color Chart](#color-chart) < [Base Chart](#base-chart)\nThis chart is a concrete pie chart implementation usually used to visualize small number of categorical distributions.\nPie chart implementation uses keyAccessor to generate slices, and valueAccessor to calculate the size of each slice(key)\nrelatively to the total sum of all values.\n\nExamples:\n\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n\n#### dc.pieChart(parent[, chartGroup])\nCreate a pie chart instance and attach it to the given parent element.\n\nParameters:\n\n* parent : string - any valid d3 single selector representing typically a dom block element such\n   as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created pie chart instance\n\n```js\n// create a pie chart under #chart-container1 element using the default global chart group\nvar chart1 = dc.pieChart(\"#chart-container1\");\n// create a pie chart under #chart-container2 element using chart group A\nvar chart2 = dc.pieChart(\"#chart-container2\", \"chartGroupA\");\n```\n\n**/\ndc.pieChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = \"pie-slice\";\n\n    var _radius,\n        _innerRadius = 0;\n\n    var _g;\n\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n\n    var _chart = dc.capped(dc.colorChart(dc.baseChart({})));\n\n    /**\n    #### .slicesCap([cap])\n    Get or set the maximum number of slices the pie chart will generate. Slices are ordered by its value from high to low.\n     Other slices exeeding the cap will be rolled up into one single *Others* slice.\n\n    **/\n    _chart.slicesCap = _chart.cap;\n\n    _chart.label(function (d) {\n        return _chart.keyAccessor()(d.data);\n    });\n\n    _chart.renderLabel(true);\n\n    _chart.title(function (d) {\n        return _chart.keyAccessor()(d.data) + \": \" + _chart.valueAccessor()(d.data);\n    });\n\n    _chart.transitionDuration(350);\n\n    _chart.doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + _chart.cx() + \",\" + _chart.cy() + \")\");\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart() {\n        if (_chart.dataSet()) {\n            var pie = calculateDataPie();\n\n            // set radius on basis of chart dimension if missing\n            _radius = _radius ? _radius : d3.min([_chart.width(), _chart.height()]) /2;\n\n            var arc = _chart.buildArcs();\n\n            var pieData = pie(_chart.assembleCappedData());\n\n            if (_g) {\n                var slices = _g.selectAll(\"g.\" + _sliceCssClass)\n                    .data(pieData);\n\n                createElements(slices, arc, pieData);\n\n                updateElements(pieData, arc);\n\n                removeElements(slices);\n\n                highlightFilter();\n            }\n        }\n    }\n\n    function createElements(slices, arc, pieData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n\n        createTitles(slicesEnter);\n\n        createLabels(pieData, arc);\n    }\n\n    function createSliceNodes(slices) {\n        var slicesEnter = slices\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", function (d, i) {\n                return _sliceCssClass + \" _\" + i;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath(slicesEnter, arc) {\n        var slicePath = slicesEnter.append(\"path\")\n            .attr(\"fill\", function (d, i) {\n                return _chart.getColor(d, i);\n            })\n            .on(\"click\", onClick)\n            .attr(\"d\", function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        slicePath.transition()\n            .duration(_chart.transitionDuration())\n            .attrTween(\"d\", tweenPie);\n    }\n\n    function createTitles(slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append(\"title\").text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    function createLabels(pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll(\"text.\" + _sliceCssClass)\n                .data(pieData);\n\n            labels.exit().remove();\n\n            var labelsEnter = labels\n                .enter()\n                .append(\"text\")\n                .attr(\"class\", function (d, i) {\n                    return _sliceCssClass + \" _\" + i;\n                })\n                .on(\"click\", onClick);\n            dc.transition(labelsEnter, _chart.transitionDuration())\n                .attr(\"transform\", function (d) {\n                    d.innerRadius = _chart.innerRadius();\n                    d.outerRadius = _radius;\n                    var centroid = arc.centroid(d);\n                    if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n                        return \"translate(0,0)\";\n                    } else {\n                        return \"translate(\" + centroid + \")\";\n                    }\n                })\n                .attr(\"text-anchor\", \"middle\")\n                .text(function (d) {\n                    var data = d.data;\n                    if (sliceHasNoData(data) || sliceTooSmall(d))\n                        return \"\";\n                    return _chart.label()(d);\n                });\n        }\n    }\n\n    function updateElements(pieData, arc) {\n        updateSlicePaths(pieData, arc);\n        updateLabels(pieData, arc);\n        updateTitles(pieData);\n    }\n\n    function updateSlicePaths(pieData, arc) {\n        var slicePaths = _g.selectAll(\"g.\" + _sliceCssClass)\n            .data(pieData)\n            .select(\"path\")\n            .attr(\"d\", function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        dc.transition(slicePaths, _chart.transitionDuration(),\n            function (s) {\n                s.attrTween(\"d\", tweenPie);\n            }).attr(\"fill\", function (d, i) {\n                return _chart.getColor(d, i);\n            });\n    }\n\n    function updateLabels(pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll(\"text.\" + _sliceCssClass)\n                .data(pieData);\n            dc.transition(labels, _chart.transitionDuration())\n                .attr(\"transform\", function (d) {\n                    d.innerRadius = _chart.innerRadius();\n                    d.outerRadius = _radius;\n                    var centroid = arc.centroid(d);\n                    if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n                        return \"translate(0,0)\";\n                    } else {\n                        return \"translate(\" + centroid + \")\";\n                    }\n                })\n                .attr(\"text-anchor\", \"middle\")\n                .text(function (d) {\n                    var data = d.data;\n                    if (sliceHasNoData(data) || sliceTooSmall(d))\n                        return \"\";\n                    return _chart.label()(d);\n                });\n        }\n    }\n\n    function updateTitles(pieData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll(\"g.\" + _sliceCssClass)\n                .data(pieData)\n                .select(\"title\")\n                .text(function (d) {\n                    return _chart.title()(d);\n                });\n        }\n    }\n\n    function removeElements(slices) {\n        slices.exit().remove();\n    }\n\n    function highlightFilter() {\n        if (_chart.hasFilter()) {\n            _chart.selectAll(\"g.\" + _sliceCssClass).each(function (d) {\n                if (_chart.isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll(\"g.\" + _sliceCssClass).each(function (d) {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n    #### .innerRadius([innerRadius])\n    Get or set the inner radius on a particular pie chart instance. If inner radius is greater than 0px then the pie chart\n    will be essentially rendered as a doughnut chart. Default inner radius is 0px.\n\n    **/\n    _chart.innerRadius = function (r) {\n        if (!arguments.length) return _innerRadius;\n        _innerRadius = r;\n        return _chart;\n    };\n\n    /**\n    #### .radius([radius])\n    Get or set the radius on a particular pie chart instance. Default radius is 90px.\n\n    **/\n    _chart.radius = function (r) {\n        if (!arguments.length) return _radius;\n        _radius = r;\n        return _chart;\n    };\n\n    /**\n    #### .cx()\n    Get center x coordinate position. This function is **not chainable**.\n\n    **/\n    _chart.cx = function () {\n        return _chart.width() / 2;\n    };\n\n    /**\n    #### .cy()\n    Get center y coordinate position. This function is **not chainable**.\n\n    **/\n    _chart.cy = function () {\n        return _chart.height() / 2;\n    };\n\n    _chart.buildArcs = function () {\n        return d3.svg.arc().outerRadius(_radius).innerRadius(_innerRadius);\n    };\n\n    _chart.isSelectedSlice = function (d) {\n        return _chart.hasFilter(_chart.keyAccessor()(d.data));\n    };\n\n    _chart.doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n    #### .minAngelForLabel([minAngle])\n    Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not render slice label.\n    Default min angel is 0.5.\n    **/\n    _chart.minAngleForLabel = function (_) {\n        if (!arguments.length) return _minAngleForLabel;\n        _minAngleForLabel = _;\n        return _chart;\n    };\n\n    function calculateDataPie() {\n        return d3.layout.pie().sort(null).value(function (d) {\n            return _chart.valueAccessor()(d);\n        });\n    }\n\n    function sliceTooSmall(d) {\n        var angle = (d.endAngle - d.startAngle);\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData(data) {\n        return _chart.valueAccessor()(data) === 0;\n    }\n\n    function tweenPie(b) {\n        b.innerRadius = _chart.innerRadius();\n        var current = this._current;\n        if (isOffCanvas(current))\n            current = {startAngle: 0, endAngle: 0};\n        var i = d3.interpolate(current, b);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(i(t), 0, _chart.buildArcs());\n        };\n    }\n\n    function isOffCanvas(current) {\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\n    }\n\n    function onClick(d) {\n        _chart.onClick(d.data);\n    }\n\n    function safeArc(d, i, arc) {\n        var path = arc(d, i);\n        if (path.indexOf(\"NaN\") >= 0)\n            path = \"M0,0\";\n        return path;\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"bar-chart\" href=\"#bar-chart\">#</a> Bar Chart [Concrete] < [Stackable Chart](#stackable-chart) < [CoordinateGrid Chart](#coordinate-grid-chart)\nConcrete bar chart/histogram implementation.\n\nExamples:\n\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n* [Canadian City Crime Stats](http://nickqizhu.github.com/dc.js/crime/index.html)\n\n#### dc.barChart(parent[, chartGroup])\nCreate a bar chart instance and attach it to the given parent element.\n\nParameters:\n* parent : string|compositeChart - any valid d3 single selector representing typically a dom block element such\n   as a div, or if this bar chart is a sub-chart in a [Composite Chart](#composite-chart) then pass in the parent composite chart instance.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created bar chart instance\n\n```js\n// create a bar chart under #chart-container1 element using the default global chart group\nvar chart1 = dc.barChart(\"#chart-container1\");\n// create a bar chart under #chart-container2 element using chart group A\nvar chart2 = dc.barChart(\"#chart-container2\", \"chartGroupA\");\n// create a sub-chart under a composite parent chart\nvar chart3 = dc.barChart(compositeChart);\n```\n\n**/\ndc.barChart = function (parent, chartGroup) {\n    var MIN_BAR_WIDTH = 1;\n    var DEFAULT_GAP_BETWEEN_BARS = 2;\n\n    var _chart = dc.stackableChart(dc.coordinateGridChart({}));\n\n    var _gap = DEFAULT_GAP_BETWEEN_BARS;\n    var _centerBar = false;\n\n    var _numberOfBars;\n    var _barWidth;\n\n    dc.override(_chart, 'rescale', function () {\n        _chart._rescale();\n        _numberOfBars = undefined;\n        _barWidth = undefined;\n        getNumberOfBars();\n    });\n\n    _chart.plotData = function () {\n        var layers = _chart.chartBodyG().selectAll(\"g.stack\")\n            .data(_chart.stackLayers());\n\n        calculateBarWidth();\n\n        layers\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", function (d, i) {\n                return \"stack \" + \"_\" + i;\n            });\n\n        layers.each(function (d, i) {\n            var layer = d3.select(this);\n\n            renderBars(layer, d, i);\n        });\n\n        _chart.stackLayers(null);\n    };\n\n    function barHeight(d) {\n        return dc.utils.safeNumber(Math.abs(_chart.y()(d.y + d.y0) - _chart.y()(d.y0)));\n    }\n\n    function renderBars(layer, d, i) {\n        var bars = layer.selectAll(\"rect.bar\")\n            .data(d.points);\n\n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"fill\", _chart.getColor)\n            .append(\"title\").text(_chart.title());\n\n        if (_chart.isOrdinal())\n            bars.on(\"click\", onClick);\n\n        dc.transition(bars, _chart.transitionDuration())\n            .attr(\"x\", function (d) {\n                var x = _chart.x()(d.x);\n                if (_centerBar || _chart.isOrdinal()) x -= _barWidth / 2;\n                return  dc.utils.safeNumber(x);\n            })\n            .attr(\"y\", function (d) {\n                var y = _chart.y()(d.y + d.y0);\n\n                if (d.y < 0)\n                    y -= barHeight(d);\n\n                return dc.utils.safeNumber(y);\n            })\n            .attr(\"width\", _barWidth)\n            .attr(\"height\", function (d) {\n                return barHeight(d);\n            })\n            .select(\"title\").text(_chart.title());\n\n        dc.transition(bars.exit(), _chart.transitionDuration())\n            .attr(\"height\", 0)\n            .remove();\n    }\n\n    function calculateBarWidth() {\n        if (_barWidth === undefined) {\n            var numberOfBars = _chart.isOrdinal() ? getNumberOfBars() + 1 : getNumberOfBars();\n\n            var w = Math.floor((_chart.xAxisLength() - (numberOfBars - 1) * _gap) / numberOfBars);\n\n            if (w == Infinity || isNaN(w) || w < MIN_BAR_WIDTH)\n                w = MIN_BAR_WIDTH;\n\n            _barWidth = w;\n        }\n    }\n\n    function getNumberOfBars() {\n        if (_numberOfBars === undefined) {\n            _numberOfBars = _chart.xUnitCount();\n        }\n\n        return _numberOfBars;\n    }\n\n    _chart.fadeDeselectedArea = function () {\n        var bars = _chart.chartBodyG().selectAll(\"rect.bar\");\n        var extent = _chart.brush().extent();\n\n        if (_chart.isOrdinal()) {\n            if (_chart.hasFilter()) {\n                bars.classed(dc.constants.SELECTED_CLASS, function (d) {\n                    return _chart.hasFilter(_chart.keyAccessor()(d.data));\n                });\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return !_chart.hasFilter(_chart.keyAccessor()(d.data));\n                });\n            } else {\n                bars.classed(dc.constants.SELECTED_CLASS, false);\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        } else {\n            if (!_chart.brushIsEmpty(extent)) {\n                var start = extent[0];\n                var end = extent[1];\n\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    var xValue = _chart.keyAccessor()(d.data);\n                    return xValue < start || xValue >= end;\n                });\n            } else {\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        }\n    };\n\n    /**\n    #### .centerBar(boolean)\n    Whether the bar chart will render each bar centered around the data position on x axis. Default to false.\n\n    **/\n    _chart.centerBar = function (_) {\n        if (!arguments.length) return _centerBar;\n        _centerBar = _;\n        return _chart;\n    };\n\n    function onClick(d) {\n        _chart.onClick(d.data);\n    }\n\n    /**\n    #### .gap(gapBetweenBars)\n    Manually set fixed gap (in px) between bars instead of relying on the default auto-generated gap. By default bar chart\n    implementation will calculate and set the gap automatically based on the number of data points and the length of the x axis.\n\n    **/\n    _chart.gap = function (_) {\n        if (!arguments.length) return _gap;\n        _gap = _;\n        return _chart;\n    };\n\n    _chart.extendBrush = function () {\n        var extent = _chart.brush().extent();\n        if (_chart.round() && !_centerBar) {\n            extent[0] = extent.map(_chart.round())[0];\n            extent[1] = extent.map(_chart.round())[1];\n\n            _chart.chartBodyG().select(\".brush\")\n                .call(_chart.brush().extent(extent));\n        }\n        return extent;\n    };\n\n    _chart.legendHighlight = function (d) {\n        _chart.select('.chart-body').selectAll('rect.bar').filter(function () {\n            return d3.select(this).attr('fill') == d.color;\n        }).classed('highlight', true);\n        _chart.select('.chart-body').selectAll('rect.bar').filter(function () {\n            return d3.select(this).attr('fill') != d.color;\n        }).classed('fadeout', true);\n    };\n\n    _chart.legendReset = function (d) {\n        _chart.selectAll('.chart-body').selectAll('rect.bar').filter(function () {\n            return d3.select(this).attr('fill') == d.color;\n        }).classed('highlight', false);\n        _chart.selectAll('.chart-body').selectAll('rect.bar').filter(function () {\n            return d3.select(this).attr('fill') != d.color;\n        }).classed('fadeout', false);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"line-chart\" href=\"#line-chart\">#</a> Line Chart [Concrete] < [Stackable Chart](#stackable-chart) < [CoordinateGrid Chart](#coordinate-grid-chart)\nConcrete line/area chart implementation.\n\nExamples:\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n* [Canadian City Crime Stats](http://nickqizhu.github.com/dc.js/crime/index.html)\n\n#### dc.lineChart(parent[, chartGroup])\nCreate a line chart instance and attach it to the given parent element.\n\nParameters:\n\n* parent : string|compositeChart - any valid d3 single selector representing typically a dom block element such\n   as a div, or if this line chart is a sub-chart in a [Composite Chart](#composite-chart) then pass in the parent composite chart instance.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created line chart instance\n\n```js\n// create a line chart under #chart-container1 element using the default global chart group\nvar chart1 = dc.lineChart(\"#chart-container1\");\n// create a line chart under #chart-container2 element using chart group A\nvar chart2 = dc.lineChart(\"#chart-container2\", \"chartGroupA\");\n// create a sub-chart under a composite parent chart\nvar chart3 = dc.lineChart(compositeChart);\n```\n\n**/\ndc.lineChart = function (parent, chartGroup) {\n    var DEFAULT_DOT_RADIUS = 5;\n    var TOOLTIP_G_CLASS = \"dc-tooltip\";\n    var DOT_CIRCLE_CLASS = \"dot\";\n    var Y_AXIS_REF_LINE_CLASS = \"yRef\";\n    var X_AXIS_REF_LINE_CLASS = \"xRef\";\n\n    var _chart = dc.stackableChart(dc.coordinateGridChart({}));\n    var _renderArea = false;\n    var _dotRadius = DEFAULT_DOT_RADIUS;\n    var _interpolate = 'linear';\n    var _tension = 0.7;\n    var _defined;\n\n    _chart.transitionDuration(500);\n\n    _chart.plotData = function () {\n        var layers = _chart.chartBodyG().selectAll(\"g.stack\")\n            .data(_chart.stackLayers());\n\n        var layersEnter = layers\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", function (d, i) {\n                return \"stack \" + \"_\" + i;\n            });\n\n        drawLine(layersEnter, layers);\n\n        drawArea(layersEnter, layers);\n\n        drawDots(layers);\n\n        _chart.stackLayers(null);\n    };\n\n    _chart.interpolate = function(_){\n        if (!arguments.length) return _interpolate;\n        _interpolate = _;\n        return _chart;\n    };\n\n    _chart.tension = function(_){\n        if (!arguments.length) return _tension;\n        _tension = _;\n        return _chart;\n    };\n\n    _chart.defined = function(_){\n        if (!arguments.length) return _defined;\n        _defined = _;\n        return _chart;\n    };\n\n    /**\n    #### .renderArea([boolean])\n    Get or set render area flag. If the flag is set to true then the chart will render the area beneath each line and effectively\n    becomes an area chart.\n\n    **/\n    _chart.renderArea = function (_) {\n        if (!arguments.length) return _renderArea;\n        _renderArea = _;\n        return _chart;\n    };\n\n    function drawLine(layersEnter, layers) {\n        var line = d3.svg.line()\n            .x(function (d) {\n                return _chart.x()(d.x);\n            })\n            .y(function (d) {\n                return _chart.y()(d.y + d.y0);\n            })\n            .interpolate(_interpolate)\n            .tension(_tension);\n        if (_defined)\n            line.defined(_defined);\n\n\n        layersEnter.append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"stroke\", _chart.getColor)\n            .attr(\"fill\", _chart.getColor);\n\n        dc.transition(layers.select(\"path.line\"), _chart.transitionDuration())\n            .attr(\"d\", function (d) {\n                return safeD(line(d.points));\n            });\n    }\n\n    function drawArea(layersEnter, layers) {\n        if (_renderArea) {\n            var area = d3.svg.area()\n                .x(function (d) {\n                    return _chart.x()(d.x);\n                })\n                .y(function (d) {\n                    return _chart.y()(d.y + d.y0);\n                })\n                .y0(function (d) {\n                    return _chart.y()(d.y0);\n                })\n                .interpolate(_interpolate)\n                .tension(_tension);\n            if (_defined)\n                area.defined(_defined);\n\n\n            layersEnter.append(\"path\")\n                .attr(\"class\", \"area\")\n                .attr(\"fill\", _chart.getColor)\n                .attr(\"d\", function (d) {\n                    return safeD(area(d.points));\n                });\n\n            dc.transition(layers.select(\"path.area\"), _chart.transitionDuration())\n                .attr(\"d\", function (d) {\n                    return safeD(area(d.points));\n                });\n        }\n    }\n\n    function safeD(d){\n        return (!d || d.indexOf(\"NaN\") >= 0) ? \"M0,0\" : d;\n    }\n\n    function drawDots(layersEnter) {\n        if (!_chart.brushOn()) {\n            layersEnter.each(function (d, i) {\n                var layer = d3.select(this);\n\n                var g = layer.select(\"g.\" + TOOLTIP_G_CLASS);\n                if (g.empty()) g = layer.append(\"g\").attr(\"class\", TOOLTIP_G_CLASS);\n\n                createRefLines(g);\n\n                var dots = g.selectAll(\"circle.\" + DOT_CIRCLE_CLASS)\n                    .data(g.datum().points);\n\n                dots.enter()\n                    .append(\"circle\")\n                    .attr(\"class\", DOT_CIRCLE_CLASS)\n                    .attr(\"r\", _dotRadius)\n                    .attr(\"fill\", _chart.getColor)\n                    .style(\"fill-opacity\", 1e-6)\n                    .style(\"stroke-opacity\", 1e-6)\n                    .on(\"mousemove\", function (d) {\n                        var dot = d3.select(this);\n                        showDot(dot);\n                        showRefLines(dot, g);\n                    })\n                    .on(\"mouseout\", function (d) {\n                        var dot = d3.select(this);\n                        hideDot(dot);\n                        hideRefLines(g);\n                    })\n                    .append(\"title\").text(_chart.title());\n\n                dots.attr(\"cx\", function (d) {\n                        return dc.utils.safeNumber(_chart.x()(d.x));\n                    })\n                    .attr(\"cy\", function (d) {\n                        return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                    })\n                    .select(\"title\").text(_chart.title());\n\n                dots.exit().remove();\n            });\n        }\n    }\n\n    function createRefLines(g) {\n        var yRefLine = g.select(\"path.\" + Y_AXIS_REF_LINE_CLASS).empty() ? g.append(\"path\").attr(\"class\", Y_AXIS_REF_LINE_CLASS) : g.select(\"path.\" + Y_AXIS_REF_LINE_CLASS);\n        yRefLine.style(\"display\", \"none\").attr(\"stroke-dasharray\", \"5,5\");\n\n        var xRefLine = g.select(\"path.\" + X_AXIS_REF_LINE_CLASS).empty() ? g.append(\"path\").attr(\"class\", X_AXIS_REF_LINE_CLASS) : g.select(\"path.\" + X_AXIS_REF_LINE_CLASS);\n        xRefLine.style(\"display\", \"none\").attr(\"stroke-dasharray\", \"5,5\");\n    }\n\n    function showDot(dot) {\n        dot.style(\"fill-opacity\", 0.8);\n        dot.style(\"stroke-opacity\", 0.8);\n        return dot;\n    }\n\n    function showRefLines(dot, g) {\n        var x = dot.attr(\"cx\");\n        var y = dot.attr(\"cy\");\n        g.select(\"path.\" + Y_AXIS_REF_LINE_CLASS).style(\"display\", \"\").attr(\"d\", \"M0 \" + y + \"L\" + (x) + \" \" + (y));\n        g.select(\"path.\" + X_AXIS_REF_LINE_CLASS).style(\"display\", \"\").attr(\"d\", \"M\" + x + \" \" + _chart.yAxisHeight() + \"L\" + x + \" \" + y);\n    }\n\n    function hideDot(dot) {\n        dot.style(\"fill-opacity\", 1e-6).style(\"stroke-opacity\", 1e-6);\n    }\n\n    function hideRefLines(g) {\n        g.select(\"path.\" + Y_AXIS_REF_LINE_CLASS).style(\"display\", \"none\");\n        g.select(\"path.\" + X_AXIS_REF_LINE_CLASS).style(\"display\", \"none\");\n    }\n\n    /**\n    #### .dotRadius([dotRadius])\n    Get or set the radius (in px) for data points. Default dot radius is 5.\n\n    **/\n    _chart.dotRadius = function (_) {\n        if (!arguments.length) return _dotRadius;\n        _dotRadius = _;\n        return _chart;\n    };\n\n    _chart.legendHighlight = function (d) {\n        _chart.selectAll('.chart-body').selectAll('path').filter(function () {\n            return d3.select(this).attr('fill') == d.color;\n        }).classed('highlight', true);\n        _chart.selectAll('.chart-body').selectAll('path').filter(function () {\n            return d3.select(this).attr('fill') != d.color;\n        }).classed('fadeout', true);\n    };\n\n    _chart.legendReset = function (d) {\n        _chart.selectAll('.chart-body').selectAll('path').filter(function () {\n            return d3.select(this).attr('fill') == d.color;\n        }).classed('highlight', false);\n        _chart.selectAll('.chart-body').selectAll('path').filter(function () {\n            return d3.select(this).attr('fill') != d.color;\n        }).classed('fadeout', false);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"data-count\" href=\"#data-count\">#</a> Data Count Widget [Concrete] < [Base Chart](#base-chart)\nData count is a simple widget designed to display total number records in the data set vs. the number records selected\nby the current filters. Once created data count widget will automatically update the text content of the following elements\nunder the parent element.\n\n* \".total-count\" - total number of records\n* \".filter-count\" - number of records matched by the current filters\n\nExamples:\n\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n\n#### dc.dataCount(parent[, chartGroup])\nCreate a data count widget instance and attach it to the given parent element.\n\nParameters:\n\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created data count widget instance\n\n#### .dimension(allData) - **mandatory**\nFor data count widget the only valid dimension is the entire data set.\n\n#### .group(groupAll) - **mandatory**\nFor data count widget the only valid group is the all group.\n\n```js\nvar ndx = crossfilter(data);\nvar all = ndx.groupAll();\n\ndc.dataCount(\".dc-data-count\")\n    .dimension(ndx)\n    .group(all);\n```\n\n**/\ndc.dataCount = function(parent, chartGroup) {\n    var _formatNumber = d3.format(\",d\");\n    var _chart = dc.baseChart({});\n\n    _chart.doRender = function() {\n        _chart.selectAll(\".total-count\").text(_formatNumber(_chart.dimension().size()));\n        _chart.selectAll(\".filter-count\").text(_formatNumber(_chart.group().value()));\n\n        return _chart;\n    };\n\n    _chart.doRedraw = function(){\n        return _chart.doRender();\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"data-table\" href=\"#data-table\">#</a> Data Table Widget [Concrete] < [Base Chart](#base-chart)\nData table is a simple widget designed to list crossfilter focused data set (rows being filtered) in a good old tabular\nfashion.\n\nExamples:\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n\n#### dc.dataTable(parent[, chartGroup])\nCreate a data table widget instance and attach it to the given parent element.\n\nParameters:\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created data table widget instance\n\n**/\ndc.dataTable = function(parent, chartGroup) {\n    var LABEL_CSS_CLASS = \"dc-table-label\";\n    var ROW_CSS_CLASS = \"dc-table-row\";\n    var COLUMN_CSS_CLASS = \"dc-table-column\";\n    var GROUP_CSS_CLASS = \"dc-table-group\";\n\n    var _chart = dc.baseChart({});\n\n    var _size = 25;\n    var _columns = [];\n    var _sortBy = function(d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _sort;\n\n    _chart.doRender = function() {\n        _chart.selectAll(\"tbody\").remove();\n\n        renderRows(renderGroups());\n\n        return _chart;\n    };\n\n    function renderGroups() {\n        var groups = _chart.root().selectAll(\"tbody\")\n            .data(nestEntries(), function(d) {\n                return _chart.keyAccessor()(d);\n            });\n\n        var rowGroup = groups\n            .enter()\n            .append(\"tbody\");\n\n        rowGroup\n            .append(\"tr\")\n            .attr(\"class\", GROUP_CSS_CLASS)\n                .append(\"td\")\n                .attr(\"class\", LABEL_CSS_CLASS)\n                .attr(\"colspan\", _columns.length)\n                .html(function(d) {\n                    return _chart.keyAccessor()(d);\n                });\n\n        groups.exit().remove();\n\n        return rowGroup;\n    }\n\n    function nestEntries() {\n        if (!_sort)\n            _sort = crossfilter.quicksort.by(_sortBy);\n\n        var entries = _chart.dimension().top(_size);\n\n        return d3.nest()\n            .key(_chart.group())\n            .sortKeys(_order)\n            .sortValues(_order)\n            .entries(_sort(entries, 0, entries.length));\n    }\n\n    function renderRows(groups) {\n        var rows = groups.order()\n            .selectAll(\"tr.\" + ROW_CSS_CLASS)\n            .data(function(d) {\n                return d.values;\n            });\n\n        var rowEnter = rows.enter()\n            .append(\"tr\")\n            .attr(\"class\", ROW_CSS_CLASS);\n\n        for (var i = 0; i < _columns.length; ++i) {\n            var f = _columns[i];\n            rowEnter.append(\"td\")\n                .attr(\"class\", COLUMN_CSS_CLASS + \" _\" + i)\n                .html(function(d) {\n                    return f(d);\n                });\n        }\n\n        rows.exit().remove();\n\n        return rows;\n    }\n\n    _chart.doRedraw = function() {\n        return _chart.doRender();\n    };\n\n    /**\n    #### .size([size])\n    Get or set the table size which determines the number of rows displayed by the widget.\n\n    **/\n    _chart.size = function(s) {\n        if (!arguments.length) return _size;\n        _size = s;\n        return _chart;\n    };\n\n    /**\n    #### .columns([columnFunctionArray])\n    Get or set column functions. Data table widget uses an array of functions to generate dynamic columns. Column functions are\n    simple javascript function with only one input argument d which represents a row in the data set, and the return value of\n    these functions will be used directly to generate table content for each cell.\n\n    ```js\n        chart.columns([\n            function(d) {\n                return d.date;\n            },\n            function(d) {\n                return d.open;\n            },\n            function(d) {\n                return d.close;\n            },\n            function(d) {\n                return numberFormat(d.close - d.open);\n            },\n            function(d) {\n                return d.volume;\n            }\n        ]);\n    ```\n\n    **/\n    _chart.columns = function(_) {\n        if (!arguments.length) return _columns;\n        _columns = _;\n        return _chart;\n    };\n\n    /**\n    #### .sortBy([sortByFunction])\n    Get or set sort-by function. This function works as a value accessor at row level and returns a particular field to be sorted\n    by. Default value: ``` function(d) {return d;}; ```\n\n    ```js\n       chart.sortBy(function(d) {\n            return d.date;\n        });\n    ```\n\n    **/\n    _chart.sortBy = function(_) {\n        if (!arguments.length) return _sortBy;\n        _sortBy = _;\n        return _chart;\n    };\n\n    /**\n    #### .order([order])\n    Get or set sort order. Default value: ``` d3.ascending ```\n\n    ```js\n        chart.order(d3.descending);\n    ```\n\n    **/\n    _chart.order = function(_) {\n        if (!arguments.length) return _order;\n        _order = _;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"bubble-chart\" href=\"#bubble-chart\">#</a> Bubble Chart [Concrete] < [Abstract Bubble Chart](#abstract-bubble-chart) < [CoordinateGrid Chart](#coordinate-grid-chart)\nA concrete implementation of a general purpose bubble chart that allows data visualization using the following dimensions:\n\n* x axis position\n* y axis position\n* bubble radius\n* color\n\nExamples:\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n* [US Venture Capital Landscape 2011](http://nickqizhu.github.com/dc.js/vc/index.html)\n\n#### dc.bubbleChart(parent[, chartGroup])\nCreate a bubble chart instance and attach it to the given parent element.\n\nParameters:\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created bubble chart instance\n\n```js\n// create a bubble chart under #chart-container1 element using the default global chart group\nvar bubbleChart1 = dc.bubbleChart(\"#chart-container1\");\n// create a bubble chart under #chart-container2 element using chart group A\nvar bubbleChart2 = dc.bubbleChart(\"#chart-container2\", \"chartGroupA\");\n```\n\n**/\ndc.bubbleChart = function(parent, chartGroup) {\n    var _chart = dc.abstractBubbleChart(dc.coordinateGridChart({}));\n\n    var _elasticRadius = false;\n\n    _chart.transitionDuration(750);\n\n    var bubbleLocator = function(d) {\n        return \"translate(\" + (bubbleX(d)) + \",\" + (bubbleY(d)) + \")\";\n    };\n\n    /**\n    #### .elasticRadius([boolean])\n    Turn on or off elastic bubble radius feature. If this feature is turned on, then bubble radiuses will be automatically rescaled\n    to fit the chart better.\n\n    **/\n    _chart.elasticRadius = function(_) {\n        if (!arguments.length) return _elasticRadius;\n        _elasticRadius = _;\n        return _chart;\n    };\n\n    _chart.plotData = function() {\n        if (_elasticRadius)\n            _chart.r().domain([_chart.rMin(), _chart.rMax()]);\n\n        _chart.r().range([_chart.MIN_RADIUS, _chart.xAxisLength() * _chart.maxBubbleRelativeSize()]);\n\n        var bubbleG = _chart.chartBodyG().selectAll(\"g.\" + _chart.BUBBLE_NODE_CLASS)\n            .data(_chart.group().all());\n\n        renderNodes(bubbleG);\n\n        updateNodes(bubbleG);\n\n        removeNodes(bubbleG);\n\n        _chart.fadeDeselectedArea();\n    };\n\n    function renderNodes(bubbleG) {\n        var bubbleGEnter = bubbleG.enter().append(\"g\");\n\n        bubbleGEnter\n            .attr(\"class\", _chart.BUBBLE_NODE_CLASS)\n            .attr(\"transform\", bubbleLocator)\n            .append(\"circle\").attr(\"class\", function(d, i) {\n                return _chart.BUBBLE_CLASS + \" _\" + i;\n            })\n            .on(\"click\", _chart.onClick)\n            .attr(\"fill\", _chart.initBubbleColor)\n            .attr(\"r\", 0);\n        dc.transition(bubbleG, _chart.transitionDuration())\n            .attr(\"r\", function(d) {\n                return _chart.bubbleR(d);\n            })\n            .attr(\"opacity\", function(d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart.doRenderLabel(bubbleGEnter);\n\n        _chart.doRenderTitles(bubbleGEnter);\n    }\n\n    function updateNodes(bubbleG) {\n        dc.transition(bubbleG, _chart.transitionDuration())\n            .attr(\"transform\", bubbleLocator)\n            .selectAll(\"circle.\" + _chart.BUBBLE_CLASS)\n            .attr(\"fill\", _chart.updateBubbleColor)\n            .attr(\"r\", function(d) {\n                return _chart.bubbleR(d);\n            })\n            .attr(\"opacity\", function(d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart.doUpdateLabels(bubbleG);\n        _chart.doUpdateTitles(bubbleG);\n    }\n\n    function removeNodes(bubbleG) {\n        bubbleG.exit().remove();\n    }\n\n    function bubbleX(d) {\n        var x = _chart.x()(_chart.keyAccessor()(d));\n        if (isNaN(x))\n            x = 0;\n        return x;\n    }\n\n    function bubbleY(d) {\n        var y = _chart.y()(_chart.valueAccessor()(d));\n        if (isNaN(y))\n            y = 0;\n        return y;\n    }\n\n    _chart.renderBrush = function(g) {\n        // override default x axis brush from parent chart\n    };\n\n    _chart.redrawBrush = function(g) {\n        // override default x axis brush from parent chart\n        _chart.fadeDeselectedArea();\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"composite-chart\" href=\"#composite-chart\">#</a> Composite Chart [Concrete] < [CoordinateGrid Chart](#coordinate-grid-chart)\nComposite chart is a special kind of chart that resides somewhere between abstract and concrete charts. It does not\ngenerate data visualization directly, but rather working with other concrete charts to do the job. You can essentially\noverlay(compose) different bar/line/area charts in a single composite chart to achieve some quite flexible charting\neffects.\n\nExamples:\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n\n#### dc.compositeChart(parent[, chartGroup])\nCreate a composite chart instance and attach it to the given parent element.\n\nParameters:\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created composite chart instance\n\n```js\n// create a composite chart under #chart-container1 element using the default global chart group\nvar compositeChart1 = dc.compositeChart(\"#chart-container1\");\n// create a composite chart under #chart-container2 element using chart group A\nvar compositeChart2 = dc.compositeChart(\"#chart-container2\", \"chartGroupA\");\n```\n\n**/\ndc.compositeChart = function (parent, chartGroup) {\n    var SUB_CHART_CLASS = \"sub\";\n\n    var _chart = dc.coordinateGridChart({});\n    var _children = [];\n\n    _chart.transitionDuration(500);\n    _chart.group({});\n\n    dc.override(_chart, \"_generateG\", function () {\n        var g = this.__generateG();\n\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            generateChildG(child, i);\n\n            if (child.dimension() === undefined) child.dimension(_chart.dimension());\n            if (child.group() === undefined) child.group(_chart.group());\n            child.chartGroup(_chart.chartGroup());\n            child.svg(_chart.svg());\n            child.xUnits(_chart.xUnits());\n            child.transitionDuration(_chart.transitionDuration());\n            child.brushOn(_chart.brushOn());\n        }\n\n        return g;\n    });\n\n    function generateChildG(child, i) {\n        child._generateG(_chart.g());\n        child.g().attr(\"class\", SUB_CHART_CLASS + \" _\" + i);\n    }\n\n    _chart.plotData = function () {\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            if (child.g() === undefined) {\n                generateChildG(child, i);\n            }\n\n            child.x(_chart.x());\n            child.y(_chart.y());\n            child.xAxis(_chart.xAxis());\n            child.yAxis(_chart.yAxis());\n\n            child.plotData();\n\n            child.activateRenderlets();\n        }\n    };\n\n    _chart.fadeDeselectedArea = function () {\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n            child.brush(_chart.brush());\n            child.fadeDeselectedArea();\n        }\n    };\n\n    /**\n    #### .compose(subChartArray)\n    Combine the given charts into one single composite coordinate grid chart.\n\n    ```js\n    // compose the given charts in the array into one single composite chart\n    moveChart.compose([\n        // when creating sub-chart you need to pass in the parent chart\n        dc.lineChart(moveChart)\n            .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\n            .valueAccessor(function(d){return d.value.avg;})\n            // most of the normal functions will continue to work in a composed chart\n            .renderArea(true)\n            .stack(monthlyMoveGroup, function(d){return d.value;})\n            .title(function(d){\n                var value = d.value.avg?d.value.avg:d.value;\n                if(isNaN(value)) value = 0;\n                return dateFormat(d.key) + \"\\n\" + numberFormat(value);\n            }),\n        dc.barChart(moveChart)\n            .group(volumeByMonthGroup)\n            .centerBar(true)\n    ]);\n    ```\n\n    **/\n    _chart.compose = function (charts) {\n        _children = charts;\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n            child.height(_chart.height());\n            child.width(_chart.width());\n            child.margins(_chart.margins());\n        }\n        return _chart;\n    };\n\n    _chart.children = function () {\n        return _children;\n    };\n\n    function getAllYAxisMinFromChildCharts() {\n        var allMins = [];\n        for (var i = 0; i < _children.length; ++i) {\n            allMins.push(_children[i].yAxisMin());\n        }\n        return allMins;\n    }\n\n    _chart.yAxisMin = function () {\n        return d3.min(getAllYAxisMinFromChildCharts());\n    };\n\n    function getAllYAxisMaxFromChildCharts() {\n        var allMaxes = [];\n        for (var i = 0; i < _children.length; ++i) {\n            allMaxes.push(_children[i].yAxisMax());\n        }\n        return allMaxes;\n    }\n\n    _chart.yAxisMax = function () {\n        return dc.utils.add(d3.max(getAllYAxisMaxFromChildCharts()), _chart.yAxisPadding());\n    };\n\n    function getAllXAxisMinFromChildCharts() {\n        var allMins = [];\n        for (var i = 0; i < _children.length; ++i) {\n            allMins.push(_children[i].xAxisMin());\n        }\n        return allMins;\n    }\n\n    _chart.xAxisMin = function () {\n        return dc.utils.subtract(d3.min(getAllXAxisMinFromChildCharts()), _chart.xAxisPadding());\n    };\n\n    function getAllXAxisMaxFromChildCharts() {\n        var allMaxes = [];\n        for (var i = 0; i < _children.length; ++i) {\n            allMaxes.push(_children[i].xAxisMax());\n        }\n        return allMaxes;\n    }\n\n    _chart.xAxisMax = function () {\n        return dc.utils.add(d3.max(getAllXAxisMaxFromChildCharts()), _chart.xAxisPadding());\n    };\n\n    _chart.legendables = function () {\n        var items = [];\n        _children.forEach(function(childChart, j) {\n            var childLegendables = childChart.legendables();\n            if (childLegendables.length > 1)\n                items.push.apply(items,childLegendables);\n            else\n                items.push(dc.utils.createLegendable(childChart, childChart.group(), j, childChart.valueAccessor()));\n        });\n        return items;\n    };\n\n    _chart.legendHighlight = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendHighlight(d);\n        }\n    };\n\n    _chart.legendReset = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendReset(d);\n        }\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"geo-choropleth-chart\" href=\"#geo-choropleth-chart\">#</a> Geo Choropleth Chart [Concrete] < [Color Chart](#color-chart) < [Base Chart](#base-chart)\nGeo choropleth chart is design to make creating crossfilter driven choropleth map from GeoJson data an easy process. This\nchart implementation was inspired by [the great d3 choropleth example](http://bl.ocks.org/4060606).\n\nExamples:\n* [US Venture Capital Landscape 2011](http://nickqizhu.github.com/dc.js/vc/index.html)\n\n#### dc.geoChoroplethChart(parent[, chartGroup])\nCreate a choropleth chart instance and attach it to the given parent element.\n\nParameters:\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created choropleth chart instance\n\n```js\n// create a choropleth chart under \"#us-chart\" element using the default global chart group\nvar chart1 = dc.geoChoroplethChart(\"#us-chart\");\n// create a choropleth chart under \"#us-chart2\" element using chart group A\nvar chart2 = dc.compositeChart(\"#us-chart2\", \"chartGroupA\");\n```\n\n**/\ndc.geoChoroplethChart = function (parent, chartGroup) {\n    var _chart = dc.colorChart(dc.baseChart({}));\n\n    _chart.colorAccessor(function (d, i) {\n        return d;\n    });\n\n    var _geoPath = d3.geo.path();\n    var _projectionFlag;\n\n    var _geoJsons = [];\n\n    _chart.doRender = function () {\n        _chart.resetSvg();\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            var states = _chart.svg().append(\"g\")\n                .attr(\"class\", \"layer\" + layerIndex);\n\n            var regionG = states.selectAll(\"g.\" + geoJson(layerIndex).name)\n                .data(geoJson(layerIndex).data)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", geoJson(layerIndex).name);\n\n            regionG\n                .append(\"path\")\n                .attr(\"fill\", \"white\")\n                .attr(\"d\", _geoPath);\n\n            regionG.append(\"title\");\n\n            plotData(layerIndex);\n        }\n        _projectionFlag = false;\n    };\n\n    function plotData(layerIndex) {\n        var data = generateLayeredData();\n\n        if (isDataLayer(layerIndex)) {\n            var regionG = renderRegionG(layerIndex);\n\n            renderPaths(regionG, layerIndex, data);\n\n            renderTitle(regionG, layerIndex, data);\n        }\n    }\n\n    function generateLayeredData() {\n        var data = {};\n        var groupAll = _chart.group().all();\n        for (var i = 0; i < groupAll.length; ++i) {\n            data[_chart.keyAccessor()(groupAll[i])] = _chart.valueAccessor()(groupAll[i]);\n        }\n        return data;\n    }\n\n    function isDataLayer(layerIndex) {\n        return geoJson(layerIndex).keyAccessor;\n    }\n\n    function renderRegionG(layerIndex) {\n        var regionG = _chart.svg()\n            .selectAll(layerSelector(layerIndex))\n            .classed(\"selected\", function (d) {\n                return isSelected(layerIndex, d);\n            })\n            .classed(\"deselected\", function (d) {\n                return isDeselected(layerIndex, d);\n            })\n            .attr(\"class\", function (d) {\n                var layerNameClass = geoJson(layerIndex).name;\n                var regionClass = dc.utils.nameToId(geoJson(layerIndex).keyAccessor(d));\n                var baseClasses = layerNameClass + \" \" + regionClass;\n                if (isSelected(layerIndex, d)) baseClasses += \" selected\";\n                if (isDeselected(layerIndex, d)) baseClasses += \" deselected\";\n                return baseClasses;\n            });\n        return regionG;\n    }\n\n    function layerSelector(layerIndex) {\n        return \"g.layer\" + layerIndex + \" g.\" + geoJson(layerIndex).name;\n    }\n\n    function isSelected(layerIndex, d) {\n        return _chart.hasFilter() && _chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function isDeselected(layerIndex, d) {\n        return _chart.hasFilter() && !_chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function getKey(layerIndex, d) {\n        return geoJson(layerIndex).keyAccessor(d);\n    }\n\n    function geoJson(index) {\n        return _geoJsons[index];\n    }\n\n    function renderPaths(regionG, layerIndex, data) {\n        var paths = regionG\n            .select(\"path\")\n            .attr(\"fill\", function (d) {\n                var currentFill = d3.select(this).attr(\"fill\");\n                if (currentFill)\n                    return currentFill;\n                return \"none\";\n            })\n            .on(\"click\", function (d) {\n                return _chart.onClick(d, layerIndex);\n            });\n\n        dc.transition(paths, _chart.transitionDuration()).attr(\"fill\", function (d, i) {\n            return _chart.getColor(data[geoJson(layerIndex).keyAccessor(d)], i);\n        });\n    }\n\n    _chart.onClick = function (d, layerIndex) {\n        var selectedRegion = geoJson(layerIndex).keyAccessor(d);\n        dc.events.trigger(function () {\n            _chart.filter(selectedRegion);\n            dc.redrawAll(_chart.chartGroup());\n        });\n    };\n\n    function renderTitle(regionG, layerIndex, data) {\n        if (_chart.renderTitle()) {\n            regionG.selectAll(\"title\").text(function (d) {\n                var key = getKey(layerIndex, d);\n                var value = data[key];\n                return _chart.title()({key: key, value: value});\n            });\n        }\n    }\n\n    _chart.doRedraw = function () {\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            plotData(layerIndex);\n            if(_projectionFlag) {\n                _chart.svg().selectAll(\"g.\" + geoJson(layerIndex).name + \" path\").attr(\"d\", _geoPath);\n            }\n        }\n        _projectionFlag = false;\n    };\n\n    /**\n    #### .overlayGeoJson(json, name, keyAccessor) - **mandatory**\n    Use this function to insert a new GeoJson map layer. This function can be invoked multiple times if you have multiple GeoJson\n    data layer to render on top of each other. If you overlay mutiple layers with the same name the new overlay will simply\n    override the existing one.\n\n    Parameters:\n    * json - GeoJson feed\n    * name - name of the layer\n    * keyAccessor - accessor function used to extract \"key\" from the GeoJson data. Key extracted by this function should match\n     the keys generated in crossfilter groups.\n\n    ```js\n    // insert a layer for rendering US states\n    chart.overlayGeoJson(statesJson.features, \"state\", function(d) {\n        return d.properties.name;\n    });\n    ```\n\n    **/\n    _chart.overlayGeoJson = function (json, name, keyAccessor) {\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            if (_geoJsons[i].name == name) {\n                _geoJsons[i].data = json;\n                _geoJsons[i].keyAccessor = keyAccessor;\n                return _chart;\n            }\n        }\n        _geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});\n        return _chart;\n    };\n\n    /**\n    #### .projection(projection)\n    Set custom geo projection function. Available [d3 geo projection functions](https://github.com/mbostock/d3/wiki/Geo-Projections).\n    Default value: albersUsa.\n\n    **/\n    _chart.projection = function (projection) {\n        _geoPath.projection(projection);\n        _projectionFlag = true;\n        return _chart;\n    };\n\n    /**\n    #### .geoJsons()\n    Return all GeoJson layers currently registered with thit chart. The returned array is a reference to this chart's internal\n    registration data structure without copying thus any modification to this array will also modify this chart's internal\n    registration.\n\n    Return:\n    An array of objects containing fields {name, data, accessor}\n\n    **/\n    _chart.geoJsons = function () {\n        return _geoJsons;\n    };\n\n    /**\n    #### .removeGeoJson(name)\n    Remove a GeoJson layer from this chart by name\n\n    Return: chart instance\n\n    **/\n    _chart.removeGeoJson = function (name) {\n        var geoJsons = [];\n\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            var layer = _geoJsons[i];\n            if (layer.name != name) {\n                geoJsons.push(layer);\n            }\n        }\n\n        _geoJsons = geoJsons;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"bubble-overlay-chart\" href=\"#bubble-overlay-chart\">#</a> Bubble Overlay Chart [Concrete] < [Abstract Bubble Chart](#abstract-bubble-chart) < [Base Chart](#base-chart)\nBubble overlay chart is quite different from the typical bubble chart. With bubble overlay chart you can arbitrarily place\na finite number of bubbles on an existing svg or bitmap image (overlay on top of it), thus losing the typical x and y\npositioning that we are used to whiling retaining the capability to visualize data using it's bubble radius and\ncoloring.\n\nExamples:\n* [Canadian City Crime Stats](http://nickqizhu.github.com/dc.js/crime/index.html)\n\n#### dc.bubbleOverlay(parent[, chartGroup])\nCreate a bubble overlay chart instance and attach it to the given parent element.\n\nParameters:\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div. Typically\n   this element should also be the parent of the underlying image.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created bubble overlay chart instance\n\n```js\n// create a bubble overlay chart on top of \"#chart-container1 svg\" element using the default global chart group\nvar bubbleChart1 = dc.bubbleOverlayChart(\"#chart-container1\").svg(d3.select(\"#chart-container1 svg\"));\n// create a bubble overlay chart on top of \"#chart-container2 svg\" element using chart group A\nvar bubbleChart2 = dc.compositeChart(\"#chart-container2\", \"chartGroupA\").svg(d3.select(\"#chart-container2 svg\"));\n```\n\n#### .svg(imageElement) - **mandatory**\nSet the underlying svg image element. Unlike other dc charts this chart will not generate svg element therefore bubble overlay\nchart will not work if this function is not properly invoked. If the underlying image is a bitmap, then an empty svg will need\nto be manually created on top of the image.\n\n```js\n// set up underlying svg element\nchart.svg(d3.select(\"#chart svg\"));\n```\n\n**/\ndc.bubbleOverlay = function(root, chartGroup) {\n    var BUBBLE_OVERLAY_CLASS = \"bubble-overlay\";\n    var BUBBLE_NODE_CLASS = \"node\";\n    var BUBBLE_CLASS = \"bubble\";\n\n    var _chart = dc.abstractBubbleChart(dc.baseChart({}));\n    var _g;\n    var _points = [];\n\n    _chart.transitionDuration(750);\n\n    _chart.radiusValueAccessor(function(d) {\n        return d.value;\n    });\n\n    /**\n    #### .point(name, x, y) - **mandatory**\n    Set up a data point on the overlay. The name of a data point should match a specific \"key\" among data groups generated using keyAccessor.\n    If a match is found (point name <-> data group key) then a bubble will be automatically generated at the position specified by the\n    function. x and y value specified here are relative to the underlying svg.\n\n    **/\n    _chart.point = function(name, x, y) {\n        _points.push({name: name, x: x, y: y});\n        return _chart;\n    };\n\n    _chart.doRender = function() {\n        _g = initOverlayG();\n\n        _chart.r().range([_chart.MIN_RADIUS, _chart.width() * _chart.maxBubbleRelativeSize()]);\n\n        initializeBubbles();\n\n        _chart.fadeDeselectedArea();\n\n        return _chart;\n    };\n\n    function initOverlayG() {\n        _g = _chart.select(\"g.\" + BUBBLE_OVERLAY_CLASS);\n        if (_g.empty())\n            _g = _chart.svg().append(\"g\").attr(\"class\", BUBBLE_OVERLAY_CLASS);\n        return _g;\n    }\n\n    function initializeBubbles() {\n        var data = mapData();\n\n        _points.forEach(function(point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select(\"circle.\" + BUBBLE_CLASS);\n\n            if (circle.empty())\n                circle = nodeG.append(\"circle\")\n                    .attr(\"class\", BUBBLE_CLASS)\n                    .attr(\"r\", 0)\n                    .attr(\"fill\", _chart.initBubbleColor)\n                    .on(\"click\", _chart.onClick);\n\n            dc.transition(circle, _chart.transitionDuration())\n                .attr(\"r\", function(d) {\n                    return _chart.bubbleR(d);\n                });\n\n            _chart.doRenderLabel(nodeG);\n\n            _chart.doRenderTitles(nodeG);\n        });\n    }\n\n    function mapData() {\n        var data = {};\n        _chart.group().all().forEach(function(datum) {\n            data[_chart.keyAccessor()(datum)] = datum;\n        });\n        return data;\n    }\n\n    function getNodeG(point, data) {\n        var bubbleNodeClass = BUBBLE_NODE_CLASS + \" \" + dc.utils.nameToId(point.name);\n\n        var nodeG = _g.select(\"g.\" + dc.utils.nameToId(point.name));\n\n        if (nodeG.empty()) {\n            nodeG = _g.append(\"g\")\n                .attr(\"class\", bubbleNodeClass)\n                .attr(\"transform\", \"translate(\" + point.x + \",\" + point.y + \")\");\n        }\n\n        nodeG.datum(data[point.name]);\n\n        return nodeG;\n    }\n\n    _chart.doRedraw = function() {\n        updateBubbles();\n\n        _chart.fadeDeselectedArea();\n\n        return _chart;\n    };\n\n    function updateBubbles() {\n        var data = mapData();\n\n        _points.forEach(function(point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select(\"circle.\" + BUBBLE_CLASS);\n\n            dc.transition(circle, _chart.transitionDuration())\n                .attr(\"r\", function(d) {\n                    return _chart.bubbleR(d);\n                })\n                .attr(\"fill\", _chart.updateBubbleColor);\n\n            _chart.doUpdateLabels(nodeG);\n\n            _chart.doUpdateTitles(nodeG);\n        });\n    }\n\n    _chart.debug = function(flag) {\n        if(flag){\n            var debugG = _chart.select(\"g.\" + dc.constants.DEBUG_GROUP_CLASS);\n\n            if(debugG.empty())\n                debugG = _chart.svg()\n                    .append(\"g\")\n                    .attr(\"class\", dc.constants.DEBUG_GROUP_CLASS);\n\n            var debugText = debugG.append(\"text\")\n                .attr(\"x\", 10)\n                .attr(\"y\", 20);\n\n            debugG\n                .append(\"rect\")\n                .attr(\"width\", _chart.width())\n                .attr(\"height\", _chart.height())\n                .on(\"mousemove\", function() {\n                    var position = d3.mouse(debugG.node());\n                    var msg = position[0] + \", \" + position[1];\n                    debugText.text(msg);\n                });\n        }else{\n            _chart.selectAll(\".debug\").remove();\n        }\n\n        return _chart;\n    };\n\n    _chart.anchor(root, chartGroup);\n\n    return _chart;\n};\n\n/**\n## <a name=\"row-chart\" href=\"#row-chart\">#</a> Row Chart [Concrete] < [Color Chart](#color-chart) < [Base Chart](#base-chart)\nConcrete row chart implementation.\n\n#### dc.rowChart(parent[, chartGroup])\nCreate a row chart instance and attach it to the given parent element.\n\nParameters:\n\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div.\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed in a certain chart group then any interaction with such instance will only trigger events and redraw within the same chart group.\n\nReturn a newly created row chart instance\n\n```js\n// create a row chart under #chart-container1 element using the default global chart group\nvar chart1 = dc.rowChart(\"#chart-container1\");\n// create a row chart under #chart-container2 element using chart group A\nvar chart2 = dc.rowChart(\"#chart-container2\", \"chartGroupA\");\n```\n\n**/\ndc.rowChart = function (parent, chartGroup) {\n\n    var _g;\n\n    var _labelOffsetX = 10;\n\n    var _labelOffsetY = 15;\n\n    var _gap = 5;\n\n    var _rowCssClass = \"row\";\n\n    var _chart = dc.capped(dc.marginable(dc.colorChart(dc.baseChart({}))));\n\n    var _x;\n\n    var _elasticX;\n\n    var _xAxis = d3.svg.axis().orient(\"bottom\");\n\n    var _rowData;\n\n    _chart.rowsCap = _chart.cap;\n\n    function calculateAxisScale() {\n        if (!_x || _elasticX) {\n            var extent = d3.extent(_rowData, _chart.valueAccessor());\n            if (extent[0] > 0) extent[0] = 0;\n            _x = d3.scale.linear().domain(extent)\n                .range([0, _chart.effectiveWidth()]);\n\n            _xAxis.scale(_x);\n        }\n    }\n\n    function drawAxis() {\n        var axisG = _g.select(\"g.axis\");\n\n        calculateAxisScale();\n\n        if (axisG.empty())\n            axisG = _g.append(\"g\").attr(\"class\", \"axis\")\n                .attr(\"transform\", \"translate(0, \" + _chart.effectiveHeight() + \")\");\n\n        dc.transition(axisG, _chart.transitionDuration())\n            .call(_xAxis);\n    }\n\n    _chart.doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + _chart.margins().left + \",\" + _chart.margins().top + \")\");\n\n        drawChart();\n\n        return _chart;\n    };\n\n    _chart.title(function (d) {\n        return _chart.keyAccessor()(d) + \": \" + _chart.valueAccessor()(d);\n    });\n\n    _chart.label(function (d) {\n        return _chart.keyAccessor()(d);\n    });\n\n    _chart.x = function(x){\n        if(!arguments.length) return _x;\n        _x = x;\n        return _chart;\n    };\n\n    function drawGridLines() {\n        _g.selectAll(\"g.tick\")\n            .select(\"line.grid-line\")\n            .remove();\n\n        _g.selectAll(\"g.tick\")\n            .append(\"line\")\n            .attr(\"class\", \"grid-line\")\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\"y2\", function () {\n                return -_chart.effectiveHeight();\n            });\n    }\n\n    function drawChart() {\n        _rowData = _chart.assembleCappedData();\n\n        drawAxis();\n        drawGridLines();\n\n        var rows = _g.selectAll(\"g.\" + _rowCssClass)\n            .data(_rowData);\n\n        createElements(rows);\n        removeElements(rows);\n        updateElements(rows);\n    }\n\n    function createElements(rows) {\n        var rowEnter = rows.enter()\n            .append(\"g\")\n            .attr(\"class\", function (d, i) {\n                return _rowCssClass + \" _\" + i;\n            });\n\n        rowEnter.append(\"rect\").attr(\"width\", 0);\n\n        createLabels(rowEnter);\n        updateLabels(rows);\n    }\n\n    function removeElements(rows) {\n        rows.exit().remove();\n    }\n\n    function updateElements(rows) {\n        var n = _rowData.length;\n\n        var height = (_chart.effectiveHeight() - (n + 1) * _gap) / n;\n\n        var rect = rows.attr(\"transform\",function (d, i) {\n                return \"translate(0,\" + ((i + 1) * _gap + i * height) + \")\";\n            }).select(\"rect\")\n            .attr(\"height\", height)\n            .attr(\"fill\", _chart.getColor)\n            .on(\"click\", onClick)\n            .classed(\"deselected\", function (d) {\n                return (_chart.hasFilter()) ? !_chart.isSelectedRow(d) : false;\n            })\n            .classed(\"selected\", function (d) {\n                return (_chart.hasFilter()) ? _chart.isSelectedRow(d) : false;\n            });\n\n        dc.transition(rect, _chart.transitionDuration())\n            .attr(\"width\", function (d) {\n                var start = _x(0) == -Infinity ? _x(1) : _x(0);\n                return Math.abs(start - _x(_chart.valueAccessor()(d)));\n            })\n            .attr(\"transform\", translateX);\n\n        createTitles(rows);\n        updateLabels(rows);\n    }\n\n    function createTitles(rows) {\n        if (_chart.renderTitle()) {\n            rows.selectAll(\"title\").remove();\n            rows.append(\"title\").text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    function createLabels(rowEnter) {\n        if (_chart.renderLabel()) {\n            rowEnter.append(\"text\")\n                .on(\"click\", onClick);\n        }\n    }\n\n    function updateLabels(rows) {\n        if (_chart.renderLabel()) {\n            var lab = rows.select(\"text\")\n                .attr(\"x\", _labelOffsetX)\n                .attr(\"y\", _labelOffsetY)\n                .on(\"click\", onClick)\n                .attr(\"class\", function (d, i) {\n                    return _rowCssClass + \" _\" + i;\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n            dc.transition(lab, _chart.transitionDuration())\n                .attr(\"transform\", translateX);\n        }\n    }\n\n    function onClick(d) {\n        _chart.onClick(d);\n    }\n\n    function translateX(d) {\n        var x = _x(_chart.valueAccessor()(d)),\n            x0 = _x(0),\n            s = x > x0 ? x0 : x;\n        return \"translate(\"+s+\",0)\";\n    }\n\n    _chart.doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    _chart.xAxis = function () {\n        return _xAxis;\n    };\n\n    /**\n    #### .gap([gap])\n    Get or set the vertical gap space between rows on a particular row chart instance. Default gap is 5px;\n\n    **/\n    _chart.gap = function (g) {\n        if (!arguments.length) return _gap;\n        _gap = g;\n        return _chart;\n    };\n\n    /**\n    #### .elasticX([boolean])\n    Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescle to auto-fit the data\n    range when filtered.\n\n    **/\n    _chart.elasticX = function (_) {\n        if (!arguments.length) return _elasticX;\n        _elasticX = _;\n        return _chart;\n    };\n\n    /**\n    #### .labelOffsetX([x])\n    Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart. Default x offset is 10px;\n\n    **/\n    _chart.labelOffsetX = function (o) {\n        if (!arguments.length) return _labelOffsetX;\n        _labelOffsetX = o;\n        return _chart;\n    };\n\n    /**\n    #### .labelOffsetY([y])\n    Get of set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart. Default y offset is 15px;\n\n    **/\n    _chart.labelOffsetY = function (o) {\n        if (!arguments.length) return _labelOffsetY;\n        _labelOffsetY = o;\n        return _chart;\n    };\n\n    _chart.isSelectedRow = function (d) {\n        return _chart.hasFilter(_chart.keyAccessor()(d));\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n## <a name=\"legend\" href=\"#legend\">#</a> Legend [Concrete]\nLegend is a attachable widget that can be added to other dc charts to render horizontal legend labels.\n\n```js\nchart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n```\n\nExamples:\n* [Nasdaq 100 Index](http://nickqizhu.github.com/dc.js/)\n* [Canadian City Crime Stats](http://nickqizhu.github.com/dc.js/crime/index.html)\n\n**/\ndc.legend = function () {\n    var LABEL_GAP = 2;\n\n    var _legend = {},\n        _parent,\n        _x = 0,\n        _y = 0,\n        _itemHeight = 12,\n        _gap = 5;\n\n    var _g;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) return _parent;\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        _g = _parent.svg().append(\"g\")\n            .attr(\"class\", \"dc-legend\")\n            .attr(\"transform\", \"translate(\" + _x + \",\" + _y + \")\");\n\n        var itemEnter = _g.selectAll('g.dc-legend-item')\n            .data(_parent.legendables())\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"dc-legend-item\")\n            .attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * legendItemHeight() + \")\";\n            })\n            .on(\"mouseover\", function(d){\n                    _parent.legendHighlight(d);\n            })\n            .on(\"mouseout\", function (d) {\n                    _parent.legendReset(d);\n            });\n\n        itemEnter\n            .append(\"rect\")\n                .attr(\"width\", _itemHeight)\n                .attr(\"height\", _itemHeight)\n                .attr(\"fill\", function(d){return d.color;});\n\n        itemEnter.append(\"text\")\n                .text(function(d){return d.name;})\n                .attr(\"x\", _itemHeight + LABEL_GAP)\n                .attr(\"y\", function(){return _itemHeight / 2 + (this.clientHeight?this.clientHeight:13) / 2 - 2;});\n    };\n\n    function legendItemHeight() {\n        return _gap + _itemHeight;\n    }\n\n    /**\n    #### .x([value])\n    Set or get x coordinate for legend widget. Default value: 0.\n    **/\n    _legend.x = function (x) {\n        if (!arguments.length) return _x;\n        _x = x;\n        return _legend;\n    };\n\n    /**\n    #### .y([value])\n    Set or get y coordinate for legend widget. Default value: 0.\n    **/\n    _legend.y = function (y) {\n        if (!arguments.length) return _y;\n        _y = y;\n        return _legend;\n    };\n\n    /**\n    #### .gap([value])\n    Set or get gap between legend items. Default value: 5.\n    **/\n    _legend.gap = function (gap) {\n        if (!arguments.length) return _gap;\n        _gap = gap;\n        return _legend;\n    };\n\n    /**\n    #### .itemHeight([value])\n    Set or get legend item height. Default value: 12.\n    **/\n    _legend.itemHeight = function (h) {\n        if (!arguments.length) return _itemHeight;\n        _itemHeight = h;\n        return _legend;\n    };\n\n    return _legend;\n};\n\ndc.capped = function (_chart) {\n\n    var _cap = Infinity;\n\n    var _othersLabel = \"Others\";\n\n    var _othersGrouper = function (topRows) {\n        var topRowsSum = d3.sum(topRows, _chart.valueAccessor()),\n            allRows = _chart.group().all(),\n            allRowsSum = d3.sum(allRows, _chart.valueAccessor()),\n            topKeys = topRows.map(_chart.keyAccessor()),\n            allKeys = allRows.map(_chart.keyAccessor()),\n            topSet = d3.set(topKeys),\n            others = allKeys.filter(function(d){return !topSet.has(d);});\n        topRows.push({\"others\": others,\"key\": _othersLabel, \"value\": allRowsSum - topRowsSum });\n    };\n\n    _chart.assembleCappedData = function() {\n        if (_cap == Infinity) {\n            return _chart.computeOrderedGroups();\n        } else {\n            var topRows = _chart.group().top(_cap); // ordered by value\n            topRows = _chart.computeOrderedGroups(topRows); // re-order by key\n            if (_othersGrouper) _othersGrouper(topRows);\n            return topRows;\n        }\n    };\n\n    _chart.cap = function (_) {\n        if (!arguments.length) return _cap;\n        _cap = _;\n        return _chart;\n    };\n\n    /**\n    #### .othersLabel([label])\n    Get or set the label for *Others* slice when slices cap is specified. Default label is **Others**.\n    **/\n    _chart.othersLabel = function (_) {\n        if (!arguments.length) return _othersLabel;\n        _othersLabel = _;\n        return _chart;\n    };\n\n    /**\n    #### .othersGrouper([grouperFunction])\n    Get or set the grouper funciton that will perform the insersion of data for the *Others* slice if the slices cap is\n    specified. By default the grouper function implements the following logic, you can and should change this function to\n    match your data structure. If set to a falsy value, no others will be added;\n    ```js\n    function (data, sum) {\n        data.push({\"key\": _othersLabel, \"value\": sum });\n    };\n    ```\n    **/\n    _chart.othersGrouper = function (_) {\n        if (!arguments.length) return _othersGrouper;\n        _othersGrouper = _;\n        return _chart;\n    };\n\n    dc.override(_chart, \"onClick\", function (d) {\n        if (d.others)\n            d.others.forEach(function(f) {\n                _chart.filter(f);\n            });\n        _chart._onClick(d);\n    });\n\n    return _chart;\n};\n\n/**\n## <a name=\"number-display\" href=\"#number-display\">#</a> Number Display [Concrete] < [Base Chart](#base-chart)\nA display of a single numeric value.\n\nExamples:\n\n* [Test Example](http://nickqizhu.github.io/dc.js/examples/number.html)\n\n#### dc.numberDisplay(parent[, chartGroup])\nCreate a Number Display instance and attach it to the given parent element.\n\nUnlike other charts, you do not need to set a dimension. Instead a valid group object must be provided and valueAccessor that is expected to return a single value.\n\nParameters:\n\n* parent : string - any valid d3 single selector representing typically a dom block element such as a div or span\n* chartGroup : string (optional) - name of the chart group this chart instance should be placed in. Once a chart is placed\n   in a certain chart group then any interaction with such instance will only trigger events and redraw within the same\n   chart group.\n\nReturn:\nA newly created number display instance\n\n```js\n// create a number display under #chart-container1 element using the default global chart group\nvar display1 = dc.numberDisplay(\"#chart-container1\");\n```\n\n**/\ndc.numberDisplay = function (parent, chartGroup) {\n    var SPAN_CLASS = 'number-display';\n    var _formatNumber = d3.format(\".2s\");\n    var _chart = dc.baseChart({});\n\n    _chart.dimension({}); // dummy dimension to remove warnings\n\n    /**\n    #### .value()\n    Calculate and return the underlying value of the display\n    **/\n    _chart.value = function () {\n         var valObj = _chart.group().all && _chart.group().all()[0] || _chart.group().value();\n         return _chart.valueAccessor()(valObj);\n    };\n\n    _chart.transitionDuration(250); // good default\n\n    _chart.doRender = function () {\n        var newValue = _chart.value(),\n            span     = _chart.selectAll(\".\"+SPAN_CLASS);\n\n        if(span.empty())\n            span = span.data([0])\n                .enter()\n                .append(\"span\")\n                .attr(\"class\", SPAN_CLASS);\n\n        span.transition()\n            .duration(_chart.transitionDuration())\n            .ease('quad-out-in')\n            .tween(\"text\", function () {\n                var interp = d3.interpolateNumber(this.lastValue || 0, newValue);\n                this.lastValue = newValue;\n                return function (t) {\n                    this.textContent = _chart.formatNumber()(interp(t));\n                };\n            });\n\n        return _chart;\n    };\n\n    _chart.doRedraw = function(){\n        return _chart.doRender();\n    };\n\n    /**\n    #### .formatNumber([formatter])\n    Get or set a function to format the value for the display. By default `d3.format(\".2s\");` is used.\n\n    **/\n    _chart.formatNumber = function (_) {\n        if (!arguments.length) return _formatNumber;\n        _formatNumber = _;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n\n\nreturn dc;}\n    if(typeof define === \"function\" && define.amd) {\n        define([\"d3\", \"crossfilter\"], _dc);\n    } else if(typeof module === \"object\" && module.exports) {\n        var _d3 = require('d3');\n        var _crossfilter = require('crossfilter');\n        // When using npm + browserify, 'crossfilter' is a function,\n        // since package.json specifies index.js as main function, and it\n        // does special handling. When using bower + browserify,\n        // there's no main in bower.json (in fact, there's no bower.json),\n        // so we need to fix it.\n        if (typeof _crossfilter !== \"function\") {\n            _crossfilter = _crossfilter.crossfilter;\n        }\n        module.exports = _dc(_d3, _crossfilter);\n    } else {\n        this.dc = _dc(d3, crossfilter);\n    }\n}\n)();\n","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","/**\n * IRIS Timelineviewer Chart (abstract class)\n *\n * Chart visualisation for timeline events - inherit from this class and override the #render method.\n *\n * @module IRIS.Timelineviewer.Chart\n * @class IRIS.Timelineviewer.Chart\n */\nimport EventEmitter from '../event-emitter';\nimport d3 from 'd3';\n\nexport default class Chart {\n\n  /**\n   * Constructs a new IRIS Timelineviewer chart. Note: This is an abstract class, and can not\n   * be instantiated directly (only derived classes can be instantiated).\n   *\n   * @class IRIS.Timelineviewer.Chart\n   * @constructor Timelineviewer.Chart\n   * @param {TimeLine} timeline the timeline this chart is visualising\n   * @example\n   *      new IRIS.Timelineviewer.Chart();\n   */\n  constructor(containerId, timeline) {\n    this._initializeEvents();\n    this._containerId = containerId;\n    this._timeline = timeline;\n  }\n\n  /**\n   * Hook into a chart event.\n   * @public\n   * @method on\n   * @param {string} eventName the event to hook into\n   * @param {function} callback the callback to run\n   * @returns {null}\n   */\n  on(eventName, callback) {\n    var self = this;\n    this._eventEmitter.on(eventName, (a, b, c) => callback.call(self, a, b, c));\n  }\n\n  /**\n   * Renders the chart into the appropriate element.\n   * @public\n   * @method render\n   * @param {object} dimension the dimension object (from crossfilter)\n   * @param {object} group the group object from crossfilter\n   */\n  render(dimension, group) {\n    throw 'Implement render method in derived class';\n  }\n\n  /**\n   * Sets the selection range (brush) dates.\n   * @public\n   * @method setSelectionRange\n   */\n  setSelectionRange(from, to) {\n    this._eventEmitter.emit('beforeSetSelectionRange');\n    this._selectionRange = (from && to) ? [from, to] : [];\n    this._eventEmitter.emit('afterSetSelectionRange');\n    this._eventEmitter.emit('afterSelectionRangeChanged');\n  }\n\n  /**\n   * Gets the selection range (brush) dates from the chart.\n   * @public\n   * @method getSelectionRange\n   * @returns {Array} array of 2 elements, representing from and to dates.\n   */\n  getSelectionRange() {\n    if (this._dcChart) {\n      return this._dcChart.filters()[0] || [];\n    } else {\n      return this._selectionRange;\n    }\n  }\n\n  /**\n   * Clears the selection range (brush) dates.\n   * @public\n   * @method clearSelectionRange\n   */\n  clearSelectionRange() {\n    this.setSelectionRange(null, null);\n  }\n\n  /**\n   * Advance the date window to the next period\n   *\n   * @public\n   * @method nextPeriod\n   */\n  nextPeriod() {\n    this._eventEmitter.emit('beforeNextPeriod');\n    this._timeline.timeGranularity[this._timeline.getOption('displayNavigationStep')].increment(this._currentStartDate);\n    this._timeline.timeGranularity[this._timeline.getOption('displayNavigationStep')].increment(this._currentEndDate);\n    this._eventEmitter.emit('afterNextPeriod');\n    this._eventEmitter.emit('periodChanged');\n  }\n\n  /**\n   * Retreat the date window to the previous period\n   *\n   * @public\n   * @method previousPeriod\n   */\n  previousPeriod() {\n    this._eventEmitter.emit('beforePreviousPeriod');\n    this._timeline.timeGranularity[this._timeline.getOption('displayNavigationStep')].decrement(this._currentStartDate);\n    this._timeline.timeGranularity[this._timeline.getOption('displayNavigationStep')].decrement(this._currentEndDate);\n    this._eventEmitter.emit('afterPreviousPeriod');\n    this._eventEmitter.emit('periodChanged');\n  }\n\n  /**\n   * Display width.\n   * @public\n   * @method width\n   */\n  width() {\n    return this._timeline.getOption('displayWidth');\n  }\n\n  /**\n   * Display height.\n   * @public\n   * @method height\n   */\n  height() {\n    return this._timeline.getOption('displayHeight');\n  }\n\n  /**\n   * Display margins.\n   * @public\n   * @method margins\n   */\n  margins() {\n    return this._timeline.getOption('displayMargins');\n  }\n\n  /**\n   * Display margins.\n   * @public\n   * @method margins\n   */\n  brushable() {\n    return this._timeline.getOption('displayInteractionType') === 'brush';\n  }\n\n  /**\n   * Display ticks.\n   * @public\n   * @method ticks\n   */\n  ticks() {\n    return this._timeline.getOption('displayTicks');\n  }\n\n  /**\n   * Display colours.\n   * @public\n   * @method colors\n   */\n  colors() {\n    return this._timeline.getOption('displayColors');\n  }\n\n  /**\n   * Display start date.\n   * @public\n   * @method startDate\n   */\n  startDate() {\n    return this._currentStartDate || new Date();\n  }\n\n  /**\n   * Display end date.\n   * @public\n   * @method endDate\n   */\n  endDate() {\n    return this._currentEndDate || new Date();\n  }\n\n  /**\n   * Display scale.\n   * @public\n   * @method scale\n   */\n  scale() {\n    return this._timeline.timeGranularity[this._timeline.getOption('displayScale')].scale;\n  }\n\n  /*\n   *\n   *\n   * ------------------ END OF PUBLIC INTERFACE ------------------\n   *\n   *\n   */\n\n  /**\n   * Initializes the _dcChart with settings common to all types of chart.\n   *\n   * @protected\n   * @method _initializeChart\n   * @param {function} chartConstructor the dc constructor to use (e.g. dc.barChart)\n   * @param {object} dimension the dimension object (from crossfilter)\n   * @param {object} group the group object from crossfilter\n   * @returns {void} null\n   */\n  _initializeChart(chartConstructor, dimension, group) {\n\n    this._dcChart = chartConstructor(`#${this._containerId}`)\n      .dimension(dimension)\n      .group(group)\n      .width(this.width())\n      .height(this.height())\n      .xUnits(this.scale())\n      .colors(this.colors())\n      .margins(this.margins())\n      .brushOn(this.brushable())\n      .x(d3.time.scale().domain([this.startDate(), this.endDate()]));\n\n    this._dcChart.yAxis().ticks(this.ticks());\n\n    // Bubble events\n    this._dcChart.on('postRender', () => this._eventEmitter.emit('afterRender'));\n\n    // Filtering\n    this._dcChart.on('filtered', () => this._filtering = true);\n    this._dcChart.on('postRedraw', () => {\n      if (this._filtering) {\n        this._eventEmitter.emit('dataBrush');\n        this._filtering = false;\n      };\n    });\n  }\n\n  /**\n   * Sets up the event emitter and initializes the various events the timeline responds to.\n   *\n   * @protected\n   * @method _initializeEvents\n   * @returns {string} name (and version, if available) of this widget\n   */\n  _initializeEvents() {\n    this._eventEmitter = new EventEmitter();\n    this.on('afterSetSelectionRange', this._updateDcChartSelectionRange);\n    this.on('dataBrush', () => this._eventEmitter.emit('afterSelectionRangeChanged'));\n    this.on('afterRender', this._initializeInteractions);\n  }\n\n  /**\n   * initializes the start / end dates.\n   *\n   * @protected\n   * @method _initializeDates\n   * @returns {void} null\n   */\n  _initializeDates() {\n    var startDate = this._timeline.getOption('displayStartDate');\n    this._currentStartDate = (startDate === 'auto') ? this._timeline.earliestDate() : startDate;\n\n    var endDate = this._timeline.getOption('displayEndDate');\n    this._currentEndDate = (endDate === 'auto') ? this._timeline.latestDate() : endDate;\n  }\n\n  /**\n   * initializes the chart interactions (set up in derived class).\n   *\n   * @protected\n   * @method _initializeInteractions\n   * @returns {void} null\n   */\n  _initializeInteractions() {\n    throw 'Implement interactions in derived class';\n  }\n\n  /**\n   * Updates the _dcChart with the current selection range (if one exists).\n   *\n   * @protected\n   * @method _updateDcChartSelectionRange\n   * @returns {void} null\n   */\n  _updateDcChartSelectionRange() {\n    if (this._dcChart) {\n      this._dcChart.filterAll();\n      if (this._selectionRange.length === 2) {\n        this._dcChart.filters().push(this._selectionRange);\n      }\n      this._dcChart.redraw();\n    }\n  }\n\n}","export default class EventEmitter {\n\n  constructor(logger) {\n    this._events = {};\n  }\n\n  /**\n   * Sets a listener for the specified event name.\n   *\n   * @public\n   * @method on\n   * @param {string} eventName name of the event to listen to.\n   * @param {function} callback function to call when the event occurs.\n   */\n  on(eventName, callback) {\n    this._events[eventName] = this._events[eventName] || [];\n    this._events[eventName].push(callback);\n  }\n\n  /**\n   * Sets a listener for the specified event name.\n   *\n   * @public\n   * @method emit\n   * @param {string} eventName name of the event to emit.\n   * @param {any} arg1, arg2, arg3 arguments to yield to the functioun\n   */\n  emit(eventName, arg1, arg2, arg3) {\n    (this._events[eventName] || []).forEach((fn) => {\n      fn && fn(arg1, arg2, arg3)\n    });\n  }\n\n}","module.exports = require(\"./crossfilter\").crossfilter;\n","import './styles/timelineviewer.css';\nimport 'dc/dc.css';\nimport TV from './components/timelineviewer.component';\n\nexport const TimelineViewer = TV;","/**\n * IRIS Timelineviewer Component\n *\n * @module IRIS.Timelineviewer.Timeline\n * @class IRIS.Timelineviewer.Timeline\n */\n\nimport d3 from 'd3';\nimport crossfilter from 'crossfilter';\nimport dc from 'dc/dc';\nimport LineChart from './charts/linechart';\nimport AreaChart from './charts/areachart';\nimport BarChart from './charts/barchart';\nimport DataTable from './charts/datatable';\nimport EventEmitter from './event-emitter';\n\nexport default class TimelineViewer {\n\n  get NAME() {\n    return 'IRIS Timelineviewer'\n  };\n\n  get VERSION() {\n    return null\n  } // TODO\n\n  get CSS_CONTAINER() {\n    return 'irisTimelineviewer'\n  };\n\n  get CSS_ATTR() {\n    return 'itAttribution'\n  };\n\n  // Used for sorting data by date\n  get _dateOrderComparator() {\n    return (a, b) => (a.dDate > b.dDate) ? 1 : -1\n  };\n\n  //\n  // Options\n  //\n  // Options are set upon construction, although can be changed post-construction using\n  // the #setOption public method.\n  static get DEFAULT_OPTIONS() {\n    return {\n      // Function specifying how to \"count\" each event. By default, each event counts as 1 on the y-axis, however\n      // it might be that your data actually contains its own count (e.g. item.count) - this function should return\n      // the number to count the incident as.\n      dataCountHandler: d => 1,\n\n      // By default, timeline viewer will expect each item in the data array to have a 'date' property with the\n      // date in it. If the date comes from somewhere else, override this functionality here.\n      dataDateHandler: d => d.date,\n\n      // By default the date is assumed to be dd/mm/yyyy. Override that using this option, see dc.js docs for\n      // available date formatting options.\n      dataDateFormat: '%d/%m/%Y',\n\n      // The chart type to display. Can be either \"bar\", \"line\" or \"area\".\n      displayChartType: 'bar',\n\n      // The interaction type. Can be either \"click\" or \"brush\".\n      displayInteractionType: 'click',\n\n      // The height of the component.\n      displayHeight: 300,\n\n      // The width of the component.\n      displayWidth: 1500,\n\n      // The margins of the component.\n      displayMargins: {\n        top: 10,\n        right: 50,\n        bottom: 30,\n        left: 30\n      },\n\n      // The date to initialize the start/end of the view to. Even though your data might cover 100+ years,\n      // you may want to intialize the view only looking at the 90's. Setting these dates creates a 'window'\n      // just looking at the dates you specify (the other dates will be \"off screen\" but will still exist).\n      // Setting the values to 'auto' will set the start/end to the max/min dates that the data goes to.\n      displayStartDate: 'auto',\n      displayEndDate: 'auto',\n\n      // The amount of time between each \"bar\" or \"point\". Can be set to 'seconds', 'minutes', 'days', 'weeks', 'months' or 'years'\n      displayScale: 'months',\n\n      // The amount of ticks on the Y axis.\n      displayTicks: 4,\n\n      // The colours to use for the bars / lines. Note that the option being an array is purely to accomodate future development\n      // where multiple lines / bars may appear on the same graph. the array's first element will be used for the colour, and can\n      // be specified in any CSS-compliant way (reserved colours or hex codes).\n      displayColors: ['steelblue'],\n\n      // The timeline allows users to skip forward and backward along the timeline using the #nextPeriod and #previousPeriod public\n      // mehtods - this option defines the amount of time that should be skipped. Can be set to 'seconds', 'minutes', 'days', 'weeks',\n      // 'months' or 'years'\n      displayNavigationStep: 'years',\n\n      // If a data table is rendered, this specifies the max number of records that it should display.\n      dataTableSize: 20,\n\n      // An array of functions defining the contents of each column in the data table. For example;\n      //\n      // dataTableColumns: [\n      //  function(d) { return d.dDate; },\n      //  function(d) { return d.name; },\n      //  function(d) { return d.description; }\n      // ]\n      //\n      dataTableColumns: null,\n\n      // If using a data table, you can specify a grouping rule to group data together (e.g. \"by year\"). This defaults to just\n      // grouping by nothing, however you could group by year / months / name / anything.\n      dataTableGroupingRule: d => '&nbsp;'\n    }\n  };\n\n  //\n  // The timeline emits the following events\n  //\n  // beforeRender\n  // afterRender\n  // beforeSetData\n  // afterSetData\n  // beforeSetFilter\n  // afterSetFilter\n  // beforeSetSelectionRange\n  // afterSetSelectionRange\n  // afterSelectionRangeChanged\n  // beforeSetOption:{optionName}\n  // afterSetOption:{optionName}\n  // beforeCreateDataTable\n  // afterCreateDataTable\n  // beforePreviousPeriod\n  // afterPreviousPeriod\n  // beforeNextPeriod\n  // afterNextPeriod\n  // periodChanged\n  // dataClick\n  // dataBrush\n  //\n\n  // Time granularity - used thorughout the chart and timeline modules to tie human-readable concepts such\n  // as days, weeks etc. into d3 concepts. Possibly consider moving this out into a seperate module.\n  get timeGranularity() {\n    return {\n      seconds: {\n        singular: d3.time.second,\n        scale: d3.time.seconds,\n        increment: (d) => d.setSeconds(d.getSeconds() + 1),\n        decrement: (d) => d.setSeconds(d.getSeconds() - 1)\n      },\n      minutes: {\n        singular: d3.time.minute,\n        scale: d3.time.minutes,\n        increment: (d) => d.setMinutes(d.getMinutes() + 1),\n        decrement: (d) => d.setMinutes(d.getMinutes() - 1)\n      },\n      hours: {\n        singular: d3.time.hour,\n        scale: d3.time.hours,\n        increment: (d) => d.setHours(d.getHours() + 1),\n        decrement: (d) => d.setHours(d.getHours() - 1)\n      },\n      days: {\n        singular: d3.time.day,\n        scale: d3.time.days,\n        increment: (d) => d.setDate(d.getDate() + 1),\n        decrement: (d) => d.setDate(d.getDate() - 1)\n      },\n      weeks: {\n        singular: d3.time.week,\n        scale: d3.time.weeks,\n        increment: (d) => d.setDate(d.getDate() + 7),\n        decrement: (d) => d.setDate(d.getDate() - 7)\n      },\n      months: {\n        singular: d3.time.month,\n        scale: d3.time.months,\n        increment: (d) => d.setMonth(d.getMonth() + 1),\n        decrement: (d) => d.setMonth(d.getMonth() - 1)\n      },\n      years: {\n        singular: d3.time.year,\n        scale: d3.time.years,\n        increment: (d) => d.setFullYear(d.getFullYear() + 1),\n        decrement: (d) => d.setFullYear(d.getFullYear() - 1)\n      }\n    }\n  };\n\n\n  /**\n   * Constructs a new IRIS Timelineviewer instance.\n   * @class IRIS.Timelineviewer.Timeline\n   * @constructor Timelineviewer.Timeline\n   * @example\n   *      new IRIS.Timelineviewer.Timeline(div, options);\n   * @param {HTMLDivElement} div the div in which the visualisation will be rendered, e.g. '#map'\n   * @param options visualisation options (see 'options' property)\n   */\n  constructor(div, options = {}) {\n    this._rootDiv = div;\n    this._options = Object.assign({}, TimelineViewer.DEFAULT_OPTIONS, options)\n\n    // create div\n    this._containerElement = document.createElement('div');\n    this._containerElement.className = this.CSS_CONTAINER;\n    this._rootDiv.appendChild(this._containerElement);\n\n    this._attributionElement = document.createElement('div');\n    this._attributionElement.className = this.CSS_ATTR;\n    this._attributionElement.innerHTML = '';\n    this._containerElement.appendChild(this._attributionElement);\n\n    this._data = [];\n\n    this._initializeChart();\n    this._initializeEvents();\n  }\n\n  /**\n   * Create a data table within the specified element.\n   *\n   * @public\n   * @method createDataTable\n   * @param {HtmlElement} dataTableContainer The element to put the data table in. Must have an ID presently.\n   * @returns {null}\n   */\n  createDataTable(dataTableContainerId) {\n    this._eventEmitter.emit('beforeCreateDataTable');\n    this._dataTable = new DataTable(dataTableContainerId, this);\n    this._eventEmitter.emit('afterCreateDataTable');\n  }\n\n  /**\n   * Hook into a timeline event.\n   *\n   * @public\n   * @method on\n   * @param {string} eventName the event to hook into\n   * @param {function} callback the callback to run\n   * @returns {null}\n   */\n  on(eventName, callback) {\n    var self = this;\n    this._eventEmitter.on(eventName, (a, b, c) => callback.call(self, a, b, c));\n  }\n\n  /**\n   * Deconstructor\n   *\n   * @public\n   * @method destroy\n   */\n  destroy() {\n    if (typeof this._containerElement !== 'undefined' && this._containerElement != null) {\n      this._containerElement.remove();\n      delete this._containerElement;\n    }\n  }\n\n  /**\n   * Returns the value for the specified option.\n   *\n   * @public\n   * @method getOption\n   * @param {string} optionName name of the option to retrieve a value for\n   * @returns {object} the value of the specified option\n   */\n  getOption(optionName) {\n    return this._options[optionName];\n  }\n\n  /**\n   * Sets the value for the specified option.\n   *\n   * @public\n   * @method setOption\n   * @param {string} optionName name of the option to set a value for\n   * @param {object} optionValue value to set the option to\n   * @returns {null}\n   */\n  setOption(optionName, optionValue) {\n    this._eventEmitter.emit(`beforeSetOption`);\n    this._eventEmitter.emit(`beforeSetOption:${optionName}`);\n    this._options[optionName] = optionValue;\n    this._eventEmitter.emit(`afterSetOption`);\n    this._eventEmitter.emit(`afterSetOption:${optionName}`);\n  }\n\n  /**\n   * Gets the data being rendered, filtered if there was a filter applied.\n   *\n   * @public\n   * @method getData\n   * @returns {object} the data being rendered\n   */\n  getData() {\n    var filter = this._filter || function () {\n      return true;\n    };\n    return this._data.filter(filter);\n  }\n\n  /**\n   * Sets the data being rendered. Emits before/after events.\n   *\n   * @public\n   * @method setData\n   * @param {object} data the data to be rendered\n   * @returns {null}\n   */\n  setData(data) {\n    this._eventEmitter.emit('beforeSetData');\n    this._data = data;\n    this._eventEmitter.emit('afterSetData');\n  }\n\n  /**\n   * Returns the data currently selected by the brush.\n   * @public\n   * @method getSelectedData\n   */\n  getSelectedData() {\n    var selectionRange = this._chart.getSelectionRange();\n\n    if (selectionRange.length === 0) {\n      return [];\n    } else {\n      return this.getData().filter(\n        (d) => d.dDate >= selectionRange[0] && d.dDate <= selectionRange[1]\n      );\n    }\n  }\n\n  /**\n   * Sets the selection range for the chart (as if the user had dragged a brush).\n   *\n   * @public\n   * @method setSelectionRange\n   * @param {Date} from the start date\n   * @param {Date} to the end date\n   * @returns {null}\n   */\n  setSelectionRange(from, to) {\n    this._chart.setSelectionRange(from, to);\n  }\n\n  /**\n   * Gets the selection range for the chart (as if the user had dragged a brush).\n   *\n   * @public\n   * @method getSelectionRange\n   * @returns {Array} array representing from/to dates.\n   */\n  getSelectionRange() {\n    return this._chart.getSelectionRange();\n  }\n\n  /**\n   * Clears the selection range for the chart.\n   *\n   * @public\n   * @method clearSelectionRange\n   */\n  clearSelectionRange() {\n    this._chart.clearSelectionRange();\n  }\n\n  /**\n   * Sets the filter for the chart.\n   *\n   * @public\n   * @method setFilter\n   * @param {function} filter function that provides filtering functionality\n   * @returns {null}\n   */\n  setFilter(filter) {\n    this._eventEmitter.emit('beforeSetFilter');\n    this._filter = filter;\n    this._eventEmitter.emit('afterSetFilter');\n  }\n\n  /**\n   * Gets the filter for the chart.\n   *\n   * @public\n   * @method getFilter\n   * @returns {function} filter function .\n   */\n  getFilter() {\n    return this._filter;\n  }\n\n  /**\n   * Clears the filter for the chart.\n   *\n   * @public\n   * @method clearFilter\n   * @returns {null}\n   */\n  clearFilter() {\n    this.setFilter(null);\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @public\n   * @method render\n   * @returns {null}\n   */\n  render() {\n    this._eventEmitter.emit('beforeRender');\n    this._chart.render(this._dimension, this._group);\n    if (this._dataTable) {\n      this._dataTable.render(this._dimension);\n    }\n  }\n\n  /**\n   * Finds the earliest date represented by the current data.\n   *\n   * @public\n   * @method earliestDate\n   * @returns {Date} the earliest date in the current data array\n   */\n  earliestDate() {\n    var earliestDataItem = this.getData().sort(this._dateOrderComparator)[0];\n    return earliestDataItem ? earliestDataItem.dDate : new Date();\n  }\n\n  /**\n   * Finds the latest date represented by the current data.\n   *\n   * @public\n   * @method latestDate\n   * @returns {Date} the latest date in the current data array\n   */\n  latestDate() {\n    var data = this.getData().sort(this._dateOrderComparator);\n    var latestDataItem = data[data.length - 1];\n    return latestDataItem ? latestDataItem.dDate : new Date();\n  }\n\n  /**\n   * Advance the date window of the chart.\n   *\n   * @public\n   * @method nextPeriod\n   * @returns {null}\n   */\n  nextPeriod() {\n    this._chart.nextPeriod();\n  }\n\n  /**\n   * Retreats the date window of the chart.\n   *\n   * @public\n   * @method previousPeriod\n   * @returns {null}\n   */\n  previousPeriod() {\n    this._chart.previousPeriod();\n  }\n\n  /*\n   *\n   *\n   * ------------------ END OF PUBLIC INTERFACE ------------------\n   *\n   *\n   */\n\n  /**\n   * Sets up the event emitter and subscribes to various events.\n   *\n   * @private\n   * @method _initializeEvents\n   * @returns {null}\n   */\n  _initializeEvents() {\n    var self = this;\n    this._eventEmitter = new EventEmitter();\n\n    this.on('afterSetData', this._parseDataDates);\n    this.on('beforeRender', this._setupDcProperties);\n    this.on('afterSetData', () => self._chart._initializeDates());\n    this.on('afterSetOption:displayChartType', self._initializeChart);\n\n    // Date-changing functionaliy\n    var dateChangedFn = () => {\n      self._eventEmitter.emit('periodChanged');\n      self._chart._initializeDates();\n    };\n    this.on('afterSetOption:displayStartDate', dateChangedFn);\n    this.on('afterSetOption:displayEndDate', dateChangedFn);\n\n    // Bubble up various chart events to allow listening from the timeline itself.\n    this._chart.on('afterRender', () => self._eventEmitter.emit('afterRender'));\n    this._chart.on('beforeSetSelectionRange', () => self._eventEmitter.emit('beforeSetSelectionRange'));\n    this._chart.on('afterSetSelectionRange', () => self._eventEmitter.emit('afterSetSelectionRange'));\n    this._chart.on('beforeNextPeriod', () => self._eventEmitter.emit('beforeNextPeriod'));\n    this._chart.on('beforePreviousPeriod', () => self._eventEmitter.emit('beforePreviousPeriod'));\n    this._chart.on('afterNextPeriod', () => self._eventEmitter.emit('afterNextPeriod'));\n    this._chart.on('afterPreviousPeriod', () => self._eventEmitter.emit('afterPreviousPeriod'));\n    this._chart.on('periodChanged', () => self._eventEmitter.emit('periodChanged'));\n    this._chart.on('dataClick', (t) => self._handleDataClick(t));\n    this._chart.on('dataBrush', () => self._handleDataBrush());\n    this._chart.on('afterSelectionRangeChanged', () => self._eventEmitter.emit('afterSelectionRangeChanged'));\n  }\n\n  /**\n   * Handles the act of a user having brushed the chart.\n   *\n   * @private\n   * @method _handleDataBrush\n   */\n  _handleDataBrush() {\n    this._eventEmitter.emit('dataBrush', this.getSelectionRange(), this.getSelectedData());\n  }\n\n  /**\n   * Handles the act of a user having clicked the chart.\n   *\n   * @private\n   * @method _handleDataClick\n   */\n  _handleDataClick(target) {\n    this._eventEmitter.emit('dataClick', target.data.key, this._dimension.filter(target.data.key).top(target.data.value));\n  }\n\n  /**\n   * Sets up the chart based on the displayChartType option.\n   *\n   * @private\n   * @method _initializeChart\n   */\n  _initializeChart() {\n    var chartConstructor;\n\n    switch (this._options.displayChartType) {\n      case 'line':\n        chartConstructor = LineChart;\n        break;\n      case 'area':\n        chartConstructor = AreaChart;\n        break;\n      default:\n        chartConstructor = BarChart;\n        break;\n    }\n    this._chart = new chartConstructor(this._rootDiv.id, this);\n  }\n\n  /**\n   * Adds a parsed version of the date to the objects in the _data array (called dDate). Called automatically\n   * after data is set (afterSetData event).\n   *\n   * @private\n   * @method _parseDataDates\n   * @returns {null}\n   */\n  _parseDataDates() {\n    if (this._data) {\n      var dateFormat = d3.time.format(this._options.dataDateFormat);\n      for (var i = 0; i < this._data.length; i++) {\n        this._data[i].dDate = dateFormat.parse(this._options.dataDateHandler(this._data[i]));\n      }\n    }\n  }\n\n  /**\n   * Sets up the various DC variables required to start rendering. This method will be called\n   * automatically prior to rendering the timeline (beforeRender event).\n   *\n   * @private\n   * @method _setupDcProperties\n   * @returns {null}\n   */\n  _setupDcProperties() {\n    if (this._data) {\n      this._ndx = crossfilter(this.getData());\n      this._dimension = this._ndx.dimension(d => this.timeGranularity[this._options.displayScale].singular(d.dDate));\n      this._group = this._dimension.group().reduceSum(this._options.dataCountHandler);\n    }\n  }\n\n  /**\n   * Returns the name (and version, if available) of this widget.\n   *\n   * @private\n   * @method _getName\n   * @returns {string} name (and version, if available) of this widget\n   */\n  _getName() {\n    return `${this.NAME}${this.VERSION || ''}`;\n  }\n\n}","(function(exports){\ncrossfilter.version = \"1.3.12\";\nfunction crossfilter_identity(d) {\n  return d;\n}\ncrossfilter.permute = permute;\n\nfunction permute(array, index) {\n  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\nvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\nbisect.by = bisect_by;\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\nvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\nheap.by = heap_by;\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\nvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\nheapselect.by = heapselect_by;\n\nfunction heapselect_by(f) {\n  var heap = heap_by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        x,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (x = f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\nvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\ninsertionsort.by = insertionsort_by;\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\nvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\nquicksort.by = quicksort_by;\n\nfunction quicksort_by(f) {\n  var insertionsort = insertionsort_by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\nvar crossfilter_array8 = crossfilter_arrayUntyped,\n    crossfilter_array16 = crossfilter_arrayUntyped,\n    crossfilter_array32 = crossfilter_arrayUntyped,\n    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\nif (typeof Uint8Array !== \"undefined\") {\n  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\nfunction crossfilter_null() {\n  return null;\n}\nfunction crossfilter_zero() {\n  return 0;\n}\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\nexports.crossfilter = crossfilter;\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      m = 0, // a bit mask representing which dimensions are in use\n      M = 8, // number of dimensions that can fit in `filters`\n      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = []; // when data is removed\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters = crossfilter_arrayLengthen(filters, n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters.\n  function removeData() {\n    var newIndex = crossfilter_index(n, n),\n        removed = [];\n    for (var i = 0, j = 0; i < n; ++i) {\n      if (filters[i]) newIndex[i] = j++;\n      else removed.push(i);\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(0, [], removed); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var i = 0, j = 0, k; i < n; ++i) {\n      if (k = filters[i]) {\n        if (i !== j) filters[j] = k, data[j] = data[i];\n        ++j;\n      }\n    }\n    data.length = j;\n    while (n > j) filters[--n] = 0;\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value) {\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n        zero = ~one, // inverted one, e.g., 11110111\n        values, // sorted, cached array\n        index, // value rank ↦ object id\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        sort = quicksort_by(function(i) { return newValues[i]; }),\n        refilter = crossfilter_filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Incorporate any existing data into this dimension, and make sure that the\n    // filter bitset is wide enough to handle the new dimension.\n    m |= one;\n    if (M >= 32 ? !one : m & -(1 << M)) {\n      filters = crossfilter_arrayWiden(filters, M <<= 1);\n    }\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      // Permute new values into natural order using a sorted index.\n      newValues = newData.map(value);\n      newIndex = sort(crossfilter_range(n1), 0, n1);\n      newValues = permute(newValues, newIndex);\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n      if (refilterFunction) {\n        for (i = 0; i < n1; ++i) {\n          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n        }\n      } else {\n        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n      var oldValues = values,\n          oldIndex = index,\n          i0 = 0,\n          i1 = 0;\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = new Array(n);\n      index = crossfilter_index(n, n);\n\n      // Merge the old and new sorted values, and old and new index.\n      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0++];\n        } else {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1++] + n0;\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++i) {\n        values[i] = oldValues[i0];\n        index[i] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++i) {\n        values[i] = newValues[i1];\n        index[i] = newIndex[i1] + n0;\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (filters[k = index[i]]) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[k];\n          ++j;\n        }\n      }\n      values.length = j;\n      while (j < n) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [];\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilter = crossfilter_filterAll;\n\n      filterIndexFunction(refilterFunction = f);\n\n      lo0 = 0;\n      hi0 = n;\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [];\n\n      for (i = 0; i < n; ++i) {\n        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n          if (x) filters[k] &= zero, added.push(k);\n          else filters[k] |= one, removed.push(k);\n        }\n      }\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k) {\n      var array = [],\n          i = hi0,\n          j;\n\n      while (--i >= lo0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k) {\n      var array = [],\n          i = lo0,\n          j;\n\n      while (i < hi0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n        var oldGroups = groups,\n            reIndex = crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            if (g0 = oldGroups[++i0]) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n          while (!(x1 > x)) {\n            groupIndex[j = newIndex[i1] + n0] = k;\n            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater than all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n          groupIndex[i0] = reIndex[groupIndex[i0]];\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if (++k === groupCapacity) {\n            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData() {\n        if (k > 1) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK);\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          for (var i = 0, j = 0; i < n; ++i) {\n            if (filters[i]) {\n              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n              ++j;\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1) {\n            // Reindex the group index using seenGroups to find the new index.\n            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var i = 0; i < n; ++i) if (filters[i]) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      function updateMany(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g;\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      function updateOne(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = heapselect_by(valueOf);\n        heap = heap_by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      m &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = n0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, added, removed) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (!filters[k = added[i]]) {\n          reduceValue = reduceAdd(reduceValue, data[k]);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters[k = removed[i]] === filterOne) {\n          reduceValue = reduceRemove(reduceValue, data[k]);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      for (i = 0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? crossfilter_array8 : m < 0x10001\n      ? crossfilter_array16\n      : crossfilter_array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n})(typeof exports !== 'undefined' && exports || this);\n","/**\n * IRIS Timelineviewer LineChart\n *\n * Linechart visualisation for timeline events.\n *\n * @module IRIS.LineChart\n * @class IRIS.LineChart\n */\nimport Chart from './chart';\nimport dc from 'dc/dc';\n\nexport default class LineChart extends Chart {\n\n  /**\n   * Renders the chart into the appropriate element.\n   * @public\n   * @method render\n   * @param {object} dimension the dimension object (from crossfilter)\n   * @param {object} group the group object from crossfilter\n   */\n  render(dimension, group) {\n    this._initializeChart(dc.lineChart, dimension, group);\n\n    this._dcChart\n      .renderArea(false);\n\n    this._dcChart.render();\n  }\n\n  /**\n   * Interaction evetns for line charts\n   * @public\n   */\n  _initializeInteractions() {\n    this._dcChart.selectAll('.dot').on('click', (t) => this._eventEmitter.emit('dataClick', t));\n  }\n\n}","/**\n * IRIS Timelineviewer AreaChart\n *\n * Areachart visualisation for timeline events.\n *\n * @module IRIS.AreaChart\n * @class IRIS.AreaChart\n */\n\nimport Chart from './chart';\nimport dc from 'dc/dc';\n\nexport default class AreaChart extends Chart {\n\n  /**\n   * Renders the chart into the appropriate element.\n   * @public\n   * @method render\n   * @param {object} dimension the dimension object (from crossfilter)\n   * @param {object} group the group object from crossfilter\n   */\n  render(dimension, group) {\n    this._initializeChart(dc.lineChart, dimension, group);\n\n    this._dcChart\n      .renderArea(true);\n\n    this._dcChart.render();\n  }\n\n  /**\n   * Interaction evetns for line charts\n   * @public\n   */\n  _initializeInteractions() {\n    this._dcChart.selectAll('.dot').on('click', (t) => this._eventEmitter.emit('dataClick', t));\n  }\n\n}","/**\n * IRIS Timelineviewer BarChart\n *\n * Barchart visualisation for timeline events.\n *\n * @module IRIS.BarChart\n * @class IRIS.BarChart\n */\nimport Chart from './chart';\nimport dc from 'dc/dc';\n\nexport default class BarChart extends Chart {\n\n  /**\n   * Renders the chart into the appropriate element.\n   * @public\n   * @method render\n   * @param {object} dimension the dimension object (from crossfilter)\n   * @param {object} group the group object from crossfilter\n   */\n  render(dimension, group) {\n    this._initializeChart(dc.barChart, dimension, group);\n\n    this._dcChart.render();\n  }\n\n  /**\n   * Interaction evetns for bar charts\n   * @public\n   */\n  _initializeInteractions() {\n    this._dcChart.selectAll('.bar').on('click', (t) => this._eventEmitter.emit('dataClick', t));\n  }\n}","/**\n * IRIS Timelineviewer DataTable\n *\n * DataTable visualisation for timeline events.\n *\n * @module IRIS.DataTable\n * @class IRIS.DataTable\n */\nimport d3 from 'd3';\nimport dc from 'dc/dc';\nimport EventEmitter from '../event-emitter';\n\nexport default class DataTable {\n\n  /**\n   * Constructs a new IRIS Timelineviewer data table.\n   * @class IRIS.Timelineviewer.DataTable\n   * @constructor Timelineviewer.DataTable\n   * @param {string} containerId id of the element to house the data table\n   * @example\n   *      new IRIS.Timelineviewer.DataTable();\n   */\n  constructor(containerId, timeline) {\n    this._containerId = containerId;\n    this._timeline = timeline;\n    this._eventEmitter = new EventEmitter();\n  }\n\n  /**\n   * Hook into a data table event.\n   * @public\n   * @method on\n   * @param {string} eventName the event to hook into\n   * @param {function} callback the callback to run\n   * @returns {null}\n   */\n  on(eventName, callback) {\n    const self = this;\n    this._eventEmitter.on(eventName, () => callback.call(self));\n  }\n\n  /**\n   * Returns true if this data table is valid, meaning it can be rendered. A data table\n   * is considered valid only if the grouping rules, columns and element have been specified\n   * for the timeline.\n   *\n   * @public\n   * @method valid\n   * @returns {boolean}\n   */\n  valid() {\n    return !(this.columns() === null || this.groupingRule() === null || this._containerId === null);\n  }\n\n  /**\n   * Renders the data table into the appropriate element.\n   * @public\n   * @method render\n   * @param {object} dimension the dimension object (from crossfilter)\n   */\n  render(dimension) {\n    if (!this.valid()) {\n      return;\n    }\n\n    var self = this;\n\n    this._dcDataTable = dc.dataTable(`#${this._containerId}`)\n      .dimension(dimension)\n      .group(this.groupingRule())\n      .columns(this.columns())\n      .size(this.size())\n      .sortBy(d => d.dDate)\n      .order(d3.ascending);\n\n    // Bubble events\n    this._dcDataTable.on('postRender', () => self._eventEmitter.emit('afterRender'));\n    this._dcDataTable.render();\n  }\n\n  /**\n   * Maximum size that the data table can be.\n   * @public\n   * @method size\n   */\n  size() {\n    return this._timeline.getOption('dataTableSize');\n  }\n\n  /**\n   * Maximum size that the data table can be.\n   * @public\n   * @method columns\n   */\n  columns() {\n    return this._timeline.getOption('dataTableColumns');\n  }\n\n  /**\n   * Maximum size that the data table can be.\n   * @public\n   * @method columns\n   */\n  groupingRule() {\n    return this._timeline.getOption('dataTableGroupingRule');\n  }\n\n}"],"sourceRoot":""}